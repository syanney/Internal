{"version":3,"sources":["webpack:///main-bundle.js","webpack:///./node_modules/rxjs/util/EmptyError.js","webpack:///./node_modules/rxjs/operator/mergeMap.js","webpack:///./components/root-module/home/home.component.ts","webpack:///./components/root-module/page-not-found/page-not-found.component.ts","webpack:///./node_modules/@angular/router/@angular/router.es5.js","webpack:///./node_modules/rxjs/observable/of.js","webpack:///./node_modules/rxjs/operator/concatMap.js","webpack:///./node_modules/rxjs/operator/filter.js","webpack:///./components/main.ts","webpack:///./components/root-module/root.module.ts","webpack:///./components/root-module/root-routing.module.ts","webpack:///./node_modules/rxjs/BehaviorSubject.js","webpack:///./node_modules/rxjs/observable/from.js","webpack:///./node_modules/rxjs/observable/FromObservable.js","webpack:///./node_modules/rxjs/observable/IteratorObservable.js","webpack:///./node_modules/rxjs/observable/ArrayLikeObservable.js","webpack:///./node_modules/rxjs/operator/observeOn.js","webpack:///./node_modules/rxjs/Notification.js","webpack:///./node_modules/rxjs/operator/every.js","webpack:///./node_modules/rxjs/operator/first.js","webpack:///./node_modules/rxjs/operator/last.js","webpack:///./node_modules/rxjs/operator/reduce.js","webpack:///./node_modules/rxjs/operator/catch.js","webpack:///./node_modules/rxjs/operator/concatAll.js","webpack:///./components/root-module/home/home.component.html","webpack:///./components/root-module/page-not-found/page-not-found.component.html","webpack:///./components/root-module/root.component.ts","webpack:///./components/root-module/root.component.html"],"names":["webpackJsonp","Array","concat","module","exports","__webpack_require__","__extends","this","d","b","__","constructor","p","hasOwnProperty","prototype","Object","create","EmptyError","_super","err","call","name","stack","message","Error","mergeMap","project","resultSelector","concurrent","Number","POSITIVE_INFINITY","lift","MergeMapOperator","subscribeToResult_1","OuterSubscriber_1","observer","source","subscribe","MergeMapSubscriber","destination","hasCompleted","buffer","active","index","_next","value","_tryNext","push","result","error","_innerSub","ish","add","subscribeToResult","_complete","length","complete","notifyNext","outerValue","innerValue","outerIndex","innerIndex","innerSub","_notifyResultSelector","next","notifyComplete","remove","shift","OuterSubscriber","__decorate","decorators","target","key","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","core_1","HomeComponent","Component","selector","template","PageNotFoundComponent","__webpack_exports__","convertToParamMap","params","ParamsAsMap","navigationCancelingError","NAVIGATION_CANCELING_ERROR","isNavigationCancelingError","defaultUrlMatcher","segments","segmentGroup","route","parts","split","pathMatch","hasChildren","posParams","part","segment","startsWith","substring","path","consumed","slice","validateConfig","config","parentPath","validateNode","getFullPath","fullPath","isArray","component","outlet","PRIMARY_OUTLET","redirectTo","children","loadChildren","matcher","charAt","currentRoute","shallowEqualArrays","a","shallowEqual","k1","keys","k2","flatten","arr","apply","last$1","forEach","map$$1","callback","prop","waitForMap","obj","fn","__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__","waitHead","waitTail","res","k","mapped","__WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__","concat$","__WEBPACK_IMPORTED_MODULE_16_rxjs_operator_concatAll__","last$","__WEBPACK_IMPORTED_MODULE_10_rxjs_operator_last__","andObservables","observables","merged$","__WEBPACK_IMPORTED_MODULE_19_rxjs_operator_mergeAll__","__WEBPACK_IMPORTED_MODULE_8_rxjs_operator_every__","wrapIntoObservable","__WEBPACK_IMPORTED_MODULE_2__angular_core__","__WEBPACK_IMPORTED_MODULE_18_rxjs_observable_fromPromise__","Promise","resolve","createEmptyUrlTree","UrlTree","UrlSegmentGroup","containsTree","container","containee","exact","equalQueryParams","queryParams","equalSegmentGroups","root","containsQueryParams","containsSegmentGroup","equalPath","numberOfChildren","every","containsSegmentGroupHelper","containeePaths","current","equalSegments","as","bs","parameters","mapChildrenIntoArray","child","childOutlet","serializePaths","map","serializePath","join","serializeSegment","primary","children_1","v","encode","s","encodeURIComponent","replace","decode","decodeURIComponent","serializeParams","serializeQueryParams","strParams","matchSegments","str","match","SEGMENT_RE","matchQueryParams","QUERY_PARAM_RE","matchUrlQueryParamValue","QUERY_PARAM_VALUE_RE","noMatch","__WEBPACK_IMPORTED_MODULE_14_rxjs_Observable__","obs","NoMatch","absoluteRedirect","newTree","AbsoluteRedirect","namedOutletsRedirect","canLoadFails","applyRedirects","moduleInjector","configLoader","urlSerializer","urlTree","ApplyRedirects","runCanLoadGuard","canLoad","__WEBPACK_IMPORTED_MODULE_5_rxjs_observable_from__","injectionToken","guard","get","matched","consumedSegments","lastChild","positionalParamSegments","slicedSegments","containsEmptyPathRedirectsWithNamedOutlets","createChildrenForEmptySegments","mergeTrivialChildren","containsEmptyPathRedirects","addEmptySegmentsToChildrenIfNeeded","routes","_i","routes_1","isEmptyPathRedirect","getOutlet","assign","primarySegmentGroup","routes_2","some","undefined","findNode","node","_a","node_1","findPath","unshift","createEmptyState","rootComponent","snapshot","createEmptyStateSnapshot","emptyUrl","__WEBPACK_IMPORTED_MODULE_3_rxjs_BehaviorSubject__","UrlSegment","emptyParams","emptyData","emptyQueryParams","fragment","activated","ActivatedRoute","RouterState","TreeNode","ActivatedRouteSnapshot","RouterStateSnapshot","inheritedParamsDataResolve","pathToRoot","pathFromRoot","inhertingStartingFrom","parent","routeConfig","reduce","curr","data","_resolvedData","setRouterState","state","_routerState","serializeNode","advanceActivatedRoute","currentSnapshot","nextSnapshot","_futureSnapshot","url","equalParamsAndUrlSegments","equalUrlParams","parentsMismatch","createRouterState","routeReuseStrategy","prevState","createNode","_root","shouldReuseRoute","createOrReuseChildren","retrieve","tree_1","setFutureSnapshotsOfActivatedRoutes","createActivatedRoute","createUrlTree","commands","tree","nav","computeNavigation","toRoot","startingPosition","findStartingPosition","processChildren","updateSegmentGroupChildren","updateSegmentGroup","isMatrixParams","command","outlets","segmentPath","oldSegmentGroup","newSegmentGroup","qp","replaceSegment","oldSegment","newSegment","outletName","Navigation","numberOfDoubleDots","isAbsolute","cmd","cmdIdx","outlets_1","urlPart","partIndex","Position","_lastPathIndex","_urlSegment","modifier","createPositionApplyingDoubleDots","group","g","ci","dd","getPath","getOutlets","_b","startIndex","m","prefixedWith","slicedCommands","commandIndex","pathIndex","createNewSegmentGroup","outlets_2","children_2","currentCommandIndex","currentPathIndex","compare","paths","createNewSegmentChildren","stringify","recognize","rootComponentType","Recognizer","sortActivatedRouteSnapshots","nodes","sort","localeCompare","getChildConfig","match$1","NoMatch$1","checkOutletNameUniqueness","names","n","routeWithSameOutletName","toString","getSourceSegmentGroup","_sourceSegment","getPathIndexShift","_segmentIndexShift","split$1","containsEmptyPathMatchesWithNamedOutlets","s_1","createChildrenForEmptyPaths","containsEmptyPathMatches","s_2","addEmptyPathsToChildrenIfNeeded","routes_3","emptyPathMatch","getOutlet$1","primarySegment","routes_4","getData","getResolve","defaultErrorHandler","defaultRouterHook","advanceActivatedRouteNodeAndItsChildren","parentLoadedConfig","_routeConfig","_loadedConfig","closestLoadedConfig","nodeChildrenAsMap","validateCommands","attrBoolValue","routerNgProbeToken","Router","provideLocationStrategy","platformLocationStrategy","baseHref","options","useHash","__WEBPACK_IMPORTED_MODULE_1__angular_common__","provideForRootGuard","router","provideRoutes","provide","multi","useValue","ROUTES","setupRouter","ref","contexts","location","injector","loader","compiler","opts","urlHandlingStrategy","errorHandler","enableTracing","dom_1","__WEBPACK_IMPORTED_MODULE_20__angular_platform_browser__","events","e","logGroup","log","logGroupEnd","rootRoute","routerState","getAppInitializer","appInitializer","bind","getBootstrapListener","bootstrapListener","provideRouterInitializer","RouterInitializer","useFactory","deps","ROUTER_INITIALIZER","useExisting","RouterLink","RouterLinkWithHref","RouterLinkActive","RouterOutlet","GuardsCheckEnd","GuardsCheckStart","NavigationCancel","NavigationEnd","NavigationError","NavigationStart","ResolveEnd","ResolveStart","RouteConfigLoadEnd","RouteConfigLoadStart","RoutesRecognized","RouteReuseStrategy","ROUTER_CONFIGURATION","RouterModule","ChildrenOutletContexts","OutletContext","NoPreloading","PreloadAllModules","PreloadingStrategy","RouterPreloader","UrlHandlingStrategy","DefaultUrlSerializer","UrlSerializer","VERSION","ROUTER_PROVIDERS","ROUTER_FORROOT_GUARD","Tree","__WEBPACK_IMPORTED_MODULE_0_tslib__","__WEBPACK_IMPORTED_MODULE_4_rxjs_Subject__","__WEBPACK_IMPORTED_MODULE_7_rxjs_operator_concatMap__","__WEBPACK_IMPORTED_MODULE_9_rxjs_operator_first__","__WEBPACK_IMPORTED_MODULE_12_rxjs_operator_mergeMap__","__WEBPACK_IMPORTED_MODULE_13_rxjs_operator_reduce__","__WEBPACK_IMPORTED_MODULE_15_rxjs_operator_catch__","__WEBPACK_IMPORTED_MODULE_17_rxjs_util_EmptyError__","__WEBPACK_IMPORTED_MODULE_21_rxjs_operator_filter__","id","urlAfterRedirects","reason","shouldActivate","has","getAll","enumerable","configurable","LoadedRouterConfig","_queryParamMap","DEFAULT_SERIALIZER","serialize","_this","_parameterMap","parse","UrlParser","parseRootSegment","parseQueryParams","parseFragment","encodeURI","remaining","consumeOptional","peekStartsWith","parseChildren","parseQueryParam","decodeURI","parseSegment","capture","parseParens","parseMatrixParams","parseParam","valueMatch","decodedKey","decodedVal","currentVal","allowPrimary","indexOf","substr","allowRedirects","ngModule","expanded$","expandSegmentGroup","urlTrees$","rootSegmentGroup","noMatchError","mapped$","rootCandidate","expandChildren","expandSegment","routes$","processedRoutes$","expandSegmentAgainstRoute","concattedProcessedRoutes$","first$","_","noLeftoversInUrl","matchSegmentAgainstRoute","expandSegmentAgainstRouteUsingRedirect","expandWildCardWithParamsAgainstRouteUsingRedirect","expandRegularSegmentAgainstRouteUsingRedirect","applyRedirectCommands","lineralizeSegments","newSegments","rawSegmentGroup","load","cfg","rawSlicedSegments","childConfig$","routerConfig","childModule","childConfig","expanded$_1","cs","shouldLoad","applyRedirectCreatreUrlTree","newRoot","createSegmentGroup","createQueryParams","redirectToParams","actualParams","sourceName","updatedSegments","createSegments","redirectToSegments","actualSegments","findPosParam","findOrReturn","redirectToUrlSegment","pos","idx","actualSegments_1","splice","t","firstChild","siblings","filter","cc","futureSnapshot","_paramMap","urlSegment","lastPathIndex","_resolve","cmdWithOutlet","find","processSegmentGroup","freeze","rootNode","routeState","inheritParamsAndData","routeNode","processSegment","config_1","processSegmentAgainstRoute","rawSegment","snapshot_1","children_3","shouldDetach","store","handle","shouldAttach","future","DefaultRouteReuseStrategy","detachedTree","RouterConfigLoader","onLoadStartListener","onLoadEndListener","parentInjector","moduleFactory$","loadModuleFactory","factory","compileModuleAsync","shouldProcessUrl","extract","merge","newUrlPart","rawUrl","DefaultUrlHandlingStrategy","wholeUrl","rootContexts","navigations","routerEvents","navigationId","navigated","hooks","beforePreactivation","afterPreactivation","onLoadStart","triggerEvent","onLoadEnd","resetConfig","currentUrlTree","rawUrlTree","currentRouterState","processNavigations","resetRootComponentType","initialNavigation","setUpLocationChangeListener","navigateByUrl","replaceUrl","locationSubscription","Zone","wrap","change","setTimeout","scheduleNavigation","serializeUrl","ngOnDestroy","dispose","unsubscribe","navigationExtras","relativeTo","preserveQueryParams","queryParamsHandling","preserveFragment","console","warn","f","q","extras","skipLocationChange","parseUrl","mergedTree","navigate","removeEmptyProps","isActive","executeScheduledNavigation","promise","catch","lastNavigation","reject","rej","urlTransition","then","runNavigate","shouldPreventPushState","shouldReplaceUrl","precreatedState","go","resolvePromise","rejectPromise","urlAndSnapshot$","appliedUrl","redirectsApplied$","preActivation","navigationIsSuccessful","beforePreactivationDone$","preactivationTraverse$","PreActivation","traverse","preactivationCheckGuards$","checkGuards","preactivationResolveData$","isActivating","resolveData","preactivationDone$","routerState$","storedState","storedUrl","isCurrentPathEqualTo","replaceState","ActivateRoutes","activate","resetUrlToCurrentUrlTree","ee","CanActivate","CanDeactivate","canActivateChecks","canDeactivateChecks","parentContexts","futureRoot","currRoot","traverseChildRoutes","isDeactivating","canDeactivate$","runCanDeactivateChecks","canDeactivate","runCanActivateChecks","checks$","runningChecks$","check","runResolve","futureNode","currNode","futurePath","prevChildren","traverseRoutes","deactivateRouteAndItsChildren","getContext","context","shouldRunGuardsAndResolvers","runGuardsAndResolvers","mode","childName","isActivated","runCanDeactivate","runCanActivateChild","runCanActivate","canActivate","observable","getToken","canActivateChildGuards","reverse","extractCanActivateChild","guards","canActivateChild","resolveNode","resolvedData","key_1","getResolver","runningResolvers$","resolver","token","futureState","currState","deactivateChildRoutes","activateChildRoutes","futureChild","childOutletName","deactivateRoutes","parentContext","detachAndStoreRouteSubtree","deactivateRouteAndOutlet","componentRef","detach","onOutletDeactivated","contexts_1","deactivate","activateRoutes","getOrCreateContext","stored","onOutletReAttached","attachRef","attach","cmpFactoryResolver","componentFactoryResolver","activateWith","tabIndex","renderer","el","setAttribute","nativeElement","set","preserve","onClick","type","args","ctorParameters","propDecorators","routerLink","locationStrategy","subscription","updateTargetUrlAndHref","ngOnChanges","changes","button","ctrlKey","metaKey","shiftKey","href","prepareExternalUrl","element","cdr","classes","routerLinkActiveOptions","update","ngAfterContentInit","links","linksWithHrefs","hasActiveLinks","addClass","removeClass","isLinkActive","link","exportAs","descendants","routerLinkActive","Map","onChildOutletCreated","onChildOutletDestroyed","changeDetector","_activatedRoute","activateEvents","deactivateEvents","ngOnInit","instance","cmp","activatedRoute","insert","hostView","destroy","emit","resolveComponentFactory","childContexts","OutletInjector","createComponent","markForCheck","notFoundValue","preload","moduleLoader","preloadingStrategy","onStartLoad","onEndLoad","setUpPreloading","navigations$","processRoutes","routes_5","preloadConfig","loaded$","ROUTER_DIRECTIVES","useClass","forRoot","providers","forChild","declarations","initNavigation","resultOfPreactivationDone","isLegacyDisabled","isLegacyEnabled","bootstrappedComponentRef","preloader","components","componentTypes","ArrayObservable_1","of","ArrayObservable","concatMap","mergeMap_1","predicate","thisArg","FilterOperator","Subscriber_1","subscriber","FilterSubscriber","count","Subscriber","process","platform_browser_dynamic_1","root_module_1","env","NODE_ENV","enableProdMode","platformBrowserDynamic","bootstrapModule","RootModule","platform_browser_1","root_routing_module_1","root_component_1","home_component_1","page_not_found_component_1","NgModule","imports","BrowserModule","RootRoutingModule","RootComponent","bootstrap","router_1","appRoutes","require","oe","Subject_1","ObjectUnsubscribedError_1","BehaviorSubject","_value","getValue","_subscribe","closed","hasError","thrownError","ObjectUnsubscribedError","Subject","FromObservable_1","from","FromObservable","isArray_1","isArrayLike_1","isPromise_1","PromiseObservable_1","IteratorObservable_1","ArrayLikeObservable_1","iterator_1","Observable_1","observeOn_1","observable_1","scheduler","Observable","isPromise","PromiseObservable","iterator","IteratorObservable","isArrayLike","ArrayLikeObservable","TypeError","ObserveOnSubscriber","getIterator","StringIterator","ArrayIterator","toLength","o","len","isNaN","numberIsFinite","sign","Math","floor","abs","maxSafeInteger","root_1","isFinite","valueAsNumber","dispatch","done","return","schedule","pow","ScalarObservable_1","EmptyObservable_1","arrayLike","_isScalar","EmptyObservable","ScalarObservable","observeOn","delay","ObserveOnOperator","Notification_1","arg","notification","observe","scheduleMessage","ObserveOnMessage","Notification","createNext","_error","createError","createComplete","kind","hasValue","do","accept","nextOrObserver","toObservable","throw","empty","undefinedValueNotification","completeNotification","EveryOperator","EverySubscriber","everyValueMatch","first","defaultValue","FirstOperator","EmptyError_1","FirstSubscriber","_emitted","_tryPredicate","_emit","_tryResultSelector","_emitFinal","last","LastOperator","LastSubscriber","lastValue","accumulator","seed","hasSeed","ReduceOperator","ReduceSubscriber","acc","_tryReduce","_catch","operator","CatchOperator","caught","CatchSubscriber","isStopped","err2","_unsubscribeAndRecycle","concatAll","mergeAll_1","MergeAllOperator"],"mappings":"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","file":"main-bundle.js","sourcesContent":["webpackJsonp([2],Array(19).concat([\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when an Observable or a sequence was queried but has no\n * elements.\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link single}\n *\n * @class EmptyError\n */\nvar EmptyError = (function (_super) {\n    __extends(EmptyError, _super);\n    function EmptyError() {\n        var err = _super.call(this, 'no elements in sequence');\n        this.name = err.name = 'EmptyError';\n        this.stack = err.stack;\n        this.message = err.message;\n    }\n    return EmptyError;\n}(Error));\nexports.EmptyError = EmptyError;\n//# sourceMappingURL=EmptyError.js.map\n\n/***/ }),\n/* 20 */,\n/* 21 */,\n/* 22 */,\n/* 23 */,\n/* 24 */,\n/* 25 */,\n/* 26 */,\n/* 27 */,\n/* 28 */,\n/* 29 */,\n/* 30 */,\n/* 31 */,\n/* 32 */,\n/* 33 */,\n/* 34 */,\n/* 35 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar subscribeToResult_1 = __webpack_require__(11);\nvar OuterSubscriber_1 = __webpack_require__(10);\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link mergeAll}.</span>\n *\n * <img src=\"./img/mergeMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger.\n *\n * @example <caption>Map and flatten each letter to an Observable ticking every 1 second</caption>\n * var letters = Rx.Observable.of('a', 'b', 'c');\n * var result = letters.mergeMap(x =>\n *   Rx.Observable.interval(1000).map(i => x+i)\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // a0\n * // b0\n * // c0\n * // a1\n * // b1\n * // c1\n * // continues to list a,b,c with respective ascending integers\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and merging the results of the Observables obtained\n * from this transformation.\n * @method mergeMap\n * @owner Observable\n */\nfunction mergeMap(project, resultSelector, concurrent) {\n    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n    if (typeof resultSelector === 'number') {\n        concurrent = resultSelector;\n        resultSelector = null;\n    }\n    return this.lift(new MergeMapOperator(project, resultSelector, concurrent));\n}\nexports.mergeMap = mergeMap;\nvar MergeMapOperator = (function () {\n    function MergeMapOperator(project, resultSelector, concurrent) {\n        if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n        this.project = project;\n        this.resultSelector = resultSelector;\n        this.concurrent = concurrent;\n    }\n    MergeMapOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new MergeMapSubscriber(observer, this.project, this.resultSelector, this.concurrent));\n    };\n    return MergeMapOperator;\n}());\nexports.MergeMapOperator = MergeMapOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar MergeMapSubscriber = (function (_super) {\n    __extends(MergeMapSubscriber, _super);\n    function MergeMapSubscriber(destination, project, resultSelector, concurrent) {\n        if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n        _super.call(this, destination);\n        this.project = project;\n        this.resultSelector = resultSelector;\n        this.concurrent = concurrent;\n        this.hasCompleted = false;\n        this.buffer = [];\n        this.active = 0;\n        this.index = 0;\n    }\n    MergeMapSubscriber.prototype._next = function (value) {\n        if (this.active < this.concurrent) {\n            this._tryNext(value);\n        }\n        else {\n            this.buffer.push(value);\n        }\n    };\n    MergeMapSubscriber.prototype._tryNext = function (value) {\n        var result;\n        var index = this.index++;\n        try {\n            result = this.project(value, index);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.active++;\n        this._innerSub(result, value, index);\n    };\n    MergeMapSubscriber.prototype._innerSub = function (ish, value, index) {\n        this.add(subscribeToResult_1.subscribeToResult(this, ish, value, index));\n    };\n    MergeMapSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (this.active === 0 && this.buffer.length === 0) {\n            this.destination.complete();\n        }\n    };\n    MergeMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        if (this.resultSelector) {\n            this._notifyResultSelector(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        else {\n            this.destination.next(innerValue);\n        }\n    };\n    MergeMapSubscriber.prototype._notifyResultSelector = function (outerValue, innerValue, outerIndex, innerIndex) {\n        var result;\n        try {\n            result = this.resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    MergeMapSubscriber.prototype.notifyComplete = function (innerSub) {\n        var buffer = this.buffer;\n        this.remove(innerSub);\n        this.active--;\n        if (buffer.length > 0) {\n            this._next(buffer.shift());\n        }\n        else if (this.active === 0 && this.hasCompleted) {\n            this.destination.complete();\n        }\n    };\n    return MergeMapSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\nexports.MergeMapSubscriber = MergeMapSubscriber;\n//# sourceMappingURL=mergeMap.js.map\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = __webpack_require__(1);\r\nvar HomeComponent = /** @class */ (function () {\r\n    function HomeComponent() {\r\n    }\r\n    HomeComponent = __decorate([\r\n        core_1.Component({\r\n            selector: 'internal-home',\r\n            template: __webpack_require__(80)\r\n        })\r\n    ], HomeComponent);\r\n    return HomeComponent;\r\n}());\r\nexports.HomeComponent = HomeComponent;\r\n\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = __webpack_require__(1);\r\nvar PageNotFoundComponent = /** @class */ (function () {\r\n    function PageNotFoundComponent() {\r\n    }\r\n    PageNotFoundComponent = __decorate([\r\n        core_1.Component({\r\n            template: __webpack_require__(81)\r\n        })\r\n    ], PageNotFoundComponent);\r\n    return PageNotFoundComponent;\r\n}());\r\nexports.PageNotFoundComponent = PageNotFoundComponent;\r\n\n\n/***/ }),\n/* 38 */,\n/* 39 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RouterLink\", function() { return RouterLink; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RouterLinkWithHref\", function() { return RouterLinkWithHref; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RouterLinkActive\", function() { return RouterLinkActive; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RouterOutlet\", function() { return RouterOutlet; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GuardsCheckEnd\", function() { return GuardsCheckEnd; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GuardsCheckStart\", function() { return GuardsCheckStart; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NavigationCancel\", function() { return NavigationCancel; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NavigationEnd\", function() { return NavigationEnd; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NavigationError\", function() { return NavigationError; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NavigationStart\", function() { return NavigationStart; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ResolveEnd\", function() { return ResolveEnd; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ResolveStart\", function() { return ResolveStart; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RouteConfigLoadEnd\", function() { return RouteConfigLoadEnd; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RouteConfigLoadStart\", function() { return RouteConfigLoadStart; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RoutesRecognized\", function() { return RoutesRecognized; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RouteReuseStrategy\", function() { return RouteReuseStrategy; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Router\", function() { return Router; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ROUTES\", function() { return ROUTES; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ROUTER_CONFIGURATION\", function() { return ROUTER_CONFIGURATION; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ROUTER_INITIALIZER\", function() { return ROUTER_INITIALIZER; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RouterModule\", function() { return RouterModule; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"provideRoutes\", function() { return provideRoutes; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ChildrenOutletContexts\", function() { return ChildrenOutletContexts; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"OutletContext\", function() { return OutletContext; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NoPreloading\", function() { return NoPreloading; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PreloadAllModules\", function() { return PreloadAllModules; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PreloadingStrategy\", function() { return PreloadingStrategy; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RouterPreloader\", function() { return RouterPreloader; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ActivatedRoute\", function() { return ActivatedRoute; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ActivatedRouteSnapshot\", function() { return ActivatedRouteSnapshot; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RouterState\", function() { return RouterState; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RouterStateSnapshot\", function() { return RouterStateSnapshot; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PRIMARY_OUTLET\", function() { return PRIMARY_OUTLET; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"convertToParamMap\", function() { return convertToParamMap; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"UrlHandlingStrategy\", function() { return UrlHandlingStrategy; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DefaultUrlSerializer\", function() { return DefaultUrlSerializer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"UrlSegment\", function() { return UrlSegment; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"UrlSegmentGroup\", function() { return UrlSegmentGroup; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"UrlSerializer\", function() { return UrlSerializer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"UrlTree\", function() { return UrlTree; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"VERSION\", function() { return VERSION; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵROUTER_PROVIDERS\", function() { return ROUTER_PROVIDERS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵflatten\", function() { return flatten; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵa\", function() { return ROUTER_FORROOT_GUARD; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵg\", function() { return RouterInitializer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵh\", function() { return getAppInitializer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵi\", function() { return getBootstrapListener; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵd\", function() { return provideForRootGuard; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵc\", function() { return provideLocationStrategy; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵj\", function() { return provideRouterInitializer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵf\", function() { return rootRoute; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵb\", function() { return routerNgProbeToken; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵe\", function() { return setupRouter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵk\", function() { return Tree; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵl\", function() { return TreeNode; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_common__ = __webpack_require__(8);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_core__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_BehaviorSubject__ = __webpack_require__(67);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_BehaviorSubject___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_rxjs_BehaviorSubject__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_Subject__ = __webpack_require__(7);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_Subject___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_rxjs_Subject__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_observable_from__ = __webpack_require__(68);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_observable_from___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_rxjs_observable_from__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__ = __webpack_require__(41);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs_operator_concatMap__ = __webpack_require__(42);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs_operator_concatMap___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_rxjs_operator_concatMap__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_rxjs_operator_every__ = __webpack_require__(74);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_rxjs_operator_every___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_8_rxjs_operator_every__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_rxjs_operator_first__ = __webpack_require__(75);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_rxjs_operator_first___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_9_rxjs_operator_first__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_rxjs_operator_last__ = __webpack_require__(76);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_rxjs_operator_last___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_10_rxjs_operator_last__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__ = __webpack_require__(20);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12_rxjs_operator_mergeMap__ = __webpack_require__(35);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12_rxjs_operator_mergeMap___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_12_rxjs_operator_mergeMap__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13_rxjs_operator_reduce__ = __webpack_require__(77);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13_rxjs_operator_reduce___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_13_rxjs_operator_reduce__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14_rxjs_Observable__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_14_rxjs_Observable__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15_rxjs_operator_catch__ = __webpack_require__(78);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15_rxjs_operator_catch___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_15_rxjs_operator_catch__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16_rxjs_operator_concatAll__ = __webpack_require__(79);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16_rxjs_operator_concatAll___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_16_rxjs_operator_concatAll__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17_rxjs_util_EmptyError__ = __webpack_require__(19);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17_rxjs_util_EmptyError___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_17_rxjs_util_EmptyError__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18_rxjs_observable_fromPromise__ = __webpack_require__(33);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18_rxjs_observable_fromPromise___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_18_rxjs_observable_fromPromise__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_19_rxjs_operator_mergeAll__ = __webpack_require__(17);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_19_rxjs_operator_mergeAll___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_19_rxjs_operator_mergeAll__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_20__angular_platform_browser__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_21_rxjs_operator_filter__ = __webpack_require__(43);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_21_rxjs_operator_filter___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_21_rxjs_operator_filter__);\n\n/**\n * @license Angular v4.4.4\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Represents an event triggered when a navigation starts.\n *\n * \\@stable\n */\nvar NavigationStart = (function () {\n    /**\n     * @param {?} id\n     * @param {?} url\n     */\n    function NavigationStart(id, url) {\n        this.id = id;\n        this.url = url;\n    }\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    NavigationStart.prototype.toString = function () { return \"NavigationStart(id: \" + this.id + \", url: '\" + this.url + \"')\"; };\n    return NavigationStart;\n}());\n/**\n * \\@whatItDoes Represents an event triggered when a navigation ends successfully.\n *\n * \\@stable\n */\nvar NavigationEnd = (function () {\n    /**\n     * @param {?} id\n     * @param {?} url\n     * @param {?} urlAfterRedirects\n     */\n    function NavigationEnd(id, url, urlAfterRedirects) {\n        this.id = id;\n        this.url = url;\n        this.urlAfterRedirects = urlAfterRedirects;\n    }\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    NavigationEnd.prototype.toString = function () {\n        return \"NavigationEnd(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"')\";\n    };\n    return NavigationEnd;\n}());\n/**\n * \\@whatItDoes Represents an event triggered when a navigation is canceled.\n *\n * \\@stable\n */\nvar NavigationCancel = (function () {\n    /**\n     * @param {?} id\n     * @param {?} url\n     * @param {?} reason\n     */\n    function NavigationCancel(id, url, reason) {\n        this.id = id;\n        this.url = url;\n        this.reason = reason;\n    }\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    NavigationCancel.prototype.toString = function () { return \"NavigationCancel(id: \" + this.id + \", url: '\" + this.url + \"')\"; };\n    return NavigationCancel;\n}());\n/**\n * \\@whatItDoes Represents an event triggered when a navigation fails due to an unexpected error.\n *\n * \\@stable\n */\nvar NavigationError = (function () {\n    /**\n     * @param {?} id\n     * @param {?} url\n     * @param {?} error\n     */\n    function NavigationError(id, url, error) {\n        this.id = id;\n        this.url = url;\n        this.error = error;\n    }\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    NavigationError.prototype.toString = function () {\n        return \"NavigationError(id: \" + this.id + \", url: '\" + this.url + \"', error: \" + this.error + \")\";\n    };\n    return NavigationError;\n}());\n/**\n * \\@whatItDoes Represents an event triggered when routes are recognized.\n *\n * \\@stable\n */\nvar RoutesRecognized = (function () {\n    /**\n     * @param {?} id\n     * @param {?} url\n     * @param {?} urlAfterRedirects\n     * @param {?} state\n     */\n    function RoutesRecognized(id, url, urlAfterRedirects, state) {\n        this.id = id;\n        this.url = url;\n        this.urlAfterRedirects = urlAfterRedirects;\n        this.state = state;\n    }\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    RoutesRecognized.prototype.toString = function () {\n        return \"RoutesRecognized(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n    };\n    return RoutesRecognized;\n}());\n/**\n * \\@whatItDoes Represents an event triggered before lazy loading a route config.\n *\n * \\@experimental\n */\nvar RouteConfigLoadStart = (function () {\n    /**\n     * @param {?} route\n     */\n    function RouteConfigLoadStart(route) {\n        this.route = route;\n    }\n    /**\n     * @return {?}\n     */\n    RouteConfigLoadStart.prototype.toString = function () { return \"RouteConfigLoadStart(path: \" + this.route.path + \")\"; };\n    return RouteConfigLoadStart;\n}());\n/**\n * \\@whatItDoes Represents an event triggered when a route has been lazy loaded.\n *\n * \\@experimental\n */\nvar RouteConfigLoadEnd = (function () {\n    /**\n     * @param {?} route\n     */\n    function RouteConfigLoadEnd(route) {\n        this.route = route;\n    }\n    /**\n     * @return {?}\n     */\n    RouteConfigLoadEnd.prototype.toString = function () { return \"RouteConfigLoadEnd(path: \" + this.route.path + \")\"; };\n    return RouteConfigLoadEnd;\n}());\n/**\n * \\@whatItDoes Represents the start of the Guard phase of routing.\n *\n * \\@experimental\n */\nvar GuardsCheckStart = (function () {\n    /**\n     * @param {?} id\n     * @param {?} url\n     * @param {?} urlAfterRedirects\n     * @param {?} state\n     */\n    function GuardsCheckStart(id, url, urlAfterRedirects, state) {\n        this.id = id;\n        this.url = url;\n        this.urlAfterRedirects = urlAfterRedirects;\n        this.state = state;\n    }\n    /**\n     * @return {?}\n     */\n    GuardsCheckStart.prototype.toString = function () {\n        return \"GuardsCheckStart(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n    };\n    return GuardsCheckStart;\n}());\n/**\n * \\@whatItDoes Represents the end of the Guard phase of routing.\n *\n * \\@experimental\n */\nvar GuardsCheckEnd = (function () {\n    /**\n     * @param {?} id\n     * @param {?} url\n     * @param {?} urlAfterRedirects\n     * @param {?} state\n     * @param {?} shouldActivate\n     */\n    function GuardsCheckEnd(id, url, urlAfterRedirects, state, shouldActivate) {\n        this.id = id;\n        this.url = url;\n        this.urlAfterRedirects = urlAfterRedirects;\n        this.state = state;\n        this.shouldActivate = shouldActivate;\n    }\n    /**\n     * @return {?}\n     */\n    GuardsCheckEnd.prototype.toString = function () {\n        return \"GuardsCheckEnd(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \", shouldActivate: \" + this.shouldActivate + \")\";\n    };\n    return GuardsCheckEnd;\n}());\n/**\n * \\@whatItDoes Represents the start of the Resolve phase of routing. The timing of this\n * event may change, thus it's experimental. In the current iteration it will run\n * in the \"resolve\" phase whether there's things to resolve or not. In the future this\n * behavior may change to only run when there are things to be resolved.\n *\n * \\@experimental\n */\nvar ResolveStart = (function () {\n    /**\n     * @param {?} id\n     * @param {?} url\n     * @param {?} urlAfterRedirects\n     * @param {?} state\n     */\n    function ResolveStart(id, url, urlAfterRedirects, state) {\n        this.id = id;\n        this.url = url;\n        this.urlAfterRedirects = urlAfterRedirects;\n        this.state = state;\n    }\n    /**\n     * @return {?}\n     */\n    ResolveStart.prototype.toString = function () {\n        return \"ResolveStart(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n    };\n    return ResolveStart;\n}());\n/**\n * \\@whatItDoes Represents the end of the Resolve phase of routing. See note on\n * {\\@link ResolveStart} for use of this experimental API.\n *\n * \\@experimental\n */\nvar ResolveEnd = (function () {\n    /**\n     * @param {?} id\n     * @param {?} url\n     * @param {?} urlAfterRedirects\n     * @param {?} state\n     */\n    function ResolveEnd(id, url, urlAfterRedirects, state) {\n        this.id = id;\n        this.url = url;\n        this.urlAfterRedirects = urlAfterRedirects;\n        this.state = state;\n    }\n    /**\n     * @return {?}\n     */\n    ResolveEnd.prototype.toString = function () {\n        return \"ResolveEnd(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n    };\n    return ResolveEnd;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Name of the primary outlet.\n *\n * \\@stable\n */\nvar PRIMARY_OUTLET = 'primary';\nvar ParamsAsMap = (function () {\n    /**\n     * @param {?} params\n     */\n    function ParamsAsMap(params) {\n        this.params = params || {};\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ParamsAsMap.prototype.has = function (name) { return this.params.hasOwnProperty(name); };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ParamsAsMap.prototype.get = function (name) {\n        if (this.has(name)) {\n            var /** @type {?} */ v = this.params[name];\n            return Array.isArray(v) ? v[0] : v;\n        }\n        return null;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ParamsAsMap.prototype.getAll = function (name) {\n        if (this.has(name)) {\n            var /** @type {?} */ v = this.params[name];\n            return Array.isArray(v) ? v : [v];\n        }\n        return [];\n    };\n    Object.defineProperty(ParamsAsMap.prototype, \"keys\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return Object.keys(this.params); },\n        enumerable: true,\n        configurable: true\n    });\n    return ParamsAsMap;\n}());\n/**\n * Convert a {\\@link Params} instance to a {\\@link ParamMap}.\n *\n * \\@stable\n * @param {?} params\n * @return {?}\n */\nfunction convertToParamMap(params) {\n    return new ParamsAsMap(params);\n}\nvar NAVIGATION_CANCELING_ERROR = 'ngNavigationCancelingError';\n/**\n * @param {?} message\n * @return {?}\n */\nfunction navigationCancelingError(message) {\n    var /** @type {?} */ error = Error('NavigationCancelingError: ' + message);\n    ((error))[NAVIGATION_CANCELING_ERROR] = true;\n    return error;\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction isNavigationCancelingError(error) {\n    return ((error))[NAVIGATION_CANCELING_ERROR];\n}\n/**\n * @param {?} segments\n * @param {?} segmentGroup\n * @param {?} route\n * @return {?}\n */\nfunction defaultUrlMatcher(segments, segmentGroup, route) {\n    var /** @type {?} */ parts = ((route.path)).split('/');\n    if (parts.length > segments.length) {\n        // The actual URL is shorter than the config, no match\n        return null;\n    }\n    if (route.pathMatch === 'full' &&\n        (segmentGroup.hasChildren() || parts.length < segments.length)) {\n        // The config is longer than the actual URL but we are looking for a full match, return null\n        return null;\n    }\n    var /** @type {?} */ posParams = {};\n    // Check each config part against the actual URL\n    for (var /** @type {?} */ index = 0; index < parts.length; index++) {\n        var /** @type {?} */ part = parts[index];\n        var /** @type {?} */ segment = segments[index];\n        var /** @type {?} */ isParameter = part.startsWith(':');\n        if (isParameter) {\n            posParams[part.substring(1)] = segment;\n        }\n        else if (part !== segment.path) {\n            // The actual URL part does not match the config, no match\n            return null;\n        }\n    }\n    return { consumed: segments.slice(0, parts.length), posParams: posParams };\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar LoadedRouterConfig = (function () {\n    /**\n     * @param {?} routes\n     * @param {?} module\n     */\n    function LoadedRouterConfig(routes, module) {\n        this.routes = routes;\n        this.module = module;\n    }\n    return LoadedRouterConfig;\n}());\n/**\n * @param {?} config\n * @param {?=} parentPath\n * @return {?}\n */\nfunction validateConfig(config, parentPath) {\n    if (parentPath === void 0) { parentPath = ''; }\n    // forEach doesn't iterate undefined values\n    for (var /** @type {?} */ i = 0; i < config.length; i++) {\n        var /** @type {?} */ route = config[i];\n        var /** @type {?} */ fullPath = getFullPath(parentPath, route);\n        validateNode(route, fullPath);\n    }\n}\n/**\n * @param {?} route\n * @param {?} fullPath\n * @return {?}\n */\nfunction validateNode(route, fullPath) {\n    if (!route) {\n        throw new Error(\"\\n      Invalid configuration of route '\" + fullPath + \"': Encountered undefined route.\\n      The reason might be an extra comma.\\n\\n      Example:\\n      const routes: Routes = [\\n        { path: '', redirectTo: '/dashboard', pathMatch: 'full' },\\n        { path: 'dashboard',  component: DashboardComponent },, << two commas\\n        { path: 'detail/:id', component: HeroDetailComponent }\\n      ];\\n    \");\n    }\n    if (Array.isArray(route)) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': Array cannot be specified\");\n    }\n    if (!route.component && (route.outlet && route.outlet !== PRIMARY_OUTLET)) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': a componentless route cannot have a named outlet set\");\n    }\n    if (route.redirectTo && route.children) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': redirectTo and children cannot be used together\");\n    }\n    if (route.redirectTo && route.loadChildren) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': redirectTo and loadChildren cannot be used together\");\n    }\n    if (route.children && route.loadChildren) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': children and loadChildren cannot be used together\");\n    }\n    if (route.redirectTo && route.component) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': redirectTo and component cannot be used together\");\n    }\n    if (route.path && route.matcher) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': path and matcher cannot be used together\");\n    }\n    if (route.redirectTo === void 0 && !route.component && !route.children && !route.loadChildren) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"'. One of the following must be provided: component, redirectTo, children or loadChildren\");\n    }\n    if (route.path === void 0 && route.matcher === void 0) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': routes must have either a path or a matcher specified\");\n    }\n    if (typeof route.path === 'string' && route.path.charAt(0) === '/') {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': path cannot start with a slash\");\n    }\n    if (route.path === '' && route.redirectTo !== void 0 && route.pathMatch === void 0) {\n        var /** @type {?} */ exp = \"The default value of 'pathMatch' is 'prefix', but often the intent is to use 'full'.\";\n        throw new Error(\"Invalid configuration of route '{path: \\\"\" + fullPath + \"\\\", redirectTo: \\\"\" + route.redirectTo + \"\\\"}': please provide 'pathMatch'. \" + exp);\n    }\n    if (route.pathMatch !== void 0 && route.pathMatch !== 'full' && route.pathMatch !== 'prefix') {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': pathMatch can only be set to 'prefix' or 'full'\");\n    }\n    if (route.children) {\n        validateConfig(route.children, fullPath);\n    }\n}\n/**\n * @param {?} parentPath\n * @param {?} currentRoute\n * @return {?}\n */\nfunction getFullPath(parentPath, currentRoute) {\n    if (!currentRoute) {\n        return parentPath;\n    }\n    if (!parentPath && !currentRoute.path) {\n        return '';\n    }\n    else if (parentPath && !currentRoute.path) {\n        return parentPath + \"/\";\n    }\n    else if (!parentPath && currentRoute.path) {\n        return currentRoute.path;\n    }\n    else {\n        return parentPath + \"/\" + currentRoute.path;\n    }\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction shallowEqualArrays(a, b) {\n    if (a.length !== b.length)\n        return false;\n    for (var /** @type {?} */ i = 0; i < a.length; ++i) {\n        if (!shallowEqual(a[i], b[i]))\n            return false;\n    }\n    return true;\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction shallowEqual(a, b) {\n    var /** @type {?} */ k1 = Object.keys(a);\n    var /** @type {?} */ k2 = Object.keys(b);\n    if (k1.length != k2.length) {\n        return false;\n    }\n    var /** @type {?} */ key;\n    for (var /** @type {?} */ i = 0; i < k1.length; i++) {\n        key = k1[i];\n        if (a[key] !== b[key]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * @template T\n * @param {?} arr\n * @return {?}\n */\nfunction flatten(arr) {\n    return Array.prototype.concat.apply([], arr);\n}\n/**\n * @template T\n * @param {?} a\n * @return {?}\n */\nfunction last$1(a) {\n    return a.length > 0 ? a[a.length - 1] : null;\n}\n/**\n * @param {?} bools\n * @return {?}\n */\n/**\n * @template K, V\n * @param {?} map\n * @param {?} callback\n * @return {?}\n */\nfunction forEach(map$$1, callback) {\n    for (var /** @type {?} */ prop in map$$1) {\n        if (map$$1.hasOwnProperty(prop)) {\n            callback(map$$1[prop], prop);\n        }\n    }\n}\n/**\n * @template A, B\n * @param {?} obj\n * @param {?} fn\n * @return {?}\n */\nfunction waitForMap(obj, fn) {\n    if (Object.keys(obj).length === 0) {\n        return Object(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])({});\n    }\n    var /** @type {?} */ waitHead = [];\n    var /** @type {?} */ waitTail = [];\n    var /** @type {?} */ res = {};\n    forEach(obj, function (a, k) {\n        var /** @type {?} */ mapped = __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(fn(k, a), function (r) { return res[k] = r; });\n        if (k === PRIMARY_OUTLET) {\n            waitHead.push(mapped);\n        }\n        else {\n            waitTail.push(mapped);\n        }\n    });\n    var /** @type {?} */ concat$ = __WEBPACK_IMPORTED_MODULE_16_rxjs_operator_concatAll__[\"concatAll\"].call(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"].apply(void 0, waitHead.concat(waitTail)));\n    var /** @type {?} */ last$ = __WEBPACK_IMPORTED_MODULE_10_rxjs_operator_last__[\"last\"].call(concat$);\n    return __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(last$, function () { return res; });\n}\n/**\n * @param {?} observables\n * @return {?}\n */\nfunction andObservables(observables) {\n    var /** @type {?} */ merged$ = __WEBPACK_IMPORTED_MODULE_19_rxjs_operator_mergeAll__[\"mergeAll\"].call(observables);\n    return __WEBPACK_IMPORTED_MODULE_8_rxjs_operator_every__[\"every\"].call(merged$, function (result) { return result === true; });\n}\n/**\n * @template T\n * @param {?} value\n * @return {?}\n */\nfunction wrapIntoObservable(value) {\n    if (Object(__WEBPACK_IMPORTED_MODULE_2__angular_core__[\"ɵisObservable\"])(value)) {\n        return value;\n    }\n    if (Object(__WEBPACK_IMPORTED_MODULE_2__angular_core__[\"ɵisPromise\"])(value)) {\n        // Use `Promise.resolve()` to wrap promise-like instances.\n        // Required ie when a Resolver returns a AngularJS `$q` promise to correctly trigger the\n        // change detection.\n        return Object(__WEBPACK_IMPORTED_MODULE_18_rxjs_observable_fromPromise__[\"fromPromise\"])(Promise.resolve(value));\n    }\n    return Object(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])(/** @type {?} */ (value));\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @return {?}\n */\nfunction createEmptyUrlTree() {\n    return new UrlTree(new UrlSegmentGroup([], {}), {}, null);\n}\n/**\n * @param {?} container\n * @param {?} containee\n * @param {?} exact\n * @return {?}\n */\nfunction containsTree(container, containee, exact) {\n    if (exact) {\n        return equalQueryParams(container.queryParams, containee.queryParams) &&\n            equalSegmentGroups(container.root, containee.root);\n    }\n    return containsQueryParams(container.queryParams, containee.queryParams) &&\n        containsSegmentGroup(container.root, containee.root);\n}\n/**\n * @param {?} container\n * @param {?} containee\n * @return {?}\n */\nfunction equalQueryParams(container, containee) {\n    return shallowEqual(container, containee);\n}\n/**\n * @param {?} container\n * @param {?} containee\n * @return {?}\n */\nfunction equalSegmentGroups(container, containee) {\n    if (!equalPath(container.segments, containee.segments))\n        return false;\n    if (container.numberOfChildren !== containee.numberOfChildren)\n        return false;\n    for (var /** @type {?} */ c in containee.children) {\n        if (!container.children[c])\n            return false;\n        if (!equalSegmentGroups(container.children[c], containee.children[c]))\n            return false;\n    }\n    return true;\n}\n/**\n * @param {?} container\n * @param {?} containee\n * @return {?}\n */\nfunction containsQueryParams(container, containee) {\n    return Object.keys(containee).length <= Object.keys(container).length &&\n        Object.keys(containee).every(function (key) { return containee[key] === container[key]; });\n}\n/**\n * @param {?} container\n * @param {?} containee\n * @return {?}\n */\nfunction containsSegmentGroup(container, containee) {\n    return containsSegmentGroupHelper(container, containee, containee.segments);\n}\n/**\n * @param {?} container\n * @param {?} containee\n * @param {?} containeePaths\n * @return {?}\n */\nfunction containsSegmentGroupHelper(container, containee, containeePaths) {\n    if (container.segments.length > containeePaths.length) {\n        var /** @type {?} */ current = container.segments.slice(0, containeePaths.length);\n        if (!equalPath(current, containeePaths))\n            return false;\n        if (containee.hasChildren())\n            return false;\n        return true;\n    }\n    else if (container.segments.length === containeePaths.length) {\n        if (!equalPath(container.segments, containeePaths))\n            return false;\n        for (var /** @type {?} */ c in containee.children) {\n            if (!container.children[c])\n                return false;\n            if (!containsSegmentGroup(container.children[c], containee.children[c]))\n                return false;\n        }\n        return true;\n    }\n    else {\n        var /** @type {?} */ current = containeePaths.slice(0, container.segments.length);\n        var /** @type {?} */ next = containeePaths.slice(container.segments.length);\n        if (!equalPath(container.segments, current))\n            return false;\n        if (!container.children[PRIMARY_OUTLET])\n            return false;\n        return containsSegmentGroupHelper(container.children[PRIMARY_OUTLET], containee, next);\n    }\n}\n/**\n * \\@whatItDoes Represents the parsed URL.\n *\n * \\@howToUse\n *\n * ```\n * \\@Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const tree: UrlTree =\n *       router.parseUrl('/team/33/(user/victor//support:help)?debug=true#fragment');\n *     const f = tree.fragment; // return 'fragment'\n *     const q = tree.queryParams; // returns {debug: 'true'}\n *     const g: UrlSegmentGroup = tree.root.children[PRIMARY_OUTLET];\n *     const s: UrlSegment[] = g.segments; // returns 2 segments 'team' and '33'\n *     g.children[PRIMARY_OUTLET].segments; // returns 2 segments 'user' and 'victor'\n *     g.children['support'].segments; // return 1 segment 'help'\n *   }\n * }\n * ```\n *\n * \\@description\n *\n * Since a router state is a tree, and the URL is nothing but a serialized state, the URL is a\n * serialized tree.\n * UrlTree is a data structure that provides a lot of affordances in dealing with URLs\n *\n * \\@stable\n */\nvar UrlTree = (function () {\n    /**\n     * \\@internal\n     * @param {?} root\n     * @param {?} queryParams\n     * @param {?} fragment\n     */\n    function UrlTree(root, queryParams, fragment) {\n        this.root = root;\n        this.queryParams = queryParams;\n        this.fragment = fragment;\n    }\n    Object.defineProperty(UrlTree.prototype, \"queryParamMap\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            if (!this._queryParamMap) {\n                this._queryParamMap = convertToParamMap(this.queryParams);\n            }\n            return this._queryParamMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    UrlTree.prototype.toString = function () { return DEFAULT_SERIALIZER.serialize(this); };\n    return UrlTree;\n}());\n/**\n * \\@whatItDoes Represents the parsed URL segment group.\n *\n * See {\\@link UrlTree} for more information.\n *\n * \\@stable\n */\nvar UrlSegmentGroup = (function () {\n    /**\n     * @param {?} segments\n     * @param {?} children\n     */\n    function UrlSegmentGroup(segments, children) {\n        var _this = this;\n        this.segments = segments;\n        this.children = children;\n        /**\n         * The parent node in the url tree\n         */\n        this.parent = null;\n        forEach(children, function (v, k) { return v.parent = _this; });\n    }\n    /**\n     * Whether the segment has child segments\n     * @return {?}\n     */\n    UrlSegmentGroup.prototype.hasChildren = function () { return this.numberOfChildren > 0; };\n    Object.defineProperty(UrlSegmentGroup.prototype, \"numberOfChildren\", {\n        /**\n         * Number of child segments\n         * @return {?}\n         */\n        get: function () { return Object.keys(this.children).length; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    UrlSegmentGroup.prototype.toString = function () { return serializePaths(this); };\n    return UrlSegmentGroup;\n}());\n/**\n * \\@whatItDoes Represents a single URL segment.\n *\n * \\@howToUse\n *\n * ```\n * \\@Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const tree: UrlTree = router.parseUrl('/team;id=33');\n *     const g: UrlSegmentGroup = tree.root.children[PRIMARY_OUTLET];\n *     const s: UrlSegment[] = g.segments;\n *     s[0].path; // returns 'team'\n *     s[0].parameters; // returns {id: 33}\n *   }\n * }\n * ```\n *\n * \\@description\n *\n * A UrlSegment is a part of a URL between the two slashes. It contains a path and the matrix\n * parameters associated with the segment.\n *\n * \\@stable\n */\nvar UrlSegment = (function () {\n    /**\n     * @param {?} path\n     * @param {?} parameters\n     */\n    function UrlSegment(path, parameters) {\n        this.path = path;\n        this.parameters = parameters;\n    }\n    Object.defineProperty(UrlSegment.prototype, \"parameterMap\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            if (!this._parameterMap) {\n                this._parameterMap = convertToParamMap(this.parameters);\n            }\n            return this._parameterMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    UrlSegment.prototype.toString = function () { return serializePath(this); };\n    return UrlSegment;\n}());\n/**\n * @param {?} as\n * @param {?} bs\n * @return {?}\n */\nfunction equalSegments(as, bs) {\n    return equalPath(as, bs) && as.every(function (a, i) { return shallowEqual(a.parameters, bs[i].parameters); });\n}\n/**\n * @param {?} as\n * @param {?} bs\n * @return {?}\n */\nfunction equalPath(as, bs) {\n    if (as.length !== bs.length)\n        return false;\n    return as.every(function (a, i) { return a.path === bs[i].path; });\n}\n/**\n * @template T\n * @param {?} segment\n * @param {?} fn\n * @return {?}\n */\nfunction mapChildrenIntoArray(segment, fn) {\n    var /** @type {?} */ res = [];\n    forEach(segment.children, function (child, childOutlet) {\n        if (childOutlet === PRIMARY_OUTLET) {\n            res = res.concat(fn(child, childOutlet));\n        }\n    });\n    forEach(segment.children, function (child, childOutlet) {\n        if (childOutlet !== PRIMARY_OUTLET) {\n            res = res.concat(fn(child, childOutlet));\n        }\n    });\n    return res;\n}\n/**\n * \\@whatItDoes Serializes and deserializes a URL string into a URL tree.\n *\n * \\@description The url serialization strategy is customizable. You can\n * make all URLs case insensitive by providing a custom UrlSerializer.\n *\n * See {\\@link DefaultUrlSerializer} for an example of a URL serializer.\n *\n * \\@stable\n * @abstract\n */\nvar UrlSerializer = (function () {\n    function UrlSerializer() {\n    }\n    /**\n     * Parse a url into a {\\@link UrlTree}\n     * @abstract\n     * @param {?} url\n     * @return {?}\n     */\n    UrlSerializer.prototype.parse = function (url) { };\n    /**\n     * Converts a {\\@link UrlTree} into a url\n     * @abstract\n     * @param {?} tree\n     * @return {?}\n     */\n    UrlSerializer.prototype.serialize = function (tree) { };\n    return UrlSerializer;\n}());\n/**\n * \\@whatItDoes A default implementation of the {\\@link UrlSerializer}.\n *\n * \\@description\n *\n * Example URLs:\n *\n * ```\n * /inbox/33(popup:compose)\n * /inbox/33;open=true/messages/44\n * ```\n *\n * DefaultUrlSerializer uses parentheses to serialize secondary segments (e.g., popup:compose), the\n * colon syntax to specify the outlet, and the ';parameter=value' syntax (e.g., open=true) to\n * specify route specific parameters.\n *\n * \\@stable\n */\nvar DefaultUrlSerializer = (function () {\n    function DefaultUrlSerializer() {\n    }\n    /**\n     * Parses a url into a {\\@link UrlTree}\n     * @param {?} url\n     * @return {?}\n     */\n    DefaultUrlSerializer.prototype.parse = function (url) {\n        var /** @type {?} */ p = new UrlParser(url);\n        return new UrlTree(p.parseRootSegment(), p.parseQueryParams(), p.parseFragment());\n    };\n    /**\n     * Converts a {\\@link UrlTree} into a url\n     * @param {?} tree\n     * @return {?}\n     */\n    DefaultUrlSerializer.prototype.serialize = function (tree) {\n        var /** @type {?} */ segment = \"/\" + serializeSegment(tree.root, true);\n        var /** @type {?} */ query = serializeQueryParams(tree.queryParams);\n        var /** @type {?} */ fragment = typeof tree.fragment === \"string\" ? \"#\" + encodeURI(/** @type {?} */ ((tree.fragment))) : '';\n        return \"\" + segment + query + fragment;\n    };\n    return DefaultUrlSerializer;\n}());\nvar DEFAULT_SERIALIZER = new DefaultUrlSerializer();\n/**\n * @param {?} segment\n * @return {?}\n */\nfunction serializePaths(segment) {\n    return segment.segments.map(function (p) { return serializePath(p); }).join('/');\n}\n/**\n * @param {?} segment\n * @param {?} root\n * @return {?}\n */\nfunction serializeSegment(segment, root) {\n    if (!segment.hasChildren()) {\n        return serializePaths(segment);\n    }\n    if (root) {\n        var /** @type {?} */ primary = segment.children[PRIMARY_OUTLET] ?\n            serializeSegment(segment.children[PRIMARY_OUTLET], false) :\n            '';\n        var /** @type {?} */ children_1 = [];\n        forEach(segment.children, function (v, k) {\n            if (k !== PRIMARY_OUTLET) {\n                children_1.push(k + \":\" + serializeSegment(v, false));\n            }\n        });\n        return children_1.length > 0 ? primary + \"(\" + children_1.join('//') + \")\" : primary;\n    }\n    else {\n        var /** @type {?} */ children = mapChildrenIntoArray(segment, function (v, k) {\n            if (k === PRIMARY_OUTLET) {\n                return [serializeSegment(segment.children[PRIMARY_OUTLET], false)];\n            }\n            return [k + \":\" + serializeSegment(v, false)];\n        });\n        return serializePaths(segment) + \"/(\" + children.join('//') + \")\";\n    }\n}\n/**\n * This method is intended for encoding *key* or *value* parts of query component. We need a custom\n * method because encodeURIComponent is too aggressive and encodes stuff that doesn't have to be\n * encoded per http://tools.ietf.org/html/rfc3986:\n *    query         = *( pchar / \"/\" / \"?\" )\n *    pchar         = unreserved / pct-encoded / sub-delims / \":\" / \"\\@\"\n *    unreserved    = ALPHA / DIGIT / \"-\" / \".\" / \"_\" / \"~\"\n *    pct-encoded   = \"%\" HEXDIG HEXDIG\n *    sub-delims    = \"!\" / \"$\" / \"&\" / \"'\" / \"(\" / \")\"\n *                     / \"*\" / \"+\" / \",\" / \";\" / \"=\"\n * @param {?} s\n * @return {?}\n */\nfunction encode(s) {\n    return encodeURIComponent(s)\n        .replace(/%40/g, '@')\n        .replace(/%3A/gi, ':')\n        .replace(/%24/g, '$')\n        .replace(/%2C/gi, ',')\n        .replace(/%3B/gi, ';');\n}\n/**\n * @param {?} s\n * @return {?}\n */\nfunction decode(s) {\n    return decodeURIComponent(s);\n}\n/**\n * @param {?} path\n * @return {?}\n */\nfunction serializePath(path) {\n    return \"\" + encode(path.path) + serializeParams(path.parameters);\n}\n/**\n * @param {?} params\n * @return {?}\n */\nfunction serializeParams(params) {\n    return Object.keys(params).map(function (key) { return \";\" + encode(key) + \"=\" + encode(params[key]); }).join('');\n}\n/**\n * @param {?} params\n * @return {?}\n */\nfunction serializeQueryParams(params) {\n    var /** @type {?} */ strParams = Object.keys(params).map(function (name) {\n        var /** @type {?} */ value = params[name];\n        return Array.isArray(value) ? value.map(function (v) { return encode(name) + \"=\" + encode(v); }).join('&') :\n            encode(name) + \"=\" + encode(value);\n    });\n    return strParams.length ? \"?\" + strParams.join(\"&\") : '';\n}\nvar SEGMENT_RE = /^[^\\/()?;=&#]+/;\n/**\n * @param {?} str\n * @return {?}\n */\nfunction matchSegments(str) {\n    var /** @type {?} */ match = str.match(SEGMENT_RE);\n    return match ? match[0] : '';\n}\nvar QUERY_PARAM_RE = /^[^=?&#]+/;\n/**\n * @param {?} str\n * @return {?}\n */\nfunction matchQueryParams(str) {\n    var /** @type {?} */ match = str.match(QUERY_PARAM_RE);\n    return match ? match[0] : '';\n}\nvar QUERY_PARAM_VALUE_RE = /^[^?&#]+/;\n/**\n * @param {?} str\n * @return {?}\n */\nfunction matchUrlQueryParamValue(str) {\n    var /** @type {?} */ match = str.match(QUERY_PARAM_VALUE_RE);\n    return match ? match[0] : '';\n}\nvar UrlParser = (function () {\n    /**\n     * @param {?} url\n     */\n    function UrlParser(url) {\n        this.url = url;\n        this.remaining = url;\n    }\n    /**\n     * @return {?}\n     */\n    UrlParser.prototype.parseRootSegment = function () {\n        this.consumeOptional('/');\n        if (this.remaining === '' || this.peekStartsWith('?') || this.peekStartsWith('#')) {\n            return new UrlSegmentGroup([], {});\n        }\n        // The root segment group never has segments\n        return new UrlSegmentGroup([], this.parseChildren());\n    };\n    /**\n     * @return {?}\n     */\n    UrlParser.prototype.parseQueryParams = function () {\n        var /** @type {?} */ params = {};\n        if (this.consumeOptional('?')) {\n            do {\n                this.parseQueryParam(params);\n            } while (this.consumeOptional('&'));\n        }\n        return params;\n    };\n    /**\n     * @return {?}\n     */\n    UrlParser.prototype.parseFragment = function () {\n        return this.consumeOptional('#') ? decodeURI(this.remaining) : null;\n    };\n    /**\n     * @return {?}\n     */\n    UrlParser.prototype.parseChildren = function () {\n        if (this.remaining === '') {\n            return {};\n        }\n        this.consumeOptional('/');\n        var /** @type {?} */ segments = [];\n        if (!this.peekStartsWith('(')) {\n            segments.push(this.parseSegment());\n        }\n        while (this.peekStartsWith('/') && !this.peekStartsWith('//') && !this.peekStartsWith('/(')) {\n            this.capture('/');\n            segments.push(this.parseSegment());\n        }\n        var /** @type {?} */ children = {};\n        if (this.peekStartsWith('/(')) {\n            this.capture('/');\n            children = this.parseParens(true);\n        }\n        var /** @type {?} */ res = {};\n        if (this.peekStartsWith('(')) {\n            res = this.parseParens(false);\n        }\n        if (segments.length > 0 || Object.keys(children).length > 0) {\n            res[PRIMARY_OUTLET] = new UrlSegmentGroup(segments, children);\n        }\n        return res;\n    };\n    /**\n     * @return {?}\n     */\n    UrlParser.prototype.parseSegment = function () {\n        var /** @type {?} */ path = matchSegments(this.remaining);\n        if (path === '' && this.peekStartsWith(';')) {\n            throw new Error(\"Empty path url segment cannot have parameters: '\" + this.remaining + \"'.\");\n        }\n        this.capture(path);\n        return new UrlSegment(decode(path), this.parseMatrixParams());\n    };\n    /**\n     * @return {?}\n     */\n    UrlParser.prototype.parseMatrixParams = function () {\n        var /** @type {?} */ params = {};\n        while (this.consumeOptional(';')) {\n            this.parseParam(params);\n        }\n        return params;\n    };\n    /**\n     * @param {?} params\n     * @return {?}\n     */\n    UrlParser.prototype.parseParam = function (params) {\n        var /** @type {?} */ key = matchSegments(this.remaining);\n        if (!key) {\n            return;\n        }\n        this.capture(key);\n        var /** @type {?} */ value = '';\n        if (this.consumeOptional('=')) {\n            var /** @type {?} */ valueMatch = matchSegments(this.remaining);\n            if (valueMatch) {\n                value = valueMatch;\n                this.capture(value);\n            }\n        }\n        params[decode(key)] = decode(value);\n    };\n    /**\n     * @param {?} params\n     * @return {?}\n     */\n    UrlParser.prototype.parseQueryParam = function (params) {\n        var /** @type {?} */ key = matchQueryParams(this.remaining);\n        if (!key) {\n            return;\n        }\n        this.capture(key);\n        var /** @type {?} */ value = '';\n        if (this.consumeOptional('=')) {\n            var /** @type {?} */ valueMatch = matchUrlQueryParamValue(this.remaining);\n            if (valueMatch) {\n                value = valueMatch;\n                this.capture(value);\n            }\n        }\n        var /** @type {?} */ decodedKey = decode(key);\n        var /** @type {?} */ decodedVal = decode(value);\n        if (params.hasOwnProperty(decodedKey)) {\n            // Append to existing values\n            var /** @type {?} */ currentVal = params[decodedKey];\n            if (!Array.isArray(currentVal)) {\n                currentVal = [currentVal];\n                params[decodedKey] = currentVal;\n            }\n            currentVal.push(decodedVal);\n        }\n        else {\n            // Create a new value\n            params[decodedKey] = decodedVal;\n        }\n    };\n    /**\n     * @param {?} allowPrimary\n     * @return {?}\n     */\n    UrlParser.prototype.parseParens = function (allowPrimary) {\n        var /** @type {?} */ segments = {};\n        this.capture('(');\n        while (!this.consumeOptional(')') && this.remaining.length > 0) {\n            var /** @type {?} */ path = matchSegments(this.remaining);\n            var /** @type {?} */ next = this.remaining[path.length];\n            // if is is not one of these characters, then the segment was unescaped\n            // or the group was not closed\n            if (next !== '/' && next !== ')' && next !== ';') {\n                throw new Error(\"Cannot parse url '\" + this.url + \"'\");\n            }\n            var /** @type {?} */ outletName = ((undefined));\n            if (path.indexOf(':') > -1) {\n                outletName = path.substr(0, path.indexOf(':'));\n                this.capture(outletName);\n                this.capture(':');\n            }\n            else if (allowPrimary) {\n                outletName = PRIMARY_OUTLET;\n            }\n            var /** @type {?} */ children = this.parseChildren();\n            segments[outletName] = Object.keys(children).length === 1 ? children[PRIMARY_OUTLET] :\n                new UrlSegmentGroup([], children);\n            this.consumeOptional('//');\n        }\n        return segments;\n    };\n    /**\n     * @param {?} str\n     * @return {?}\n     */\n    UrlParser.prototype.peekStartsWith = function (str) { return this.remaining.startsWith(str); };\n    /**\n     * @param {?} str\n     * @return {?}\n     */\n    UrlParser.prototype.consumeOptional = function (str) {\n        if (this.peekStartsWith(str)) {\n            this.remaining = this.remaining.substring(str.length);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} str\n     * @return {?}\n     */\n    UrlParser.prototype.capture = function (str) {\n        if (!this.consumeOptional(str)) {\n            throw new Error(\"Expected \\\"\" + str + \"\\\".\");\n        }\n    };\n    return UrlParser;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NoMatch = (function () {\n    /**\n     * @param {?=} segmentGroup\n     */\n    function NoMatch(segmentGroup) {\n        this.segmentGroup = segmentGroup || null;\n    }\n    return NoMatch;\n}());\nvar AbsoluteRedirect = (function () {\n    /**\n     * @param {?} urlTree\n     */\n    function AbsoluteRedirect(urlTree) {\n        this.urlTree = urlTree;\n    }\n    return AbsoluteRedirect;\n}());\n/**\n * @param {?} segmentGroup\n * @return {?}\n */\nfunction noMatch(segmentGroup) {\n    return new __WEBPACK_IMPORTED_MODULE_14_rxjs_Observable__[\"Observable\"](function (obs) { return obs.error(new NoMatch(segmentGroup)); });\n}\n/**\n * @param {?} newTree\n * @return {?}\n */\nfunction absoluteRedirect(newTree) {\n    return new __WEBPACK_IMPORTED_MODULE_14_rxjs_Observable__[\"Observable\"](function (obs) { return obs.error(new AbsoluteRedirect(newTree)); });\n}\n/**\n * @param {?} redirectTo\n * @return {?}\n */\nfunction namedOutletsRedirect(redirectTo) {\n    return new __WEBPACK_IMPORTED_MODULE_14_rxjs_Observable__[\"Observable\"](function (obs) { return obs.error(new Error(\"Only absolute redirects can have named outlets. redirectTo: '\" + redirectTo + \"'\")); });\n}\n/**\n * @param {?} route\n * @return {?}\n */\nfunction canLoadFails(route) {\n    return new __WEBPACK_IMPORTED_MODULE_14_rxjs_Observable__[\"Observable\"](function (obs) { return obs.error(navigationCancelingError(\"Cannot load children because the guard of the route \\\"path: '\" + route.path + \"'\\\" returned false\")); });\n}\n/**\n * Returns the `UrlTree` with the redirection applied.\n *\n * Lazy modules are loaded along the way.\n * @param {?} moduleInjector\n * @param {?} configLoader\n * @param {?} urlSerializer\n * @param {?} urlTree\n * @param {?} config\n * @return {?}\n */\nfunction applyRedirects(moduleInjector, configLoader, urlSerializer, urlTree, config) {\n    return new ApplyRedirects(moduleInjector, configLoader, urlSerializer, urlTree, config).apply();\n}\nvar ApplyRedirects = (function () {\n    /**\n     * @param {?} moduleInjector\n     * @param {?} configLoader\n     * @param {?} urlSerializer\n     * @param {?} urlTree\n     * @param {?} config\n     */\n    function ApplyRedirects(moduleInjector, configLoader, urlSerializer, urlTree, config) {\n        this.configLoader = configLoader;\n        this.urlSerializer = urlSerializer;\n        this.urlTree = urlTree;\n        this.config = config;\n        this.allowRedirects = true;\n        this.ngModule = moduleInjector.get(__WEBPACK_IMPORTED_MODULE_2__angular_core__[\"NgModuleRef\"]);\n    }\n    /**\n     * @return {?}\n     */\n    ApplyRedirects.prototype.apply = function () {\n        var _this = this;\n        var /** @type {?} */ expanded$ = this.expandSegmentGroup(this.ngModule, this.config, this.urlTree.root, PRIMARY_OUTLET);\n        var /** @type {?} */ urlTrees$ = __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(expanded$, function (rootSegmentGroup) { return _this.createUrlTree(rootSegmentGroup, _this.urlTree.queryParams, /** @type {?} */ ((_this.urlTree.fragment))); });\n        return __WEBPACK_IMPORTED_MODULE_15_rxjs_operator_catch__[\"_catch\"].call(urlTrees$, function (e) {\n            if (e instanceof AbsoluteRedirect) {\n                // after an absolute redirect we do not apply any more redirects!\n                _this.allowRedirects = false;\n                // we need to run matching, so we can fetch all lazy-loaded modules\n                return _this.match(e.urlTree);\n            }\n            if (e instanceof NoMatch) {\n                throw _this.noMatchError(e);\n            }\n            throw e;\n        });\n    };\n    /**\n     * @param {?} tree\n     * @return {?}\n     */\n    ApplyRedirects.prototype.match = function (tree) {\n        var _this = this;\n        var /** @type {?} */ expanded$ = this.expandSegmentGroup(this.ngModule, this.config, tree.root, PRIMARY_OUTLET);\n        var /** @type {?} */ mapped$ = __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(expanded$, function (rootSegmentGroup) { return _this.createUrlTree(rootSegmentGroup, tree.queryParams, /** @type {?} */ ((tree.fragment))); });\n        return __WEBPACK_IMPORTED_MODULE_15_rxjs_operator_catch__[\"_catch\"].call(mapped$, function (e) {\n            if (e instanceof NoMatch) {\n                throw _this.noMatchError(e);\n            }\n            throw e;\n        });\n    };\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ApplyRedirects.prototype.noMatchError = function (e) {\n        return new Error(\"Cannot match any routes. URL Segment: '\" + e.segmentGroup + \"'\");\n    };\n    /**\n     * @param {?} rootCandidate\n     * @param {?} queryParams\n     * @param {?} fragment\n     * @return {?}\n     */\n    ApplyRedirects.prototype.createUrlTree = function (rootCandidate, queryParams, fragment) {\n        var /** @type {?} */ root = rootCandidate.segments.length > 0 ?\n            new UrlSegmentGroup([], (_a = {}, _a[PRIMARY_OUTLET] = rootCandidate, _a)) :\n            rootCandidate;\n        return new UrlTree(root, queryParams, fragment);\n        var _a;\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} routes\n     * @param {?} segmentGroup\n     * @param {?} outlet\n     * @return {?}\n     */\n    ApplyRedirects.prototype.expandSegmentGroup = function (ngModule, routes, segmentGroup, outlet) {\n        if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n            return __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(this.expandChildren(ngModule, routes, segmentGroup), function (children) { return new UrlSegmentGroup([], children); });\n        }\n        return this.expandSegment(ngModule, segmentGroup, routes, segmentGroup.segments, outlet, true);\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} routes\n     * @param {?} segmentGroup\n     * @return {?}\n     */\n    ApplyRedirects.prototype.expandChildren = function (ngModule, routes, segmentGroup) {\n        var _this = this;\n        return waitForMap(segmentGroup.children, function (childOutlet, child) { return _this.expandSegmentGroup(ngModule, routes, child, childOutlet); });\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} segmentGroup\n     * @param {?} routes\n     * @param {?} segments\n     * @param {?} outlet\n     * @param {?} allowRedirects\n     * @return {?}\n     */\n    ApplyRedirects.prototype.expandSegment = function (ngModule, segmentGroup, routes, segments, outlet, allowRedirects) {\n        var _this = this;\n        var /** @type {?} */ routes$ = __WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"].apply(void 0, routes);\n        var /** @type {?} */ processedRoutes$ = __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(routes$, function (r) {\n            var /** @type {?} */ expanded$ = _this.expandSegmentAgainstRoute(ngModule, segmentGroup, routes, r, segments, outlet, allowRedirects);\n            return __WEBPACK_IMPORTED_MODULE_15_rxjs_operator_catch__[\"_catch\"].call(expanded$, function (e) {\n                if (e instanceof NoMatch) {\n                    return Object(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])(null);\n                }\n                throw e;\n            });\n        });\n        var /** @type {?} */ concattedProcessedRoutes$ = __WEBPACK_IMPORTED_MODULE_16_rxjs_operator_concatAll__[\"concatAll\"].call(processedRoutes$);\n        var /** @type {?} */ first$ = __WEBPACK_IMPORTED_MODULE_9_rxjs_operator_first__[\"first\"].call(concattedProcessedRoutes$, function (s) { return !!s; });\n        return __WEBPACK_IMPORTED_MODULE_15_rxjs_operator_catch__[\"_catch\"].call(first$, function (e, _) {\n            if (e instanceof __WEBPACK_IMPORTED_MODULE_17_rxjs_util_EmptyError__[\"EmptyError\"]) {\n                if (_this.noLeftoversInUrl(segmentGroup, segments, outlet)) {\n                    return Object(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])(new UrlSegmentGroup([], {}));\n                }\n                throw new NoMatch(segmentGroup);\n            }\n            throw e;\n        });\n    };\n    /**\n     * @param {?} segmentGroup\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    ApplyRedirects.prototype.noLeftoversInUrl = function (segmentGroup, segments, outlet) {\n        return segments.length === 0 && !segmentGroup.children[outlet];\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} segmentGroup\n     * @param {?} routes\n     * @param {?} route\n     * @param {?} paths\n     * @param {?} outlet\n     * @param {?} allowRedirects\n     * @return {?}\n     */\n    ApplyRedirects.prototype.expandSegmentAgainstRoute = function (ngModule, segmentGroup, routes, route, paths, outlet, allowRedirects) {\n        if (getOutlet(route) !== outlet) {\n            return noMatch(segmentGroup);\n        }\n        if (route.redirectTo === undefined) {\n            return this.matchSegmentAgainstRoute(ngModule, segmentGroup, route, paths);\n        }\n        if (allowRedirects && this.allowRedirects) {\n            return this.expandSegmentAgainstRouteUsingRedirect(ngModule, segmentGroup, routes, route, paths, outlet);\n        }\n        return noMatch(segmentGroup);\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} segmentGroup\n     * @param {?} routes\n     * @param {?} route\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    ApplyRedirects.prototype.expandSegmentAgainstRouteUsingRedirect = function (ngModule, segmentGroup, routes, route, segments, outlet) {\n        if (route.path === '**') {\n            return this.expandWildCardWithParamsAgainstRouteUsingRedirect(ngModule, routes, route, outlet);\n        }\n        return this.expandRegularSegmentAgainstRouteUsingRedirect(ngModule, segmentGroup, routes, route, segments, outlet);\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} routes\n     * @param {?} route\n     * @param {?} outlet\n     * @return {?}\n     */\n    ApplyRedirects.prototype.expandWildCardWithParamsAgainstRouteUsingRedirect = function (ngModule, routes, route, outlet) {\n        var _this = this;\n        var /** @type {?} */ newTree = this.applyRedirectCommands([], /** @type {?} */ ((route.redirectTo)), {});\n        if (((route.redirectTo)).startsWith('/')) {\n            return absoluteRedirect(newTree);\n        }\n        return __WEBPACK_IMPORTED_MODULE_12_rxjs_operator_mergeMap__[\"mergeMap\"].call(this.lineralizeSegments(route, newTree), function (newSegments) {\n            var /** @type {?} */ group = new UrlSegmentGroup(newSegments, {});\n            return _this.expandSegment(ngModule, group, routes, newSegments, outlet, false);\n        });\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} segmentGroup\n     * @param {?} routes\n     * @param {?} route\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    ApplyRedirects.prototype.expandRegularSegmentAgainstRouteUsingRedirect = function (ngModule, segmentGroup, routes, route, segments, outlet) {\n        var _this = this;\n        var _a = match(segmentGroup, route, segments), matched = _a.matched, consumedSegments = _a.consumedSegments, lastChild = _a.lastChild, positionalParamSegments = _a.positionalParamSegments;\n        if (!matched)\n            return noMatch(segmentGroup);\n        var /** @type {?} */ newTree = this.applyRedirectCommands(consumedSegments, /** @type {?} */ ((route.redirectTo)), /** @type {?} */ (positionalParamSegments));\n        if (((route.redirectTo)).startsWith('/')) {\n            return absoluteRedirect(newTree);\n        }\n        return __WEBPACK_IMPORTED_MODULE_12_rxjs_operator_mergeMap__[\"mergeMap\"].call(this.lineralizeSegments(route, newTree), function (newSegments) {\n            return _this.expandSegment(ngModule, segmentGroup, routes, newSegments.concat(segments.slice(lastChild)), outlet, false);\n        });\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} rawSegmentGroup\n     * @param {?} route\n     * @param {?} segments\n     * @return {?}\n     */\n    ApplyRedirects.prototype.matchSegmentAgainstRoute = function (ngModule, rawSegmentGroup, route, segments) {\n        var _this = this;\n        if (route.path === '**') {\n            if (route.loadChildren) {\n                return __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(this.configLoader.load(ngModule.injector, route), function (cfg) {\n                    route._loadedConfig = cfg;\n                    return new UrlSegmentGroup(segments, {});\n                });\n            }\n            return Object(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])(new UrlSegmentGroup(segments, {}));\n        }\n        var _a = match(rawSegmentGroup, route, segments), matched = _a.matched, consumedSegments = _a.consumedSegments, lastChild = _a.lastChild;\n        if (!matched)\n            return noMatch(rawSegmentGroup);\n        var /** @type {?} */ rawSlicedSegments = segments.slice(lastChild);\n        var /** @type {?} */ childConfig$ = this.getChildConfig(ngModule, route);\n        return __WEBPACK_IMPORTED_MODULE_12_rxjs_operator_mergeMap__[\"mergeMap\"].call(childConfig$, function (routerConfig) {\n            var /** @type {?} */ childModule = routerConfig.module;\n            var /** @type {?} */ childConfig = routerConfig.routes;\n            var _a = split(rawSegmentGroup, consumedSegments, rawSlicedSegments, childConfig), segmentGroup = _a.segmentGroup, slicedSegments = _a.slicedSegments;\n            if (slicedSegments.length === 0 && segmentGroup.hasChildren()) {\n                var /** @type {?} */ expanded$_1 = _this.expandChildren(childModule, childConfig, segmentGroup);\n                return __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(expanded$_1, function (children) { return new UrlSegmentGroup(consumedSegments, children); });\n            }\n            if (childConfig.length === 0 && slicedSegments.length === 0) {\n                return Object(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])(new UrlSegmentGroup(consumedSegments, {}));\n            }\n            var /** @type {?} */ expanded$ = _this.expandSegment(childModule, segmentGroup, childConfig, slicedSegments, PRIMARY_OUTLET, true);\n            return __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(expanded$, function (cs) { return new UrlSegmentGroup(consumedSegments.concat(cs.segments), cs.children); });\n        });\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} route\n     * @return {?}\n     */\n    ApplyRedirects.prototype.getChildConfig = function (ngModule, route) {\n        var _this = this;\n        if (route.children) {\n            // The children belong to the same module\n            return Object(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])(new LoadedRouterConfig(route.children, ngModule));\n        }\n        if (route.loadChildren) {\n            // lazy children belong to the loaded module\n            if (route._loadedConfig !== undefined) {\n                return Object(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])(route._loadedConfig);\n            }\n            return __WEBPACK_IMPORTED_MODULE_12_rxjs_operator_mergeMap__[\"mergeMap\"].call(runCanLoadGuard(ngModule.injector, route), function (shouldLoad) {\n                if (shouldLoad) {\n                    return __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(_this.configLoader.load(ngModule.injector, route), function (cfg) {\n                        route._loadedConfig = cfg;\n                        return cfg;\n                    });\n                }\n                return canLoadFails(route);\n            });\n        }\n        return Object(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])(new LoadedRouterConfig([], ngModule));\n    };\n    /**\n     * @param {?} route\n     * @param {?} urlTree\n     * @return {?}\n     */\n    ApplyRedirects.prototype.lineralizeSegments = function (route, urlTree) {\n        var /** @type {?} */ res = [];\n        var /** @type {?} */ c = urlTree.root;\n        while (true) {\n            res = res.concat(c.segments);\n            if (c.numberOfChildren === 0) {\n                return Object(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])(res);\n            }\n            if (c.numberOfChildren > 1 || !c.children[PRIMARY_OUTLET]) {\n                return namedOutletsRedirect(/** @type {?} */ ((route.redirectTo)));\n            }\n            c = c.children[PRIMARY_OUTLET];\n        }\n    };\n    /**\n     * @param {?} segments\n     * @param {?} redirectTo\n     * @param {?} posParams\n     * @return {?}\n     */\n    ApplyRedirects.prototype.applyRedirectCommands = function (segments, redirectTo, posParams) {\n        return this.applyRedirectCreatreUrlTree(redirectTo, this.urlSerializer.parse(redirectTo), segments, posParams);\n    };\n    /**\n     * @param {?} redirectTo\n     * @param {?} urlTree\n     * @param {?} segments\n     * @param {?} posParams\n     * @return {?}\n     */\n    ApplyRedirects.prototype.applyRedirectCreatreUrlTree = function (redirectTo, urlTree, segments, posParams) {\n        var /** @type {?} */ newRoot = this.createSegmentGroup(redirectTo, urlTree.root, segments, posParams);\n        return new UrlTree(newRoot, this.createQueryParams(urlTree.queryParams, this.urlTree.queryParams), urlTree.fragment);\n    };\n    /**\n     * @param {?} redirectToParams\n     * @param {?} actualParams\n     * @return {?}\n     */\n    ApplyRedirects.prototype.createQueryParams = function (redirectToParams, actualParams) {\n        var /** @type {?} */ res = {};\n        forEach(redirectToParams, function (v, k) {\n            var /** @type {?} */ copySourceValue = typeof v === 'string' && v.startsWith(':');\n            if (copySourceValue) {\n                var /** @type {?} */ sourceName = v.substring(1);\n                res[k] = actualParams[sourceName];\n            }\n            else {\n                res[k] = v;\n            }\n        });\n        return res;\n    };\n    /**\n     * @param {?} redirectTo\n     * @param {?} group\n     * @param {?} segments\n     * @param {?} posParams\n     * @return {?}\n     */\n    ApplyRedirects.prototype.createSegmentGroup = function (redirectTo, group, segments, posParams) {\n        var _this = this;\n        var /** @type {?} */ updatedSegments = this.createSegments(redirectTo, group.segments, segments, posParams);\n        var /** @type {?} */ children = {};\n        forEach(group.children, function (child, name) {\n            children[name] = _this.createSegmentGroup(redirectTo, child, segments, posParams);\n        });\n        return new UrlSegmentGroup(updatedSegments, children);\n    };\n    /**\n     * @param {?} redirectTo\n     * @param {?} redirectToSegments\n     * @param {?} actualSegments\n     * @param {?} posParams\n     * @return {?}\n     */\n    ApplyRedirects.prototype.createSegments = function (redirectTo, redirectToSegments, actualSegments, posParams) {\n        var _this = this;\n        return redirectToSegments.map(function (s) { return s.path.startsWith(':') ? _this.findPosParam(redirectTo, s, posParams) :\n            _this.findOrReturn(s, actualSegments); });\n    };\n    /**\n     * @param {?} redirectTo\n     * @param {?} redirectToUrlSegment\n     * @param {?} posParams\n     * @return {?}\n     */\n    ApplyRedirects.prototype.findPosParam = function (redirectTo, redirectToUrlSegment, posParams) {\n        var /** @type {?} */ pos = posParams[redirectToUrlSegment.path.substring(1)];\n        if (!pos)\n            throw new Error(\"Cannot redirect to '\" + redirectTo + \"'. Cannot find '\" + redirectToUrlSegment.path + \"'.\");\n        return pos;\n    };\n    /**\n     * @param {?} redirectToUrlSegment\n     * @param {?} actualSegments\n     * @return {?}\n     */\n    ApplyRedirects.prototype.findOrReturn = function (redirectToUrlSegment, actualSegments) {\n        var /** @type {?} */ idx = 0;\n        for (var _i = 0, actualSegments_1 = actualSegments; _i < actualSegments_1.length; _i++) {\n            var s = actualSegments_1[_i];\n            if (s.path === redirectToUrlSegment.path) {\n                actualSegments.splice(idx);\n                return s;\n            }\n            idx++;\n        }\n        return redirectToUrlSegment;\n    };\n    return ApplyRedirects;\n}());\n/**\n * @param {?} moduleInjector\n * @param {?} route\n * @return {?}\n */\nfunction runCanLoadGuard(moduleInjector, route) {\n    var /** @type {?} */ canLoad = route.canLoad;\n    if (!canLoad || canLoad.length === 0)\n        return Object(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])(true);\n    var /** @type {?} */ obs = __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(Object(__WEBPACK_IMPORTED_MODULE_5_rxjs_observable_from__[\"from\"])(canLoad), function (injectionToken) {\n        var /** @type {?} */ guard = moduleInjector.get(injectionToken);\n        return wrapIntoObservable(guard.canLoad ? guard.canLoad(route) : guard(route));\n    });\n    return andObservables(obs);\n}\n/**\n * @param {?} segmentGroup\n * @param {?} route\n * @param {?} segments\n * @return {?}\n */\nfunction match(segmentGroup, route, segments) {\n    if (route.path === '') {\n        if ((route.pathMatch === 'full') && (segmentGroup.hasChildren() || segments.length > 0)) {\n            return { matched: false, consumedSegments: [], lastChild: 0, positionalParamSegments: {} };\n        }\n        return { matched: true, consumedSegments: [], lastChild: 0, positionalParamSegments: {} };\n    }\n    var /** @type {?} */ matcher = route.matcher || defaultUrlMatcher;\n    var /** @type {?} */ res = matcher(segments, segmentGroup, route);\n    if (!res) {\n        return {\n            matched: false,\n            consumedSegments: /** @type {?} */ ([]),\n            lastChild: 0,\n            positionalParamSegments: {},\n        };\n    }\n    return {\n        matched: true,\n        consumedSegments: /** @type {?} */ ((res.consumed)),\n        lastChild: /** @type {?} */ ((res.consumed.length)),\n        positionalParamSegments: /** @type {?} */ ((res.posParams)),\n    };\n}\n/**\n * @param {?} segmentGroup\n * @param {?} consumedSegments\n * @param {?} slicedSegments\n * @param {?} config\n * @return {?}\n */\nfunction split(segmentGroup, consumedSegments, slicedSegments, config) {\n    if (slicedSegments.length > 0 &&\n        containsEmptyPathRedirectsWithNamedOutlets(segmentGroup, slicedSegments, config)) {\n        var /** @type {?} */ s = new UrlSegmentGroup(consumedSegments, createChildrenForEmptySegments(config, new UrlSegmentGroup(slicedSegments, segmentGroup.children)));\n        return { segmentGroup: mergeTrivialChildren(s), slicedSegments: [] };\n    }\n    if (slicedSegments.length === 0 &&\n        containsEmptyPathRedirects(segmentGroup, slicedSegments, config)) {\n        var /** @type {?} */ s = new UrlSegmentGroup(segmentGroup.segments, addEmptySegmentsToChildrenIfNeeded(segmentGroup, slicedSegments, config, segmentGroup.children));\n        return { segmentGroup: mergeTrivialChildren(s), slicedSegments: slicedSegments };\n    }\n    return { segmentGroup: segmentGroup, slicedSegments: slicedSegments };\n}\n/**\n * @param {?} s\n * @return {?}\n */\nfunction mergeTrivialChildren(s) {\n    if (s.numberOfChildren === 1 && s.children[PRIMARY_OUTLET]) {\n        var /** @type {?} */ c = s.children[PRIMARY_OUTLET];\n        return new UrlSegmentGroup(s.segments.concat(c.segments), c.children);\n    }\n    return s;\n}\n/**\n * @param {?} segmentGroup\n * @param {?} slicedSegments\n * @param {?} routes\n * @param {?} children\n * @return {?}\n */\nfunction addEmptySegmentsToChildrenIfNeeded(segmentGroup, slicedSegments, routes, children) {\n    var /** @type {?} */ res = {};\n    for (var _i = 0, routes_1 = routes; _i < routes_1.length; _i++) {\n        var r = routes_1[_i];\n        if (isEmptyPathRedirect(segmentGroup, slicedSegments, r) && !children[getOutlet(r)]) {\n            res[getOutlet(r)] = new UrlSegmentGroup([], {});\n        }\n    }\n    return Object.assign({}, children, res);\n}\n/**\n * @param {?} routes\n * @param {?} primarySegmentGroup\n * @return {?}\n */\nfunction createChildrenForEmptySegments(routes, primarySegmentGroup) {\n    var /** @type {?} */ res = {};\n    res[PRIMARY_OUTLET] = primarySegmentGroup;\n    for (var _i = 0, routes_2 = routes; _i < routes_2.length; _i++) {\n        var r = routes_2[_i];\n        if (r.path === '' && getOutlet(r) !== PRIMARY_OUTLET) {\n            res[getOutlet(r)] = new UrlSegmentGroup([], {});\n        }\n    }\n    return res;\n}\n/**\n * @param {?} segmentGroup\n * @param {?} segments\n * @param {?} routes\n * @return {?}\n */\nfunction containsEmptyPathRedirectsWithNamedOutlets(segmentGroup, segments, routes) {\n    return routes.some(function (r) { return isEmptyPathRedirect(segmentGroup, segments, r) && getOutlet(r) !== PRIMARY_OUTLET; });\n}\n/**\n * @param {?} segmentGroup\n * @param {?} segments\n * @param {?} routes\n * @return {?}\n */\nfunction containsEmptyPathRedirects(segmentGroup, segments, routes) {\n    return routes.some(function (r) { return isEmptyPathRedirect(segmentGroup, segments, r); });\n}\n/**\n * @param {?} segmentGroup\n * @param {?} segments\n * @param {?} r\n * @return {?}\n */\nfunction isEmptyPathRedirect(segmentGroup, segments, r) {\n    if ((segmentGroup.hasChildren() || segments.length > 0) && r.pathMatch === 'full') {\n        return false;\n    }\n    return r.path === '' && r.redirectTo !== undefined;\n}\n/**\n * @param {?} route\n * @return {?}\n */\nfunction getOutlet(route) {\n    return route.outlet || PRIMARY_OUTLET;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar Tree = (function () {\n    /**\n     * @param {?} root\n     */\n    function Tree(root) {\n        this._root = root;\n    }\n    Object.defineProperty(Tree.prototype, \"root\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._root.value; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * \\@internal\n     * @param {?} t\n     * @return {?}\n     */\n    Tree.prototype.parent = function (t) {\n        var /** @type {?} */ p = this.pathFromRoot(t);\n        return p.length > 1 ? p[p.length - 2] : null;\n    };\n    /**\n     * \\@internal\n     * @param {?} t\n     * @return {?}\n     */\n    Tree.prototype.children = function (t) {\n        var /** @type {?} */ n = findNode(t, this._root);\n        return n ? n.children.map(function (t) { return t.value; }) : [];\n    };\n    /**\n     * \\@internal\n     * @param {?} t\n     * @return {?}\n     */\n    Tree.prototype.firstChild = function (t) {\n        var /** @type {?} */ n = findNode(t, this._root);\n        return n && n.children.length > 0 ? n.children[0].value : null;\n    };\n    /**\n     * \\@internal\n     * @param {?} t\n     * @return {?}\n     */\n    Tree.prototype.siblings = function (t) {\n        var /** @type {?} */ p = findPath(t, this._root);\n        if (p.length < 2)\n            return [];\n        var /** @type {?} */ c = p[p.length - 2].children.map(function (c) { return c.value; });\n        return c.filter(function (cc) { return cc !== t; });\n    };\n    /**\n     * \\@internal\n     * @param {?} t\n     * @return {?}\n     */\n    Tree.prototype.pathFromRoot = function (t) { return findPath(t, this._root).map(function (s) { return s.value; }); };\n    return Tree;\n}());\n/**\n * @template T\n * @param {?} value\n * @param {?} node\n * @return {?}\n */\nfunction findNode(value, node) {\n    if (value === node.value)\n        return node;\n    for (var _i = 0, _a = node.children; _i < _a.length; _i++) {\n        var child = _a[_i];\n        var /** @type {?} */ node_1 = findNode(value, child);\n        if (node_1)\n            return node_1;\n    }\n    return null;\n}\n/**\n * @template T\n * @param {?} value\n * @param {?} node\n * @return {?}\n */\nfunction findPath(value, node) {\n    if (value === node.value)\n        return [node];\n    for (var _i = 0, _a = node.children; _i < _a.length; _i++) {\n        var child = _a[_i];\n        var /** @type {?} */ path = findPath(value, child);\n        if (path.length) {\n            path.unshift(node);\n            return path;\n        }\n    }\n    return [];\n}\nvar TreeNode = (function () {\n    /**\n     * @param {?} value\n     * @param {?} children\n     */\n    function TreeNode(value, children) {\n        this.value = value;\n        this.children = children;\n    }\n    /**\n     * @return {?}\n     */\n    TreeNode.prototype.toString = function () { return \"TreeNode(\" + this.value + \")\"; };\n    return TreeNode;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Represents the state of the router.\n *\n * \\@howToUse\n *\n * ```\n * \\@Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const state: RouterState = router.routerState;\n *     const root: ActivatedRoute = state.root;\n *     const child = root.firstChild;\n *     const id: Observable<string> = child.params.map(p => p.id);\n *     //...\n *   }\n * }\n * ```\n *\n * \\@description\n * RouterState is a tree of activated routes. Every node in this tree knows about the \"consumed\" URL\n * segments, the extracted parameters, and the resolved data.\n *\n * See {\\@link ActivatedRoute} for more information.\n *\n * \\@stable\n */\nvar RouterState = (function (_super) {\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"a\" /* __extends */](RouterState, _super);\n    /**\n     * \\@internal\n     * @param {?} root\n     * @param {?} snapshot\n     */\n    function RouterState(root, snapshot) {\n        var _this = _super.call(this, root) || this;\n        _this.snapshot = snapshot;\n        setRouterState(_this, root);\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    RouterState.prototype.toString = function () { return this.snapshot.toString(); };\n    return RouterState;\n}(Tree));\n/**\n * @param {?} urlTree\n * @param {?} rootComponent\n * @return {?}\n */\nfunction createEmptyState(urlTree, rootComponent) {\n    var /** @type {?} */ snapshot = createEmptyStateSnapshot(urlTree, rootComponent);\n    var /** @type {?} */ emptyUrl = new __WEBPACK_IMPORTED_MODULE_3_rxjs_BehaviorSubject__[\"BehaviorSubject\"]([new UrlSegment('', {})]);\n    var /** @type {?} */ emptyParams = new __WEBPACK_IMPORTED_MODULE_3_rxjs_BehaviorSubject__[\"BehaviorSubject\"]({});\n    var /** @type {?} */ emptyData = new __WEBPACK_IMPORTED_MODULE_3_rxjs_BehaviorSubject__[\"BehaviorSubject\"]({});\n    var /** @type {?} */ emptyQueryParams = new __WEBPACK_IMPORTED_MODULE_3_rxjs_BehaviorSubject__[\"BehaviorSubject\"]({});\n    var /** @type {?} */ fragment = new __WEBPACK_IMPORTED_MODULE_3_rxjs_BehaviorSubject__[\"BehaviorSubject\"]('');\n    var /** @type {?} */ activated = new ActivatedRoute(emptyUrl, emptyParams, emptyQueryParams, fragment, emptyData, PRIMARY_OUTLET, rootComponent, snapshot.root);\n    activated.snapshot = snapshot.root;\n    return new RouterState(new TreeNode(activated, []), snapshot);\n}\n/**\n * @param {?} urlTree\n * @param {?} rootComponent\n * @return {?}\n */\nfunction createEmptyStateSnapshot(urlTree, rootComponent) {\n    var /** @type {?} */ emptyParams = {};\n    var /** @type {?} */ emptyData = {};\n    var /** @type {?} */ emptyQueryParams = {};\n    var /** @type {?} */ fragment = '';\n    var /** @type {?} */ activated = new ActivatedRouteSnapshot([], emptyParams, emptyQueryParams, fragment, emptyData, PRIMARY_OUTLET, rootComponent, null, urlTree.root, -1, {});\n    return new RouterStateSnapshot('', new TreeNode(activated, []));\n}\n/**\n * \\@whatItDoes Contains the information about a route associated with a component loaded in an\n * outlet.\n * An `ActivatedRoute` can also be used to traverse the router state tree.\n *\n * \\@howToUse\n *\n * ```\n * \\@Component({...})\n * class MyComponent {\n *   constructor(route: ActivatedRoute) {\n *     const id: Observable<string> = route.params.map(p => p.id);\n *     const url: Observable<string> = route.url.map(segments => segments.join(''));\n *     // route.data includes both `data` and `resolve`\n *     const user = route.data.map(d => d.user);\n *   }\n * }\n * ```\n *\n * \\@stable\n */\nvar ActivatedRoute = (function () {\n    /**\n     * \\@internal\n     * @param {?} url\n     * @param {?} params\n     * @param {?} queryParams\n     * @param {?} fragment\n     * @param {?} data\n     * @param {?} outlet\n     * @param {?} component\n     * @param {?} futureSnapshot\n     */\n    function ActivatedRoute(url, params, queryParams, fragment, data, outlet, component, futureSnapshot) {\n        this.url = url;\n        this.params = params;\n        this.queryParams = queryParams;\n        this.fragment = fragment;\n        this.data = data;\n        this.outlet = outlet;\n        this.component = component;\n        this._futureSnapshot = futureSnapshot;\n    }\n    Object.defineProperty(ActivatedRoute.prototype, \"routeConfig\", {\n        /**\n         * The configuration used to match this route\n         * @return {?}\n         */\n        get: function () { return this._futureSnapshot.routeConfig; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"root\", {\n        /**\n         * The root of the router state\n         * @return {?}\n         */\n        get: function () { return this._routerState.root; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"parent\", {\n        /**\n         * The parent of this route in the router state tree\n         * @return {?}\n         */\n        get: function () { return this._routerState.parent(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"firstChild\", {\n        /**\n         * The first child of this route in the router state tree\n         * @return {?}\n         */\n        get: function () { return this._routerState.firstChild(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"children\", {\n        /**\n         * The children of this route in the router state tree\n         * @return {?}\n         */\n        get: function () { return this._routerState.children(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"pathFromRoot\", {\n        /**\n         * The path from the root of the router state tree to this route\n         * @return {?}\n         */\n        get: function () { return this._routerState.pathFromRoot(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"paramMap\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            if (!this._paramMap) {\n                this._paramMap = __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(this.params, function (p) { return convertToParamMap(p); });\n            }\n            return this._paramMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"queryParamMap\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            if (!this._queryParamMap) {\n                this._queryParamMap =\n                    __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(this.queryParams, function (p) { return convertToParamMap(p); });\n            }\n            return this._queryParamMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ActivatedRoute.prototype.toString = function () {\n        return this.snapshot ? this.snapshot.toString() : \"Future(\" + this._futureSnapshot + \")\";\n    };\n    return ActivatedRoute;\n}());\n/**\n * \\@internal\n * @param {?} route\n * @return {?}\n */\nfunction inheritedParamsDataResolve(route) {\n    var /** @type {?} */ pathToRoot = route.pathFromRoot;\n    var /** @type {?} */ inhertingStartingFrom = pathToRoot.length - 1;\n    while (inhertingStartingFrom >= 1) {\n        var /** @type {?} */ current = pathToRoot[inhertingStartingFrom];\n        var /** @type {?} */ parent = pathToRoot[inhertingStartingFrom - 1];\n        // current route is an empty path => inherits its parent's params and data\n        if (current.routeConfig && current.routeConfig.path === '') {\n            inhertingStartingFrom--;\n            // parent is componentless => current route should inherit its params and data\n        }\n        else if (!parent.component) {\n            inhertingStartingFrom--;\n        }\n        else {\n            break;\n        }\n    }\n    return pathToRoot.slice(inhertingStartingFrom).reduce(function (res, curr) {\n        var /** @type {?} */ params = Object.assign({}, res.params, curr.params);\n        var /** @type {?} */ data = Object.assign({}, res.data, curr.data);\n        var /** @type {?} */ resolve = Object.assign({}, res.resolve, curr._resolvedData);\n        return { params: params, data: data, resolve: resolve };\n    }, /** @type {?} */ ({ params: {}, data: {}, resolve: {} }));\n}\n/**\n * \\@whatItDoes Contains the information about a route associated with a component loaded in an\n * outlet\n * at a particular moment in time. ActivatedRouteSnapshot can also be used to traverse the router\n * state tree.\n *\n * \\@howToUse\n *\n * ```\n * \\@Component({templateUrl:'./my-component.html'})\n * class MyComponent {\n *   constructor(route: ActivatedRoute) {\n *     const id: string = route.snapshot.params.id;\n *     const url: string = route.snapshot.url.join('');\n *     const user = route.snapshot.data.user;\n *   }\n * }\n * ```\n *\n * \\@stable\n */\nvar ActivatedRouteSnapshot = (function () {\n    /**\n     * \\@internal\n     * @param {?} url\n     * @param {?} params\n     * @param {?} queryParams\n     * @param {?} fragment\n     * @param {?} data\n     * @param {?} outlet\n     * @param {?} component\n     * @param {?} routeConfig\n     * @param {?} urlSegment\n     * @param {?} lastPathIndex\n     * @param {?} resolve\n     */\n    function ActivatedRouteSnapshot(url, params, queryParams, fragment, data, outlet, component, routeConfig, urlSegment, lastPathIndex, resolve) {\n        this.url = url;\n        this.params = params;\n        this.queryParams = queryParams;\n        this.fragment = fragment;\n        this.data = data;\n        this.outlet = outlet;\n        this.component = component;\n        this._routeConfig = routeConfig;\n        this._urlSegment = urlSegment;\n        this._lastPathIndex = lastPathIndex;\n        this._resolve = resolve;\n    }\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"routeConfig\", {\n        /**\n         * The configuration used to match this route\n         * @return {?}\n         */\n        get: function () { return this._routeConfig; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"root\", {\n        /**\n         * The root of the router state\n         * @return {?}\n         */\n        get: function () { return this._routerState.root; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"parent\", {\n        /**\n         * The parent of this route in the router state tree\n         * @return {?}\n         */\n        get: function () { return this._routerState.parent(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"firstChild\", {\n        /**\n         * The first child of this route in the router state tree\n         * @return {?}\n         */\n        get: function () { return this._routerState.firstChild(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"children\", {\n        /**\n         * The children of this route in the router state tree\n         * @return {?}\n         */\n        get: function () { return this._routerState.children(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"pathFromRoot\", {\n        /**\n         * The path from the root of the router state tree to this route\n         * @return {?}\n         */\n        get: function () { return this._routerState.pathFromRoot(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"paramMap\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            if (!this._paramMap) {\n                this._paramMap = convertToParamMap(this.params);\n            }\n            return this._paramMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"queryParamMap\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            if (!this._queryParamMap) {\n                this._queryParamMap = convertToParamMap(this.queryParams);\n            }\n            return this._queryParamMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ActivatedRouteSnapshot.prototype.toString = function () {\n        var /** @type {?} */ url = this.url.map(function (segment) { return segment.toString(); }).join('/');\n        var /** @type {?} */ matched = this._routeConfig ? this._routeConfig.path : '';\n        return \"Route(url:'\" + url + \"', path:'\" + matched + \"')\";\n    };\n    return ActivatedRouteSnapshot;\n}());\n/**\n * \\@whatItDoes Represents the state of the router at a moment in time.\n *\n * \\@howToUse\n *\n * ```\n * \\@Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const state: RouterState = router.routerState;\n *     const snapshot: RouterStateSnapshot = state.snapshot;\n *     const root: ActivatedRouteSnapshot = snapshot.root;\n *     const child = root.firstChild;\n *     const id: Observable<string> = child.params.map(p => p.id);\n *     //...\n *   }\n * }\n * ```\n *\n * \\@description\n * RouterStateSnapshot is a tree of activated route snapshots. Every node in this tree knows about\n * the \"consumed\" URL segments, the extracted parameters, and the resolved data.\n *\n * \\@stable\n */\nvar RouterStateSnapshot = (function (_super) {\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"a\" /* __extends */](RouterStateSnapshot, _super);\n    /**\n     * \\@internal\n     * @param {?} url\n     * @param {?} root\n     */\n    function RouterStateSnapshot(url, root) {\n        var _this = _super.call(this, root) || this;\n        _this.url = url;\n        setRouterState(_this, root);\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    RouterStateSnapshot.prototype.toString = function () { return serializeNode(this._root); };\n    return RouterStateSnapshot;\n}(Tree));\n/**\n * @template U, T\n * @param {?} state\n * @param {?} node\n * @return {?}\n */\nfunction setRouterState(state, node) {\n    node.value._routerState = state;\n    node.children.forEach(function (c) { return setRouterState(state, c); });\n}\n/**\n * @param {?} node\n * @return {?}\n */\nfunction serializeNode(node) {\n    var /** @type {?} */ c = node.children.length > 0 ? \" { \" + node.children.map(serializeNode).join(\", \") + \" } \" : '';\n    return \"\" + node.value + c;\n}\n/**\n * The expectation is that the activate route is created with the right set of parameters.\n * So we push new values into the observables only when they are not the initial values.\n * And we detect that by checking if the snapshot field is set.\n * @param {?} route\n * @return {?}\n */\nfunction advanceActivatedRoute(route) {\n    if (route.snapshot) {\n        var /** @type {?} */ currentSnapshot = route.snapshot;\n        var /** @type {?} */ nextSnapshot = route._futureSnapshot;\n        route.snapshot = nextSnapshot;\n        if (!shallowEqual(currentSnapshot.queryParams, nextSnapshot.queryParams)) {\n            ((route.queryParams)).next(nextSnapshot.queryParams);\n        }\n        if (currentSnapshot.fragment !== nextSnapshot.fragment) {\n            ((route.fragment)).next(nextSnapshot.fragment);\n        }\n        if (!shallowEqual(currentSnapshot.params, nextSnapshot.params)) {\n            ((route.params)).next(nextSnapshot.params);\n        }\n        if (!shallowEqualArrays(currentSnapshot.url, nextSnapshot.url)) {\n            ((route.url)).next(nextSnapshot.url);\n        }\n        if (!shallowEqual(currentSnapshot.data, nextSnapshot.data)) {\n            ((route.data)).next(nextSnapshot.data);\n        }\n    }\n    else {\n        route.snapshot = route._futureSnapshot;\n        // this is for resolved data\n        ((route.data)).next(route._futureSnapshot.data);\n    }\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction equalParamsAndUrlSegments(a, b) {\n    var /** @type {?} */ equalUrlParams = shallowEqual(a.params, b.params) && equalSegments(a.url, b.url);\n    var /** @type {?} */ parentsMismatch = !a.parent !== !b.parent;\n    return equalUrlParams && !parentsMismatch &&\n        (!a.parent || equalParamsAndUrlSegments(a.parent, /** @type {?} */ ((b.parent))));\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} routeReuseStrategy\n * @param {?} curr\n * @param {?} prevState\n * @return {?}\n */\nfunction createRouterState(routeReuseStrategy, curr, prevState) {\n    var /** @type {?} */ root = createNode(routeReuseStrategy, curr._root, prevState ? prevState._root : undefined);\n    return new RouterState(root, curr);\n}\n/**\n * @param {?} routeReuseStrategy\n * @param {?} curr\n * @param {?=} prevState\n * @return {?}\n */\nfunction createNode(routeReuseStrategy, curr, prevState) {\n    // reuse an activated route that is currently displayed on the screen\n    if (prevState && routeReuseStrategy.shouldReuseRoute(curr.value, prevState.value.snapshot)) {\n        var /** @type {?} */ value = prevState.value;\n        value._futureSnapshot = curr.value;\n        var /** @type {?} */ children = createOrReuseChildren(routeReuseStrategy, curr, prevState);\n        return new TreeNode(value, children);\n        // retrieve an activated route that is used to be displayed, but is not currently displayed\n    }\n    else if (routeReuseStrategy.retrieve(curr.value)) {\n        var /** @type {?} */ tree_1 = ((routeReuseStrategy.retrieve(curr.value))).route;\n        setFutureSnapshotsOfActivatedRoutes(curr, tree_1);\n        return tree_1;\n    }\n    else {\n        var /** @type {?} */ value = createActivatedRoute(curr.value);\n        var /** @type {?} */ children = curr.children.map(function (c) { return createNode(routeReuseStrategy, c); });\n        return new TreeNode(value, children);\n    }\n}\n/**\n * @param {?} curr\n * @param {?} result\n * @return {?}\n */\nfunction setFutureSnapshotsOfActivatedRoutes(curr, result) {\n    if (curr.value.routeConfig !== result.value.routeConfig) {\n        throw new Error('Cannot reattach ActivatedRouteSnapshot created from a different route');\n    }\n    if (curr.children.length !== result.children.length) {\n        throw new Error('Cannot reattach ActivatedRouteSnapshot with a different number of children');\n    }\n    result.value._futureSnapshot = curr.value;\n    for (var /** @type {?} */ i = 0; i < curr.children.length; ++i) {\n        setFutureSnapshotsOfActivatedRoutes(curr.children[i], result.children[i]);\n    }\n}\n/**\n * @param {?} routeReuseStrategy\n * @param {?} curr\n * @param {?} prevState\n * @return {?}\n */\nfunction createOrReuseChildren(routeReuseStrategy, curr, prevState) {\n    return curr.children.map(function (child) {\n        for (var _i = 0, _a = prevState.children; _i < _a.length; _i++) {\n            var p = _a[_i];\n            if (routeReuseStrategy.shouldReuseRoute(p.value.snapshot, child.value)) {\n                return createNode(routeReuseStrategy, child, p);\n            }\n        }\n        return createNode(routeReuseStrategy, child);\n    });\n}\n/**\n * @param {?} c\n * @return {?}\n */\nfunction createActivatedRoute(c) {\n    return new ActivatedRoute(new __WEBPACK_IMPORTED_MODULE_3_rxjs_BehaviorSubject__[\"BehaviorSubject\"](c.url), new __WEBPACK_IMPORTED_MODULE_3_rxjs_BehaviorSubject__[\"BehaviorSubject\"](c.params), new __WEBPACK_IMPORTED_MODULE_3_rxjs_BehaviorSubject__[\"BehaviorSubject\"](c.queryParams), new __WEBPACK_IMPORTED_MODULE_3_rxjs_BehaviorSubject__[\"BehaviorSubject\"](c.fragment), new __WEBPACK_IMPORTED_MODULE_3_rxjs_BehaviorSubject__[\"BehaviorSubject\"](c.data), c.outlet, c.component, c);\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} route\n * @param {?} urlTree\n * @param {?} commands\n * @param {?} queryParams\n * @param {?} fragment\n * @return {?}\n */\nfunction createUrlTree(route, urlTree, commands, queryParams, fragment) {\n    if (commands.length === 0) {\n        return tree(urlTree.root, urlTree.root, urlTree, queryParams, fragment);\n    }\n    var /** @type {?} */ nav = computeNavigation(commands);\n    if (nav.toRoot()) {\n        return tree(urlTree.root, new UrlSegmentGroup([], {}), urlTree, queryParams, fragment);\n    }\n    var /** @type {?} */ startingPosition = findStartingPosition(nav, urlTree, route);\n    var /** @type {?} */ segmentGroup = startingPosition.processChildren ?\n        updateSegmentGroupChildren(startingPosition.segmentGroup, startingPosition.index, nav.commands) :\n        updateSegmentGroup(startingPosition.segmentGroup, startingPosition.index, nav.commands);\n    return tree(startingPosition.segmentGroup, segmentGroup, urlTree, queryParams, fragment);\n}\n/**\n * @param {?} command\n * @return {?}\n */\nfunction isMatrixParams(command) {\n    return typeof command === 'object' && command != null && !command.outlets && !command.segmentPath;\n}\n/**\n * @param {?} oldSegmentGroup\n * @param {?} newSegmentGroup\n * @param {?} urlTree\n * @param {?} queryParams\n * @param {?} fragment\n * @return {?}\n */\nfunction tree(oldSegmentGroup, newSegmentGroup, urlTree, queryParams, fragment) {\n    var /** @type {?} */ qp = {};\n    if (queryParams) {\n        forEach(queryParams, function (value, name) {\n            qp[name] = Array.isArray(value) ? value.map(function (v) { return \"\" + v; }) : \"\" + value;\n        });\n    }\n    if (urlTree.root === oldSegmentGroup) {\n        return new UrlTree(newSegmentGroup, qp, fragment);\n    }\n    return new UrlTree(replaceSegment(urlTree.root, oldSegmentGroup, newSegmentGroup), qp, fragment);\n}\n/**\n * @param {?} current\n * @param {?} oldSegment\n * @param {?} newSegment\n * @return {?}\n */\nfunction replaceSegment(current, oldSegment, newSegment) {\n    var /** @type {?} */ children = {};\n    forEach(current.children, function (c, outletName) {\n        if (c === oldSegment) {\n            children[outletName] = newSegment;\n        }\n        else {\n            children[outletName] = replaceSegment(c, oldSegment, newSegment);\n        }\n    });\n    return new UrlSegmentGroup(current.segments, children);\n}\nvar Navigation = (function () {\n    /**\n     * @param {?} isAbsolute\n     * @param {?} numberOfDoubleDots\n     * @param {?} commands\n     */\n    function Navigation(isAbsolute, numberOfDoubleDots, commands) {\n        this.isAbsolute = isAbsolute;\n        this.numberOfDoubleDots = numberOfDoubleDots;\n        this.commands = commands;\n        if (isAbsolute && commands.length > 0 && isMatrixParams(commands[0])) {\n            throw new Error('Root segment cannot have matrix parameters');\n        }\n        var cmdWithOutlet = commands.find(function (c) { return typeof c === 'object' && c != null && c.outlets; });\n        if (cmdWithOutlet && cmdWithOutlet !== last$1(commands)) {\n            throw new Error('{outlets:{}} has to be the last command');\n        }\n    }\n    /**\n     * @return {?}\n     */\n    Navigation.prototype.toRoot = function () {\n        return this.isAbsolute && this.commands.length === 1 && this.commands[0] == '/';\n    };\n    return Navigation;\n}());\n/**\n * Transforms commands to a normalized `Navigation`\n * @param {?} commands\n * @return {?}\n */\nfunction computeNavigation(commands) {\n    if ((typeof commands[0] === 'string') && commands.length === 1 && commands[0] === '/') {\n        return new Navigation(true, 0, commands);\n    }\n    var /** @type {?} */ numberOfDoubleDots = 0;\n    var /** @type {?} */ isAbsolute = false;\n    var /** @type {?} */ res = commands.reduce(function (res, cmd, cmdIdx) {\n        if (typeof cmd === 'object' && cmd != null) {\n            if (cmd.outlets) {\n                var /** @type {?} */ outlets_1 = {};\n                forEach(cmd.outlets, function (commands, name) {\n                    outlets_1[name] = typeof commands === 'string' ? commands.split('/') : commands;\n                });\n                return res.concat([{ outlets: outlets_1 }]);\n            }\n            if (cmd.segmentPath) {\n                return res.concat([cmd.segmentPath]);\n            }\n        }\n        if (!(typeof cmd === 'string')) {\n            return res.concat([cmd]);\n        }\n        if (cmdIdx === 0) {\n            cmd.split('/').forEach(function (urlPart, partIndex) {\n                if (partIndex == 0 && urlPart === '.') {\n                    // skip './a'\n                }\n                else if (partIndex == 0 && urlPart === '') {\n                    isAbsolute = true;\n                }\n                else if (urlPart === '..') {\n                    numberOfDoubleDots++;\n                }\n                else if (urlPart != '') {\n                    res.push(urlPart);\n                }\n            });\n            return res;\n        }\n        return res.concat([cmd]);\n    }, []);\n    return new Navigation(isAbsolute, numberOfDoubleDots, res);\n}\nvar Position = (function () {\n    /**\n     * @param {?} segmentGroup\n     * @param {?} processChildren\n     * @param {?} index\n     */\n    function Position(segmentGroup, processChildren, index) {\n        this.segmentGroup = segmentGroup;\n        this.processChildren = processChildren;\n        this.index = index;\n    }\n    return Position;\n}());\n/**\n * @param {?} nav\n * @param {?} tree\n * @param {?} route\n * @return {?}\n */\nfunction findStartingPosition(nav, tree, route) {\n    if (nav.isAbsolute) {\n        return new Position(tree.root, true, 0);\n    }\n    if (route.snapshot._lastPathIndex === -1) {\n        return new Position(route.snapshot._urlSegment, true, 0);\n    }\n    var /** @type {?} */ modifier = isMatrixParams(nav.commands[0]) ? 0 : 1;\n    var /** @type {?} */ index = route.snapshot._lastPathIndex + modifier;\n    return createPositionApplyingDoubleDots(route.snapshot._urlSegment, index, nav.numberOfDoubleDots);\n}\n/**\n * @param {?} group\n * @param {?} index\n * @param {?} numberOfDoubleDots\n * @return {?}\n */\nfunction createPositionApplyingDoubleDots(group, index, numberOfDoubleDots) {\n    var /** @type {?} */ g = group;\n    var /** @type {?} */ ci = index;\n    var /** @type {?} */ dd = numberOfDoubleDots;\n    while (dd > ci) {\n        dd -= ci;\n        g = ((g.parent));\n        if (!g) {\n            throw new Error('Invalid number of \\'../\\'');\n        }\n        ci = g.segments.length;\n    }\n    return new Position(g, false, ci - dd);\n}\n/**\n * @param {?} command\n * @return {?}\n */\nfunction getPath(command) {\n    if (typeof command === 'object' && command != null && command.outlets) {\n        return command.outlets[PRIMARY_OUTLET];\n    }\n    return \"\" + command;\n}\n/**\n * @param {?} commands\n * @return {?}\n */\nfunction getOutlets(commands) {\n    if (!(typeof commands[0] === 'object'))\n        return _a = {}, _a[PRIMARY_OUTLET] = commands, _a;\n    if (commands[0].outlets === undefined)\n        return _b = {}, _b[PRIMARY_OUTLET] = commands, _b;\n    return commands[0].outlets;\n    var _a, _b;\n}\n/**\n * @param {?} segmentGroup\n * @param {?} startIndex\n * @param {?} commands\n * @return {?}\n */\nfunction updateSegmentGroup(segmentGroup, startIndex, commands) {\n    if (!segmentGroup) {\n        segmentGroup = new UrlSegmentGroup([], {});\n    }\n    if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n        return updateSegmentGroupChildren(segmentGroup, startIndex, commands);\n    }\n    var /** @type {?} */ m = prefixedWith(segmentGroup, startIndex, commands);\n    var /** @type {?} */ slicedCommands = commands.slice(m.commandIndex);\n    if (m.match && m.pathIndex < segmentGroup.segments.length) {\n        var /** @type {?} */ g = new UrlSegmentGroup(segmentGroup.segments.slice(0, m.pathIndex), {});\n        g.children[PRIMARY_OUTLET] =\n            new UrlSegmentGroup(segmentGroup.segments.slice(m.pathIndex), segmentGroup.children);\n        return updateSegmentGroupChildren(g, 0, slicedCommands);\n    }\n    else if (m.match && slicedCommands.length === 0) {\n        return new UrlSegmentGroup(segmentGroup.segments, {});\n    }\n    else if (m.match && !segmentGroup.hasChildren()) {\n        return createNewSegmentGroup(segmentGroup, startIndex, commands);\n    }\n    else if (m.match) {\n        return updateSegmentGroupChildren(segmentGroup, 0, slicedCommands);\n    }\n    else {\n        return createNewSegmentGroup(segmentGroup, startIndex, commands);\n    }\n}\n/**\n * @param {?} segmentGroup\n * @param {?} startIndex\n * @param {?} commands\n * @return {?}\n */\nfunction updateSegmentGroupChildren(segmentGroup, startIndex, commands) {\n    if (commands.length === 0) {\n        return new UrlSegmentGroup(segmentGroup.segments, {});\n    }\n    else {\n        var /** @type {?} */ outlets_2 = getOutlets(commands);\n        var /** @type {?} */ children_2 = {};\n        forEach(outlets_2, function (commands, outlet) {\n            if (commands !== null) {\n                children_2[outlet] = updateSegmentGroup(segmentGroup.children[outlet], startIndex, commands);\n            }\n        });\n        forEach(segmentGroup.children, function (child, childOutlet) {\n            if (outlets_2[childOutlet] === undefined) {\n                children_2[childOutlet] = child;\n            }\n        });\n        return new UrlSegmentGroup(segmentGroup.segments, children_2);\n    }\n}\n/**\n * @param {?} segmentGroup\n * @param {?} startIndex\n * @param {?} commands\n * @return {?}\n */\nfunction prefixedWith(segmentGroup, startIndex, commands) {\n    var /** @type {?} */ currentCommandIndex = 0;\n    var /** @type {?} */ currentPathIndex = startIndex;\n    var /** @type {?} */ noMatch = { match: false, pathIndex: 0, commandIndex: 0 };\n    while (currentPathIndex < segmentGroup.segments.length) {\n        if (currentCommandIndex >= commands.length)\n            return noMatch;\n        var /** @type {?} */ path = segmentGroup.segments[currentPathIndex];\n        var /** @type {?} */ curr = getPath(commands[currentCommandIndex]);\n        var /** @type {?} */ next = currentCommandIndex < commands.length - 1 ? commands[currentCommandIndex + 1] : null;\n        if (currentPathIndex > 0 && curr === undefined)\n            break;\n        if (curr && next && (typeof next === 'object') && next.outlets === undefined) {\n            if (!compare(curr, next, path))\n                return noMatch;\n            currentCommandIndex += 2;\n        }\n        else {\n            if (!compare(curr, {}, path))\n                return noMatch;\n            currentCommandIndex++;\n        }\n        currentPathIndex++;\n    }\n    return { match: true, pathIndex: currentPathIndex, commandIndex: currentCommandIndex };\n}\n/**\n * @param {?} segmentGroup\n * @param {?} startIndex\n * @param {?} commands\n * @return {?}\n */\nfunction createNewSegmentGroup(segmentGroup, startIndex, commands) {\n    var /** @type {?} */ paths = segmentGroup.segments.slice(0, startIndex);\n    var /** @type {?} */ i = 0;\n    while (i < commands.length) {\n        if (typeof commands[i] === 'object' && commands[i].outlets !== undefined) {\n            var /** @type {?} */ children = createNewSegmentChildren(commands[i].outlets);\n            return new UrlSegmentGroup(paths, children);\n        }\n        // if we start with an object literal, we need to reuse the path part from the segment\n        if (i === 0 && isMatrixParams(commands[0])) {\n            var /** @type {?} */ p = segmentGroup.segments[startIndex];\n            paths.push(new UrlSegment(p.path, commands[0]));\n            i++;\n            continue;\n        }\n        var /** @type {?} */ curr = getPath(commands[i]);\n        var /** @type {?} */ next = (i < commands.length - 1) ? commands[i + 1] : null;\n        if (curr && next && isMatrixParams(next)) {\n            paths.push(new UrlSegment(curr, stringify(next)));\n            i += 2;\n        }\n        else {\n            paths.push(new UrlSegment(curr, {}));\n            i++;\n        }\n    }\n    return new UrlSegmentGroup(paths, {});\n}\n/**\n * @param {?} outlets\n * @return {?}\n */\nfunction createNewSegmentChildren(outlets) {\n    var /** @type {?} */ children = {};\n    forEach(outlets, function (commands, outlet) {\n        if (commands !== null) {\n            children[outlet] = createNewSegmentGroup(new UrlSegmentGroup([], {}), 0, commands);\n        }\n    });\n    return children;\n}\n/**\n * @param {?} params\n * @return {?}\n */\nfunction stringify(params) {\n    var /** @type {?} */ res = {};\n    forEach(params, function (v, k) { return res[k] = \"\" + v; });\n    return res;\n}\n/**\n * @param {?} path\n * @param {?} params\n * @param {?} segment\n * @return {?}\n */\nfunction compare(path, params, segment) {\n    return path == segment.path && shallowEqual(params, segment.parameters);\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NoMatch$1 = (function () {\n    function NoMatch$1() {\n    }\n    return NoMatch$1;\n}());\n/**\n * @param {?} rootComponentType\n * @param {?} config\n * @param {?} urlTree\n * @param {?} url\n * @return {?}\n */\nfunction recognize(rootComponentType, config, urlTree, url) {\n    return new Recognizer(rootComponentType, config, urlTree, url).recognize();\n}\nvar Recognizer = (function () {\n    /**\n     * @param {?} rootComponentType\n     * @param {?} config\n     * @param {?} urlTree\n     * @param {?} url\n     */\n    function Recognizer(rootComponentType, config, urlTree, url) {\n        this.rootComponentType = rootComponentType;\n        this.config = config;\n        this.urlTree = urlTree;\n        this.url = url;\n    }\n    /**\n     * @return {?}\n     */\n    Recognizer.prototype.recognize = function () {\n        try {\n            var /** @type {?} */ rootSegmentGroup = split$1(this.urlTree.root, [], [], this.config).segmentGroup;\n            var /** @type {?} */ children = this.processSegmentGroup(this.config, rootSegmentGroup, PRIMARY_OUTLET);\n            var /** @type {?} */ root = new ActivatedRouteSnapshot([], Object.freeze({}), Object.freeze(this.urlTree.queryParams), /** @type {?} */ ((this.urlTree.fragment)), {}, PRIMARY_OUTLET, this.rootComponentType, null, this.urlTree.root, -1, {});\n            var /** @type {?} */ rootNode = new TreeNode(root, children);\n            var /** @type {?} */ routeState = new RouterStateSnapshot(this.url, rootNode);\n            this.inheritParamsAndData(routeState._root);\n            return Object(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])(routeState);\n        }\n        catch (e) {\n            return new __WEBPACK_IMPORTED_MODULE_14_rxjs_Observable__[\"Observable\"](function (obs) { return obs.error(e); });\n        }\n    };\n    /**\n     * @param {?} routeNode\n     * @return {?}\n     */\n    Recognizer.prototype.inheritParamsAndData = function (routeNode) {\n        var _this = this;\n        var /** @type {?} */ route = routeNode.value;\n        var /** @type {?} */ i = inheritedParamsDataResolve(route);\n        route.params = Object.freeze(i.params);\n        route.data = Object.freeze(i.data);\n        routeNode.children.forEach(function (n) { return _this.inheritParamsAndData(n); });\n    };\n    /**\n     * @param {?} config\n     * @param {?} segmentGroup\n     * @param {?} outlet\n     * @return {?}\n     */\n    Recognizer.prototype.processSegmentGroup = function (config, segmentGroup, outlet) {\n        if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n            return this.processChildren(config, segmentGroup);\n        }\n        return this.processSegment(config, segmentGroup, segmentGroup.segments, outlet);\n    };\n    /**\n     * @param {?} config\n     * @param {?} segmentGroup\n     * @return {?}\n     */\n    Recognizer.prototype.processChildren = function (config, segmentGroup) {\n        var _this = this;\n        var /** @type {?} */ children = mapChildrenIntoArray(segmentGroup, function (child, childOutlet) { return _this.processSegmentGroup(config, child, childOutlet); });\n        checkOutletNameUniqueness(children);\n        sortActivatedRouteSnapshots(children);\n        return children;\n    };\n    /**\n     * @param {?} config\n     * @param {?} segmentGroup\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    Recognizer.prototype.processSegment = function (config, segmentGroup, segments, outlet) {\n        for (var _i = 0, config_1 = config; _i < config_1.length; _i++) {\n            var r = config_1[_i];\n            try {\n                return this.processSegmentAgainstRoute(r, segmentGroup, segments, outlet);\n            }\n            catch (e) {\n                if (!(e instanceof NoMatch$1))\n                    throw e;\n            }\n        }\n        if (this.noLeftoversInUrl(segmentGroup, segments, outlet)) {\n            return [];\n        }\n        throw new NoMatch$1();\n    };\n    /**\n     * @param {?} segmentGroup\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    Recognizer.prototype.noLeftoversInUrl = function (segmentGroup, segments, outlet) {\n        return segments.length === 0 && !segmentGroup.children[outlet];\n    };\n    /**\n     * @param {?} route\n     * @param {?} rawSegment\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    Recognizer.prototype.processSegmentAgainstRoute = function (route, rawSegment, segments, outlet) {\n        if (route.redirectTo)\n            throw new NoMatch$1();\n        if ((route.outlet || PRIMARY_OUTLET) !== outlet)\n            throw new NoMatch$1();\n        if (route.path === '**') {\n            var /** @type {?} */ params = segments.length > 0 ? ((last$1(segments))).parameters : {};\n            var /** @type {?} */ snapshot_1 = new ActivatedRouteSnapshot(segments, params, Object.freeze(this.urlTree.queryParams), /** @type {?} */ ((this.urlTree.fragment)), getData(route), outlet, /** @type {?} */ ((route.component)), route, getSourceSegmentGroup(rawSegment), getPathIndexShift(rawSegment) + segments.length, getResolve(route));\n            return [new TreeNode(snapshot_1, [])];\n        }\n        var _a = match$1(rawSegment, route, segments), consumedSegments = _a.consumedSegments, parameters = _a.parameters, lastChild = _a.lastChild;\n        var /** @type {?} */ rawSlicedSegments = segments.slice(lastChild);\n        var /** @type {?} */ childConfig = getChildConfig(route);\n        var _b = split$1(rawSegment, consumedSegments, rawSlicedSegments, childConfig), segmentGroup = _b.segmentGroup, slicedSegments = _b.slicedSegments;\n        var /** @type {?} */ snapshot = new ActivatedRouteSnapshot(consumedSegments, parameters, Object.freeze(this.urlTree.queryParams), /** @type {?} */ ((this.urlTree.fragment)), getData(route), outlet, /** @type {?} */ ((route.component)), route, getSourceSegmentGroup(rawSegment), getPathIndexShift(rawSegment) + consumedSegments.length, getResolve(route));\n        if (slicedSegments.length === 0 && segmentGroup.hasChildren()) {\n            var /** @type {?} */ children_3 = this.processChildren(childConfig, segmentGroup);\n            return [new TreeNode(snapshot, children_3)];\n        }\n        if (childConfig.length === 0 && slicedSegments.length === 0) {\n            return [new TreeNode(snapshot, [])];\n        }\n        var /** @type {?} */ children = this.processSegment(childConfig, segmentGroup, slicedSegments, PRIMARY_OUTLET);\n        return [new TreeNode(snapshot, children)];\n    };\n    return Recognizer;\n}());\n/**\n * @param {?} nodes\n * @return {?}\n */\nfunction sortActivatedRouteSnapshots(nodes) {\n    nodes.sort(function (a, b) {\n        if (a.value.outlet === PRIMARY_OUTLET)\n            return -1;\n        if (b.value.outlet === PRIMARY_OUTLET)\n            return 1;\n        return a.value.outlet.localeCompare(b.value.outlet);\n    });\n}\n/**\n * @param {?} route\n * @return {?}\n */\nfunction getChildConfig(route) {\n    if (route.children) {\n        return route.children;\n    }\n    if (route.loadChildren) {\n        return ((route._loadedConfig)).routes;\n    }\n    return [];\n}\n/**\n * @param {?} segmentGroup\n * @param {?} route\n * @param {?} segments\n * @return {?}\n */\nfunction match$1(segmentGroup, route, segments) {\n    if (route.path === '') {\n        if (route.pathMatch === 'full' && (segmentGroup.hasChildren() || segments.length > 0)) {\n            throw new NoMatch$1();\n        }\n        return { consumedSegments: [], lastChild: 0, parameters: {} };\n    }\n    var /** @type {?} */ matcher = route.matcher || defaultUrlMatcher;\n    var /** @type {?} */ res = matcher(segments, segmentGroup, route);\n    if (!res)\n        throw new NoMatch$1();\n    var /** @type {?} */ posParams = {};\n    forEach(/** @type {?} */ ((res.posParams)), function (v, k) { posParams[k] = v.path; });\n    var /** @type {?} */ parameters = res.consumed.length > 0 ? Object.assign({}, posParams, res.consumed[res.consumed.length - 1].parameters) :\n        posParams;\n    return { consumedSegments: res.consumed, lastChild: res.consumed.length, parameters: parameters };\n}\n/**\n * @param {?} nodes\n * @return {?}\n */\nfunction checkOutletNameUniqueness(nodes) {\n    var /** @type {?} */ names = {};\n    nodes.forEach(function (n) {\n        var /** @type {?} */ routeWithSameOutletName = names[n.value.outlet];\n        if (routeWithSameOutletName) {\n            var /** @type {?} */ p = routeWithSameOutletName.url.map(function (s) { return s.toString(); }).join('/');\n            var /** @type {?} */ c = n.value.url.map(function (s) { return s.toString(); }).join('/');\n            throw new Error(\"Two segments cannot have the same outlet name: '\" + p + \"' and '\" + c + \"'.\");\n        }\n        names[n.value.outlet] = n.value;\n    });\n}\n/**\n * @param {?} segmentGroup\n * @return {?}\n */\nfunction getSourceSegmentGroup(segmentGroup) {\n    var /** @type {?} */ s = segmentGroup;\n    while (s._sourceSegment) {\n        s = s._sourceSegment;\n    }\n    return s;\n}\n/**\n * @param {?} segmentGroup\n * @return {?}\n */\nfunction getPathIndexShift(segmentGroup) {\n    var /** @type {?} */ s = segmentGroup;\n    var /** @type {?} */ res = (s._segmentIndexShift ? s._segmentIndexShift : 0);\n    while (s._sourceSegment) {\n        s = s._sourceSegment;\n        res += (s._segmentIndexShift ? s._segmentIndexShift : 0);\n    }\n    return res - 1;\n}\n/**\n * @param {?} segmentGroup\n * @param {?} consumedSegments\n * @param {?} slicedSegments\n * @param {?} config\n * @return {?}\n */\nfunction split$1(segmentGroup, consumedSegments, slicedSegments, config) {\n    if (slicedSegments.length > 0 &&\n        containsEmptyPathMatchesWithNamedOutlets(segmentGroup, slicedSegments, config)) {\n        var /** @type {?} */ s_1 = new UrlSegmentGroup(consumedSegments, createChildrenForEmptyPaths(segmentGroup, consumedSegments, config, new UrlSegmentGroup(slicedSegments, segmentGroup.children)));\n        s_1._sourceSegment = segmentGroup;\n        s_1._segmentIndexShift = consumedSegments.length;\n        return { segmentGroup: s_1, slicedSegments: [] };\n    }\n    if (slicedSegments.length === 0 &&\n        containsEmptyPathMatches(segmentGroup, slicedSegments, config)) {\n        var /** @type {?} */ s_2 = new UrlSegmentGroup(segmentGroup.segments, addEmptyPathsToChildrenIfNeeded(segmentGroup, slicedSegments, config, segmentGroup.children));\n        s_2._sourceSegment = segmentGroup;\n        s_2._segmentIndexShift = consumedSegments.length;\n        return { segmentGroup: s_2, slicedSegments: slicedSegments };\n    }\n    var /** @type {?} */ s = new UrlSegmentGroup(segmentGroup.segments, segmentGroup.children);\n    s._sourceSegment = segmentGroup;\n    s._segmentIndexShift = consumedSegments.length;\n    return { segmentGroup: s, slicedSegments: slicedSegments };\n}\n/**\n * @param {?} segmentGroup\n * @param {?} slicedSegments\n * @param {?} routes\n * @param {?} children\n * @return {?}\n */\nfunction addEmptyPathsToChildrenIfNeeded(segmentGroup, slicedSegments, routes, children) {\n    var /** @type {?} */ res = {};\n    for (var _i = 0, routes_3 = routes; _i < routes_3.length; _i++) {\n        var r = routes_3[_i];\n        if (emptyPathMatch(segmentGroup, slicedSegments, r) && !children[getOutlet$1(r)]) {\n            var /** @type {?} */ s = new UrlSegmentGroup([], {});\n            s._sourceSegment = segmentGroup;\n            s._segmentIndexShift = segmentGroup.segments.length;\n            res[getOutlet$1(r)] = s;\n        }\n    }\n    return Object.assign({}, children, res);\n}\n/**\n * @param {?} segmentGroup\n * @param {?} consumedSegments\n * @param {?} routes\n * @param {?} primarySegment\n * @return {?}\n */\nfunction createChildrenForEmptyPaths(segmentGroup, consumedSegments, routes, primarySegment) {\n    var /** @type {?} */ res = {};\n    res[PRIMARY_OUTLET] = primarySegment;\n    primarySegment._sourceSegment = segmentGroup;\n    primarySegment._segmentIndexShift = consumedSegments.length;\n    for (var _i = 0, routes_4 = routes; _i < routes_4.length; _i++) {\n        var r = routes_4[_i];\n        if (r.path === '' && getOutlet$1(r) !== PRIMARY_OUTLET) {\n            var /** @type {?} */ s = new UrlSegmentGroup([], {});\n            s._sourceSegment = segmentGroup;\n            s._segmentIndexShift = consumedSegments.length;\n            res[getOutlet$1(r)] = s;\n        }\n    }\n    return res;\n}\n/**\n * @param {?} segmentGroup\n * @param {?} slicedSegments\n * @param {?} routes\n * @return {?}\n */\nfunction containsEmptyPathMatchesWithNamedOutlets(segmentGroup, slicedSegments, routes) {\n    return routes.some(function (r) { return emptyPathMatch(segmentGroup, slicedSegments, r) && getOutlet$1(r) !== PRIMARY_OUTLET; });\n}\n/**\n * @param {?} segmentGroup\n * @param {?} slicedSegments\n * @param {?} routes\n * @return {?}\n */\nfunction containsEmptyPathMatches(segmentGroup, slicedSegments, routes) {\n    return routes.some(function (r) { return emptyPathMatch(segmentGroup, slicedSegments, r); });\n}\n/**\n * @param {?} segmentGroup\n * @param {?} slicedSegments\n * @param {?} r\n * @return {?}\n */\nfunction emptyPathMatch(segmentGroup, slicedSegments, r) {\n    if ((segmentGroup.hasChildren() || slicedSegments.length > 0) && r.pathMatch === 'full') {\n        return false;\n    }\n    return r.path === '' && r.redirectTo === undefined;\n}\n/**\n * @param {?} route\n * @return {?}\n */\nfunction getOutlet$1(route) {\n    return route.outlet || PRIMARY_OUTLET;\n}\n/**\n * @param {?} route\n * @return {?}\n */\nfunction getData(route) {\n    return route.data || {};\n}\n/**\n * @param {?} route\n * @return {?}\n */\nfunction getResolve(route) {\n    return route.resolve || {};\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Provides a way to customize when activated routes get reused.\n *\n * \\@experimental\n * @abstract\n */\nvar RouteReuseStrategy = (function () {\n    function RouteReuseStrategy() {\n    }\n    /**\n     * Determines if this route (and its subtree) should be detached to be reused later\n     * @abstract\n     * @param {?} route\n     * @return {?}\n     */\n    RouteReuseStrategy.prototype.shouldDetach = function (route) { };\n    /**\n     * Stores the detached route.\n     *\n     * Storing a `null` value should erase the previously stored value.\n     * @abstract\n     * @param {?} route\n     * @param {?} handle\n     * @return {?}\n     */\n    RouteReuseStrategy.prototype.store = function (route, handle) { };\n    /**\n     * Determines if this route (and its subtree) should be reattached\n     * @abstract\n     * @param {?} route\n     * @return {?}\n     */\n    RouteReuseStrategy.prototype.shouldAttach = function (route) { };\n    /**\n     * Retrieves the previously stored route\n     * @abstract\n     * @param {?} route\n     * @return {?}\n     */\n    RouteReuseStrategy.prototype.retrieve = function (route) { };\n    /**\n     * Determines if a route should be reused\n     * @abstract\n     * @param {?} future\n     * @param {?} curr\n     * @return {?}\n     */\n    RouteReuseStrategy.prototype.shouldReuseRoute = function (future, curr) { };\n    return RouteReuseStrategy;\n}());\n/**\n * Does not detach any subtrees. Reuses routes as long as their route config is the same.\n */\nvar DefaultRouteReuseStrategy = (function () {\n    function DefaultRouteReuseStrategy() {\n    }\n    /**\n     * @param {?} route\n     * @return {?}\n     */\n    DefaultRouteReuseStrategy.prototype.shouldDetach = function (route) { return false; };\n    /**\n     * @param {?} route\n     * @param {?} detachedTree\n     * @return {?}\n     */\n    DefaultRouteReuseStrategy.prototype.store = function (route, detachedTree) { };\n    /**\n     * @param {?} route\n     * @return {?}\n     */\n    DefaultRouteReuseStrategy.prototype.shouldAttach = function (route) { return false; };\n    /**\n     * @param {?} route\n     * @return {?}\n     */\n    DefaultRouteReuseStrategy.prototype.retrieve = function (route) { return null; };\n    /**\n     * @param {?} future\n     * @param {?} curr\n     * @return {?}\n     */\n    DefaultRouteReuseStrategy.prototype.shouldReuseRoute = function (future, curr) {\n        return future.routeConfig === curr.routeConfig;\n    };\n    return DefaultRouteReuseStrategy;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@docsNotRequired\n * \\@experimental\n */\nvar ROUTES = new __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"InjectionToken\"]('ROUTES');\nvar RouterConfigLoader = (function () {\n    /**\n     * @param {?} loader\n     * @param {?} compiler\n     * @param {?=} onLoadStartListener\n     * @param {?=} onLoadEndListener\n     */\n    function RouterConfigLoader(loader, compiler, onLoadStartListener, onLoadEndListener) {\n        this.loader = loader;\n        this.compiler = compiler;\n        this.onLoadStartListener = onLoadStartListener;\n        this.onLoadEndListener = onLoadEndListener;\n    }\n    /**\n     * @param {?} parentInjector\n     * @param {?} route\n     * @return {?}\n     */\n    RouterConfigLoader.prototype.load = function (parentInjector, route) {\n        var _this = this;\n        if (this.onLoadStartListener) {\n            this.onLoadStartListener(route);\n        }\n        var /** @type {?} */ moduleFactory$ = this.loadModuleFactory(/** @type {?} */ ((route.loadChildren)));\n        return __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(moduleFactory$, function (factory) {\n            if (_this.onLoadEndListener) {\n                _this.onLoadEndListener(route);\n            }\n            var /** @type {?} */ module = factory.create(parentInjector);\n            return new LoadedRouterConfig(flatten(module.injector.get(ROUTES)), module);\n        });\n    };\n    /**\n     * @param {?} loadChildren\n     * @return {?}\n     */\n    RouterConfigLoader.prototype.loadModuleFactory = function (loadChildren) {\n        var _this = this;\n        if (typeof loadChildren === 'string') {\n            return Object(__WEBPACK_IMPORTED_MODULE_18_rxjs_observable_fromPromise__[\"fromPromise\"])(this.loader.load(loadChildren));\n        }\n        else {\n            return __WEBPACK_IMPORTED_MODULE_12_rxjs_operator_mergeMap__[\"mergeMap\"].call(wrapIntoObservable(loadChildren()), function (t) {\n                if (t instanceof __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"NgModuleFactory\"]) {\n                    return Object(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])(t);\n                }\n                else {\n                    return Object(__WEBPACK_IMPORTED_MODULE_18_rxjs_observable_fromPromise__[\"fromPromise\"])(_this.compiler.compileModuleAsync(t));\n                }\n            });\n        }\n    };\n    return RouterConfigLoader;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Provides a way to migrate AngularJS applications to Angular.\n *\n * \\@experimental\n * @abstract\n */\nvar UrlHandlingStrategy = (function () {\n    function UrlHandlingStrategy() {\n    }\n    /**\n     * Tells the router if this URL should be processed.\n     *\n     * When it returns true, the router will execute the regular navigation.\n     * When it returns false, the router will set the router state to an empty state.\n     * As a result, all the active components will be destroyed.\n     *\n     * @abstract\n     * @param {?} url\n     * @return {?}\n     */\n    UrlHandlingStrategy.prototype.shouldProcessUrl = function (url) { };\n    /**\n     * Extracts the part of the URL that should be handled by the router.\n     * The rest of the URL will remain untouched.\n     * @abstract\n     * @param {?} url\n     * @return {?}\n     */\n    UrlHandlingStrategy.prototype.extract = function (url) { };\n    /**\n     * Merges the URL fragment with the rest of the URL.\n     * @abstract\n     * @param {?} newUrlPart\n     * @param {?} rawUrl\n     * @return {?}\n     */\n    UrlHandlingStrategy.prototype.merge = function (newUrlPart, rawUrl) { };\n    return UrlHandlingStrategy;\n}());\n/**\n * \\@experimental\n */\nvar DefaultUrlHandlingStrategy = (function () {\n    function DefaultUrlHandlingStrategy() {\n    }\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    DefaultUrlHandlingStrategy.prototype.shouldProcessUrl = function (url) { return true; };\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    DefaultUrlHandlingStrategy.prototype.extract = function (url) { return url; };\n    /**\n     * @param {?} newUrlPart\n     * @param {?} wholeUrl\n     * @return {?}\n     */\n    DefaultUrlHandlingStrategy.prototype.merge = function (newUrlPart, wholeUrl) { return newUrlPart; };\n    return DefaultUrlHandlingStrategy;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} error\n * @return {?}\n */\nfunction defaultErrorHandler(error) {\n    throw error;\n}\n/**\n * \\@internal\n * @param {?} snapshot\n * @return {?}\n */\nfunction defaultRouterHook(snapshot) {\n    return (Object(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])(null));\n}\n/**\n * \\@whatItDoes Provides the navigation and url manipulation capabilities.\n *\n * See {\\@link Routes} for more details and examples.\n *\n * \\@ngModule RouterModule\n *\n * \\@stable\n */\nvar Router = (function () {\n    /**\n     * @param {?} rootComponentType\n     * @param {?} urlSerializer\n     * @param {?} rootContexts\n     * @param {?} location\n     * @param {?} injector\n     * @param {?} loader\n     * @param {?} compiler\n     * @param {?} config\n     */\n    function Router(rootComponentType, urlSerializer, rootContexts, location, injector, loader, compiler, config) {\n        var _this = this;\n        this.rootComponentType = rootComponentType;\n        this.urlSerializer = urlSerializer;\n        this.rootContexts = rootContexts;\n        this.location = location;\n        this.config = config;\n        this.navigations = new __WEBPACK_IMPORTED_MODULE_3_rxjs_BehaviorSubject__[\"BehaviorSubject\"](/** @type {?} */ ((null)));\n        this.routerEvents = new __WEBPACK_IMPORTED_MODULE_4_rxjs_Subject__[\"Subject\"]();\n        this.navigationId = 0;\n        /**\n         * Error handler that is invoked when a navigation errors.\n         *\n         * See {\\@link ErrorHandler} for more information.\n         */\n        this.errorHandler = defaultErrorHandler;\n        /**\n         * Indicates if at least one navigation happened.\n         */\n        this.navigated = false;\n        /**\n         * Used by RouterModule. This allows us to\n         * pause the navigation either before preactivation or after it.\n         * \\@internal\n         */\n        this.hooks = {\n            beforePreactivation: defaultRouterHook,\n            afterPreactivation: defaultRouterHook\n        };\n        /**\n         * Extracts and merges URLs. Used for AngularJS to Angular migrations.\n         */\n        this.urlHandlingStrategy = new DefaultUrlHandlingStrategy();\n        this.routeReuseStrategy = new DefaultRouteReuseStrategy();\n        var onLoadStart = function (r) { return _this.triggerEvent(new RouteConfigLoadStart(r)); };\n        var onLoadEnd = function (r) { return _this.triggerEvent(new RouteConfigLoadEnd(r)); };\n        this.ngModule = injector.get(__WEBPACK_IMPORTED_MODULE_2__angular_core__[\"NgModuleRef\"]);\n        this.resetConfig(config);\n        this.currentUrlTree = createEmptyUrlTree();\n        this.rawUrlTree = this.currentUrlTree;\n        this.configLoader = new RouterConfigLoader(loader, compiler, onLoadStart, onLoadEnd);\n        this.currentRouterState = createEmptyState(this.currentUrlTree, this.rootComponentType);\n        this.processNavigations();\n    }\n    /**\n     * \\@internal\n     * TODO: this should be removed once the constructor of the router made internal\n     * @param {?} rootComponentType\n     * @return {?}\n     */\n    Router.prototype.resetRootComponentType = function (rootComponentType) {\n        this.rootComponentType = rootComponentType;\n        // TODO: vsavkin router 4.0 should make the root component set to null\n        // this will simplify the lifecycle of the router.\n        this.currentRouterState.root.component = this.rootComponentType;\n    };\n    /**\n     * Sets up the location change listener and performs the initial navigation.\n     * @return {?}\n     */\n    Router.prototype.initialNavigation = function () {\n        this.setUpLocationChangeListener();\n        if (this.navigationId === 0) {\n            this.navigateByUrl(this.location.path(true), { replaceUrl: true });\n        }\n    };\n    /**\n     * Sets up the location change listener.\n     * @return {?}\n     */\n    Router.prototype.setUpLocationChangeListener = function () {\n        var _this = this;\n        // Zone.current.wrap is needed because of the issue with RxJS scheduler,\n        // which does not work properly with zone.js in IE and Safari\n        if (!this.locationSubscription) {\n            this.locationSubscription = (this.location.subscribe(Zone.current.wrap(function (change) {\n                var /** @type {?} */ rawUrlTree = _this.urlSerializer.parse(change['url']);\n                var /** @type {?} */ source = change['type'] === 'popstate' ? 'popstate' : 'hashchange';\n                setTimeout(function () { _this.scheduleNavigation(rawUrlTree, source, { replaceUrl: true }); }, 0);\n            })));\n        }\n    };\n    Object.defineProperty(Router.prototype, \"routerState\", {\n        /**\n         * The current route state\n         * @return {?}\n         */\n        get: function () { return this.currentRouterState; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Router.prototype, \"url\", {\n        /**\n         * The current url\n         * @return {?}\n         */\n        get: function () { return this.serializeUrl(this.currentUrlTree); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Router.prototype, \"events\", {\n        /**\n         * An observable of router events\n         * @return {?}\n         */\n        get: function () { return this.routerEvents; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * \\@internal\n     * @param {?} e\n     * @return {?}\n     */\n    Router.prototype.triggerEvent = function (e) { this.routerEvents.next(e); };\n    /**\n     * Resets the configuration used for navigation and generating links.\n     *\n     * ### Usage\n     *\n     * ```\n     * router.resetConfig([\n     *  { path: 'team/:id', component: TeamCmp, children: [\n     *    { path: 'simple', component: SimpleCmp },\n     *    { path: 'user/:name', component: UserCmp }\n     *  ]}\n     * ]);\n     * ```\n     * @param {?} config\n     * @return {?}\n     */\n    Router.prototype.resetConfig = function (config) {\n        validateConfig(config);\n        this.config = config;\n        this.navigated = false;\n    };\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    Router.prototype.ngOnDestroy = function () { this.dispose(); };\n    /**\n     * Disposes of the router\n     * @return {?}\n     */\n    Router.prototype.dispose = function () {\n        if (this.locationSubscription) {\n            this.locationSubscription.unsubscribe();\n            this.locationSubscription = ((null));\n        }\n    };\n    /**\n     * Applies an array of commands to the current url tree and creates a new url tree.\n     *\n     * When given an activate route, applies the given commands starting from the route.\n     * When not given a route, applies the given command starting from the root.\n     *\n     * ### Usage\n     *\n     * ```\n     * // create /team/33/user/11\n     * router.createUrlTree(['/team', 33, 'user', 11]);\n     *\n     * // create /team/33;expand=true/user/11\n     * router.createUrlTree(['/team', 33, {expand: true}, 'user', 11]);\n     *\n     * // you can collapse static segments like this (this works only with the first passed-in value):\n     * router.createUrlTree(['/team/33/user', userId]);\n     *\n     * // If the first segment can contain slashes, and you do not want the router to split it, you\n     * // can do the following:\n     *\n     * router.createUrlTree([{segmentPath: '/one/two'}]);\n     *\n     * // create /team/33/(user/11//right:chat)\n     * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: 'chat'}}]);\n     *\n     * // remove the right secondary node\n     * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: null}}]);\n     *\n     * // assuming the current url is `/team/33/user/11` and the route points to `user/11`\n     *\n     * // navigate to /team/33/user/11/details\n     * router.createUrlTree(['details'], {relativeTo: route});\n     *\n     * // navigate to /team/33/user/22\n     * router.createUrlTree(['../22'], {relativeTo: route});\n     *\n     * // navigate to /team/44/user/22\n     * router.createUrlTree(['../../team/44/user/22'], {relativeTo: route});\n     * ```\n     * @param {?} commands\n     * @param {?=} navigationExtras\n     * @return {?}\n     */\n    Router.prototype.createUrlTree = function (commands, navigationExtras) {\n        if (navigationExtras === void 0) { navigationExtras = {}; }\n        var relativeTo = navigationExtras.relativeTo, queryParams = navigationExtras.queryParams, fragment = navigationExtras.fragment, preserveQueryParams = navigationExtras.preserveQueryParams, queryParamsHandling = navigationExtras.queryParamsHandling, preserveFragment = navigationExtras.preserveFragment;\n        if (Object(__WEBPACK_IMPORTED_MODULE_2__angular_core__[\"isDevMode\"])() && preserveQueryParams && (console) && (console.warn)) {\n            console.warn('preserveQueryParams is deprecated, use queryParamsHandling instead.');\n        }\n        var /** @type {?} */ a = relativeTo || this.routerState.root;\n        var /** @type {?} */ f = preserveFragment ? this.currentUrlTree.fragment : fragment;\n        var /** @type {?} */ q = null;\n        if (queryParamsHandling) {\n            switch (queryParamsHandling) {\n                case 'merge':\n                    q = Object.assign({}, this.currentUrlTree.queryParams, queryParams);\n                    break;\n                case 'preserve':\n                    q = this.currentUrlTree.queryParams;\n                    break;\n                default:\n                    q = queryParams || null;\n            }\n        }\n        else {\n            q = preserveQueryParams ? this.currentUrlTree.queryParams : queryParams || null;\n        }\n        return createUrlTree(a, this.currentUrlTree, commands, /** @type {?} */ ((q)), /** @type {?} */ ((f)));\n    };\n    /**\n     * Navigate based on the provided url. This navigation is always absolute.\n     *\n     * Returns a promise that:\n     * - resolves to 'true' when navigation succeeds,\n     * - resolves to 'false' when navigation fails,\n     * - is rejected when an error happens.\n     *\n     * ### Usage\n     *\n     * ```\n     * router.navigateByUrl(\"/team/33/user/11\");\n     *\n     * // Navigate without updating the URL\n     * router.navigateByUrl(\"/team/33/user/11\", { skipLocationChange: true });\n     * ```\n     *\n     * In opposite to `navigate`, `navigateByUrl` takes a whole URL\n     * and does not apply any delta to the current one.\n     * @param {?} url\n     * @param {?=} extras\n     * @return {?}\n     */\n    Router.prototype.navigateByUrl = function (url, extras) {\n        if (extras === void 0) { extras = { skipLocationChange: false }; }\n        var /** @type {?} */ urlTree = url instanceof UrlTree ? url : this.parseUrl(url);\n        var /** @type {?} */ mergedTree = this.urlHandlingStrategy.merge(urlTree, this.rawUrlTree);\n        return this.scheduleNavigation(mergedTree, 'imperative', extras);\n    };\n    /**\n     * Navigate based on the provided array of commands and a starting point.\n     * If no starting route is provided, the navigation is absolute.\n     *\n     * Returns a promise that:\n     * - resolves to 'true' when navigation succeeds,\n     * - resolves to 'false' when navigation fails,\n     * - is rejected when an error happens.\n     *\n     * ### Usage\n     *\n     * ```\n     * router.navigate(['team', 33, 'user', 11], {relativeTo: route});\n     *\n     * // Navigate without updating the URL\n     * router.navigate(['team', 33, 'user', 11], {relativeTo: route, skipLocationChange: true});\n     * ```\n     *\n     * In opposite to `navigateByUrl`, `navigate` always takes a delta that is applied to the current\n     * URL.\n     * @param {?} commands\n     * @param {?=} extras\n     * @return {?}\n     */\n    Router.prototype.navigate = function (commands, extras) {\n        if (extras === void 0) { extras = { skipLocationChange: false }; }\n        validateCommands(commands);\n        if (typeof extras.queryParams === 'object' && extras.queryParams !== null) {\n            extras.queryParams = this.removeEmptyProps(extras.queryParams);\n        }\n        return this.navigateByUrl(this.createUrlTree(commands, extras), extras);\n    };\n    /**\n     * Serializes a {\\@link UrlTree} into a string\n     * @param {?} url\n     * @return {?}\n     */\n    Router.prototype.serializeUrl = function (url) { return this.urlSerializer.serialize(url); };\n    /**\n     * Parses a string into a {\\@link UrlTree}\n     * @param {?} url\n     * @return {?}\n     */\n    Router.prototype.parseUrl = function (url) { return this.urlSerializer.parse(url); };\n    /**\n     * Returns whether the url is activated\n     * @param {?} url\n     * @param {?} exact\n     * @return {?}\n     */\n    Router.prototype.isActive = function (url, exact) {\n        if (url instanceof UrlTree) {\n            return containsTree(this.currentUrlTree, url, exact);\n        }\n        var /** @type {?} */ urlTree = this.urlSerializer.parse(url);\n        return containsTree(this.currentUrlTree, urlTree, exact);\n    };\n    /**\n     * @param {?} params\n     * @return {?}\n     */\n    Router.prototype.removeEmptyProps = function (params) {\n        return Object.keys(params).reduce(function (result, key) {\n            var /** @type {?} */ value = params[key];\n            if (value !== null && value !== undefined) {\n                result[key] = value;\n            }\n            return result;\n        }, {});\n    };\n    /**\n     * @return {?}\n     */\n    Router.prototype.processNavigations = function () {\n        var _this = this;\n        __WEBPACK_IMPORTED_MODULE_7_rxjs_operator_concatMap__[\"concatMap\"]\n            .call(this.navigations, function (nav) {\n            if (nav) {\n                _this.executeScheduledNavigation(nav);\n                // a failed navigation should not stop the router from processing\n                // further navigations => the catch\n                return nav.promise.catch(function () { });\n            }\n            else {\n                return (Object(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])(null));\n            }\n        })\n            .subscribe(function () { });\n    };\n    /**\n     * @param {?} rawUrl\n     * @param {?} source\n     * @param {?} extras\n     * @return {?}\n     */\n    Router.prototype.scheduleNavigation = function (rawUrl, source, extras) {\n        var /** @type {?} */ lastNavigation = this.navigations.value;\n        // If the user triggers a navigation imperatively (e.g., by using navigateByUrl),\n        // and that navigation results in 'replaceState' that leads to the same URL,\n        // we should skip those.\n        if (lastNavigation && source !== 'imperative' && lastNavigation.source === 'imperative' &&\n            lastNavigation.rawUrl.toString() === rawUrl.toString()) {\n            return Promise.resolve(true); // return value is not used\n        }\n        // Because of a bug in IE and Edge, the location class fires two events (popstate and\n        // hashchange) every single time. The second one should be ignored. Otherwise, the URL will\n        // flicker.\n        if (lastNavigation && source == 'hashchange' && lastNavigation.source === 'popstate' &&\n            lastNavigation.rawUrl.toString() === rawUrl.toString()) {\n            return Promise.resolve(true); // return value is not used\n        }\n        var /** @type {?} */ resolve = null;\n        var /** @type {?} */ reject = null;\n        var /** @type {?} */ promise = new Promise(function (res, rej) {\n            resolve = res;\n            reject = rej;\n        });\n        var /** @type {?} */ id = ++this.navigationId;\n        this.navigations.next({ id: id, source: source, rawUrl: rawUrl, extras: extras, resolve: resolve, reject: reject, promise: promise });\n        // Make sure that the error is propagated even though `processNavigations` catch\n        // handler does not rethrow\n        return promise.catch(function (e) { return Promise.reject(e); });\n    };\n    /**\n     * @param {?} __0\n     * @return {?}\n     */\n    Router.prototype.executeScheduledNavigation = function (_a) {\n        var _this = this;\n        var id = _a.id, rawUrl = _a.rawUrl, extras = _a.extras, resolve = _a.resolve, reject = _a.reject;\n        var /** @type {?} */ url = this.urlHandlingStrategy.extract(rawUrl);\n        var /** @type {?} */ urlTransition = !this.navigated || url.toString() !== this.currentUrlTree.toString();\n        if (urlTransition && this.urlHandlingStrategy.shouldProcessUrl(rawUrl)) {\n            this.routerEvents.next(new NavigationStart(id, this.serializeUrl(url)));\n            Promise.resolve()\n                .then(function (_) { return _this.runNavigate(url, rawUrl, !!extras.skipLocationChange, !!extras.replaceUrl, id, null); })\n                .then(resolve, reject);\n            // we cannot process the current URL, but we could process the previous one =>\n            // we need to do some cleanup\n        }\n        else if (urlTransition && this.rawUrlTree &&\n            this.urlHandlingStrategy.shouldProcessUrl(this.rawUrlTree)) {\n            this.routerEvents.next(new NavigationStart(id, this.serializeUrl(url)));\n            Promise.resolve()\n                .then(function (_) { return _this.runNavigate(url, rawUrl, false, false, id, createEmptyState(url, _this.rootComponentType).snapshot); })\n                .then(resolve, reject);\n        }\n        else {\n            this.rawUrlTree = rawUrl;\n            resolve(null);\n        }\n    };\n    /**\n     * @param {?} url\n     * @param {?} rawUrl\n     * @param {?} shouldPreventPushState\n     * @param {?} shouldReplaceUrl\n     * @param {?} id\n     * @param {?} precreatedState\n     * @return {?}\n     */\n    Router.prototype.runNavigate = function (url, rawUrl, shouldPreventPushState, shouldReplaceUrl, id, precreatedState) {\n        var _this = this;\n        if (id !== this.navigationId) {\n            this.location.go(this.urlSerializer.serialize(this.currentUrlTree));\n            this.routerEvents.next(new NavigationCancel(id, this.serializeUrl(url), \"Navigation ID \" + id + \" is not equal to the current navigation id \" + this.navigationId));\n            return Promise.resolve(false);\n        }\n        return new Promise(function (resolvePromise, rejectPromise) {\n            // create an observable of the url and route state snapshot\n            // this operation do not result in any side effects\n            var /** @type {?} */ urlAndSnapshot$;\n            if (!precreatedState) {\n                var /** @type {?} */ moduleInjector = _this.ngModule.injector;\n                var /** @type {?} */ redirectsApplied$ = applyRedirects(moduleInjector, _this.configLoader, _this.urlSerializer, url, _this.config);\n                urlAndSnapshot$ = __WEBPACK_IMPORTED_MODULE_12_rxjs_operator_mergeMap__[\"mergeMap\"].call(redirectsApplied$, function (appliedUrl) {\n                    return __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(recognize(_this.rootComponentType, _this.config, appliedUrl, _this.serializeUrl(appliedUrl)), function (snapshot) {\n                        _this.routerEvents.next(new RoutesRecognized(id, _this.serializeUrl(url), _this.serializeUrl(appliedUrl), snapshot));\n                        return { appliedUrl: appliedUrl, snapshot: snapshot };\n                    });\n                });\n            }\n            else {\n                urlAndSnapshot$ = Object(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])({ appliedUrl: url, snapshot: precreatedState });\n            }\n            var /** @type {?} */ beforePreactivationDone$ = __WEBPACK_IMPORTED_MODULE_12_rxjs_operator_mergeMap__[\"mergeMap\"].call(urlAndSnapshot$, function (p) {\n                return __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(_this.hooks.beforePreactivation(p.snapshot), function () { return p; });\n            });\n            // run preactivation: guards and data resolvers\n            var /** @type {?} */ preActivation;\n            var /** @type {?} */ preactivationTraverse$ = __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(beforePreactivationDone$, function (_a) {\n                var appliedUrl = _a.appliedUrl, snapshot = _a.snapshot;\n                var /** @type {?} */ moduleInjector = _this.ngModule.injector;\n                preActivation =\n                    new PreActivation(snapshot, _this.currentRouterState.snapshot, moduleInjector);\n                preActivation.traverse(_this.rootContexts);\n                return { appliedUrl: appliedUrl, snapshot: snapshot };\n            });\n            var /** @type {?} */ preactivationCheckGuards$ = __WEBPACK_IMPORTED_MODULE_12_rxjs_operator_mergeMap__[\"mergeMap\"].call(preactivationTraverse$, function (_a) {\n                var appliedUrl = _a.appliedUrl, snapshot = _a.snapshot;\n                if (_this.navigationId !== id)\n                    return Object(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])(false);\n                _this.triggerEvent(new GuardsCheckStart(id, _this.serializeUrl(url), appliedUrl, snapshot));\n                return __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(preActivation.checkGuards(), function (shouldActivate) {\n                    _this.triggerEvent(new GuardsCheckEnd(id, _this.serializeUrl(url), appliedUrl, snapshot, shouldActivate));\n                    return { appliedUrl: appliedUrl, snapshot: snapshot, shouldActivate: shouldActivate };\n                });\n            });\n            var /** @type {?} */ preactivationResolveData$ = __WEBPACK_IMPORTED_MODULE_12_rxjs_operator_mergeMap__[\"mergeMap\"].call(preactivationCheckGuards$, function (p) {\n                if (_this.navigationId !== id)\n                    return Object(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])(false);\n                if (p.shouldActivate && preActivation.isActivating()) {\n                    _this.triggerEvent(new ResolveStart(id, _this.serializeUrl(url), p.appliedUrl, p.snapshot));\n                    return __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(preActivation.resolveData(), function () {\n                        _this.triggerEvent(new ResolveEnd(id, _this.serializeUrl(url), p.appliedUrl, p.snapshot));\n                        return p;\n                    });\n                }\n                else {\n                    return Object(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])(p);\n                }\n            });\n            var /** @type {?} */ preactivationDone$ = __WEBPACK_IMPORTED_MODULE_12_rxjs_operator_mergeMap__[\"mergeMap\"].call(preactivationResolveData$, function (p) {\n                return __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(_this.hooks.afterPreactivation(p.snapshot), function () { return p; });\n            });\n            // create router state\n            // this operation has side effects => route state is being affected\n            var /** @type {?} */ routerState$ = __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(preactivationDone$, function (_a) {\n                var appliedUrl = _a.appliedUrl, snapshot = _a.snapshot, shouldActivate = _a.shouldActivate;\n                if (shouldActivate) {\n                    var /** @type {?} */ state = createRouterState(_this.routeReuseStrategy, snapshot, _this.currentRouterState);\n                    return { appliedUrl: appliedUrl, state: state, shouldActivate: shouldActivate };\n                }\n                else {\n                    return { appliedUrl: appliedUrl, state: null, shouldActivate: shouldActivate };\n                }\n            });\n            // applied the new router state\n            // this operation has side effects\n            var /** @type {?} */ navigationIsSuccessful;\n            var /** @type {?} */ storedState = _this.currentRouterState;\n            var /** @type {?} */ storedUrl = _this.currentUrlTree;\n            routerState$\n                .forEach(function (_a) {\n                var appliedUrl = _a.appliedUrl, state = _a.state, shouldActivate = _a.shouldActivate;\n                if (!shouldActivate || id !== _this.navigationId) {\n                    navigationIsSuccessful = false;\n                    return;\n                }\n                _this.currentUrlTree = appliedUrl;\n                _this.rawUrlTree = _this.urlHandlingStrategy.merge(_this.currentUrlTree, rawUrl);\n                _this.currentRouterState = state;\n                if (!shouldPreventPushState) {\n                    var /** @type {?} */ path = _this.urlSerializer.serialize(_this.rawUrlTree);\n                    if (_this.location.isCurrentPathEqualTo(path) || shouldReplaceUrl) {\n                        _this.location.replaceState(path);\n                    }\n                    else {\n                        _this.location.go(path);\n                    }\n                }\n                new ActivateRoutes(_this.routeReuseStrategy, state, storedState)\n                    .activate(_this.rootContexts);\n                navigationIsSuccessful = true;\n            })\n                .then(function () {\n                if (navigationIsSuccessful) {\n                    _this.navigated = true;\n                    _this.routerEvents.next(new NavigationEnd(id, _this.serializeUrl(url), _this.serializeUrl(_this.currentUrlTree)));\n                    resolvePromise(true);\n                }\n                else {\n                    _this.resetUrlToCurrentUrlTree();\n                    _this.routerEvents.next(new NavigationCancel(id, _this.serializeUrl(url), ''));\n                    resolvePromise(false);\n                }\n            }, function (e) {\n                if (isNavigationCancelingError(e)) {\n                    _this.resetUrlToCurrentUrlTree();\n                    _this.navigated = true;\n                    _this.routerEvents.next(new NavigationCancel(id, _this.serializeUrl(url), e.message));\n                    resolvePromise(false);\n                }\n                else {\n                    _this.routerEvents.next(new NavigationError(id, _this.serializeUrl(url), e));\n                    try {\n                        resolvePromise(_this.errorHandler(e));\n                    }\n                    catch (ee) {\n                        rejectPromise(ee);\n                    }\n                }\n                _this.currentRouterState = storedState;\n                _this.currentUrlTree = storedUrl;\n                _this.rawUrlTree = _this.urlHandlingStrategy.merge(_this.currentUrlTree, rawUrl);\n                _this.location.replaceState(_this.serializeUrl(_this.rawUrlTree));\n            });\n        });\n    };\n    /**\n     * @return {?}\n     */\n    Router.prototype.resetUrlToCurrentUrlTree = function () {\n        var /** @type {?} */ path = this.urlSerializer.serialize(this.rawUrlTree);\n        this.location.replaceState(path);\n    };\n    return Router;\n}());\nvar CanActivate = (function () {\n    /**\n     * @param {?} path\n     */\n    function CanActivate(path) {\n        this.path = path;\n    }\n    Object.defineProperty(CanActivate.prototype, \"route\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.path[this.path.length - 1]; },\n        enumerable: true,\n        configurable: true\n    });\n    return CanActivate;\n}());\nvar CanDeactivate = (function () {\n    /**\n     * @param {?} component\n     * @param {?} route\n     */\n    function CanDeactivate(component, route) {\n        this.component = component;\n        this.route = route;\n    }\n    return CanDeactivate;\n}());\nvar PreActivation = (function () {\n    /**\n     * @param {?} future\n     * @param {?} curr\n     * @param {?} moduleInjector\n     */\n    function PreActivation(future, curr, moduleInjector) {\n        this.future = future;\n        this.curr = curr;\n        this.moduleInjector = moduleInjector;\n        this.canActivateChecks = [];\n        this.canDeactivateChecks = [];\n    }\n    /**\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    PreActivation.prototype.traverse = function (parentContexts) {\n        var /** @type {?} */ futureRoot = this.future._root;\n        var /** @type {?} */ currRoot = this.curr ? this.curr._root : null;\n        this.traverseChildRoutes(futureRoot, currRoot, parentContexts, [futureRoot.value]);\n    };\n    /**\n     * @return {?}\n     */\n    PreActivation.prototype.checkGuards = function () {\n        var _this = this;\n        if (!this.isDeactivating() && !this.isActivating()) {\n            return Object(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])(true);\n        }\n        var /** @type {?} */ canDeactivate$ = this.runCanDeactivateChecks();\n        return __WEBPACK_IMPORTED_MODULE_12_rxjs_operator_mergeMap__[\"mergeMap\"].call(canDeactivate$, function (canDeactivate) { return canDeactivate ? _this.runCanActivateChecks() : Object(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])(false); });\n    };\n    /**\n     * @return {?}\n     */\n    PreActivation.prototype.resolveData = function () {\n        var _this = this;\n        if (!this.isActivating())\n            return Object(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])(null);\n        var /** @type {?} */ checks$ = Object(__WEBPACK_IMPORTED_MODULE_5_rxjs_observable_from__[\"from\"])(this.canActivateChecks);\n        var /** @type {?} */ runningChecks$ = __WEBPACK_IMPORTED_MODULE_7_rxjs_operator_concatMap__[\"concatMap\"].call(checks$, function (check) { return _this.runResolve(check.route); });\n        return __WEBPACK_IMPORTED_MODULE_13_rxjs_operator_reduce__[\"reduce\"].call(runningChecks$, function (_, __) { return _; });\n    };\n    /**\n     * @return {?}\n     */\n    PreActivation.prototype.isDeactivating = function () { return this.canDeactivateChecks.length !== 0; };\n    /**\n     * @return {?}\n     */\n    PreActivation.prototype.isActivating = function () { return this.canActivateChecks.length !== 0; };\n    /**\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} contexts\n     * @param {?} futurePath\n     * @return {?}\n     */\n    PreActivation.prototype.traverseChildRoutes = function (futureNode, currNode, contexts, futurePath) {\n        var _this = this;\n        var /** @type {?} */ prevChildren = nodeChildrenAsMap(currNode);\n        // Process the children of the future route\n        futureNode.children.forEach(function (c) {\n            _this.traverseRoutes(c, prevChildren[c.value.outlet], contexts, futurePath.concat([c.value]));\n            delete prevChildren[c.value.outlet];\n        });\n        // Process any children left from the current route (not active for the future route)\n        forEach(prevChildren, function (v, k) { return _this.deactivateRouteAndItsChildren(v, /** @type {?} */ ((contexts)).getContext(k)); });\n    };\n    /**\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} parentContexts\n     * @param {?} futurePath\n     * @return {?}\n     */\n    PreActivation.prototype.traverseRoutes = function (futureNode, currNode, parentContexts, futurePath) {\n        var /** @type {?} */ future = futureNode.value;\n        var /** @type {?} */ curr = currNode ? currNode.value : null;\n        var /** @type {?} */ context = parentContexts ? parentContexts.getContext(futureNode.value.outlet) : null;\n        // reusing the node\n        if (curr && future._routeConfig === curr._routeConfig) {\n            var /** @type {?} */ shouldRunGuardsAndResolvers = this.shouldRunGuardsAndResolvers(curr, future, /** @type {?} */ ((future._routeConfig)).runGuardsAndResolvers);\n            if (shouldRunGuardsAndResolvers) {\n                this.canActivateChecks.push(new CanActivate(futurePath));\n            }\n            else {\n                // we need to set the data\n                future.data = curr.data;\n                future._resolvedData = curr._resolvedData;\n            }\n            // If we have a component, we need to go through an outlet.\n            if (future.component) {\n                this.traverseChildRoutes(futureNode, currNode, context ? context.children : null, futurePath);\n                // if we have a componentless route, we recurse but keep the same outlet map.\n            }\n            else {\n                this.traverseChildRoutes(futureNode, currNode, parentContexts, futurePath);\n            }\n            if (shouldRunGuardsAndResolvers) {\n                var /** @type {?} */ outlet = ((((context)).outlet));\n                this.canDeactivateChecks.push(new CanDeactivate(outlet.component, curr));\n            }\n        }\n        else {\n            if (curr) {\n                this.deactivateRouteAndItsChildren(currNode, context);\n            }\n            this.canActivateChecks.push(new CanActivate(futurePath));\n            // If we have a component, we need to go through an outlet.\n            if (future.component) {\n                this.traverseChildRoutes(futureNode, null, context ? context.children : null, futurePath);\n                // if we have a componentless route, we recurse but keep the same outlet map.\n            }\n            else {\n                this.traverseChildRoutes(futureNode, null, parentContexts, futurePath);\n            }\n        }\n    };\n    /**\n     * @param {?} curr\n     * @param {?} future\n     * @param {?} mode\n     * @return {?}\n     */\n    PreActivation.prototype.shouldRunGuardsAndResolvers = function (curr, future, mode) {\n        switch (mode) {\n            case 'always':\n                return true;\n            case 'paramsOrQueryParamsChange':\n                return !equalParamsAndUrlSegments(curr, future) ||\n                    !shallowEqual(curr.queryParams, future.queryParams);\n            case 'paramsChange':\n            default:\n                return !equalParamsAndUrlSegments(curr, future);\n        }\n    };\n    /**\n     * @param {?} route\n     * @param {?} context\n     * @return {?}\n     */\n    PreActivation.prototype.deactivateRouteAndItsChildren = function (route, context) {\n        var _this = this;\n        var /** @type {?} */ children = nodeChildrenAsMap(route);\n        var /** @type {?} */ r = route.value;\n        forEach(children, function (node, childName) {\n            if (!r.component) {\n                _this.deactivateRouteAndItsChildren(node, context);\n            }\n            else if (context) {\n                _this.deactivateRouteAndItsChildren(node, context.children.getContext(childName));\n            }\n            else {\n                _this.deactivateRouteAndItsChildren(node, null);\n            }\n        });\n        if (!r.component) {\n            this.canDeactivateChecks.push(new CanDeactivate(null, r));\n        }\n        else if (context && context.outlet && context.outlet.isActivated) {\n            this.canDeactivateChecks.push(new CanDeactivate(context.outlet.component, r));\n        }\n        else {\n            this.canDeactivateChecks.push(new CanDeactivate(null, r));\n        }\n    };\n    /**\n     * @return {?}\n     */\n    PreActivation.prototype.runCanDeactivateChecks = function () {\n        var _this = this;\n        var /** @type {?} */ checks$ = Object(__WEBPACK_IMPORTED_MODULE_5_rxjs_observable_from__[\"from\"])(this.canDeactivateChecks);\n        var /** @type {?} */ runningChecks$ = __WEBPACK_IMPORTED_MODULE_12_rxjs_operator_mergeMap__[\"mergeMap\"].call(checks$, function (check) { return _this.runCanDeactivate(check.component, check.route); });\n        return __WEBPACK_IMPORTED_MODULE_8_rxjs_operator_every__[\"every\"].call(runningChecks$, function (result) { return result === true; });\n    };\n    /**\n     * @return {?}\n     */\n    PreActivation.prototype.runCanActivateChecks = function () {\n        var _this = this;\n        var /** @type {?} */ checks$ = Object(__WEBPACK_IMPORTED_MODULE_5_rxjs_observable_from__[\"from\"])(this.canActivateChecks);\n        var /** @type {?} */ runningChecks$ = __WEBPACK_IMPORTED_MODULE_7_rxjs_operator_concatMap__[\"concatMap\"].call(checks$, function (check) { return andObservables(Object(__WEBPACK_IMPORTED_MODULE_5_rxjs_observable_from__[\"from\"])([_this.runCanActivateChild(check.path), _this.runCanActivate(check.route)])); });\n        return __WEBPACK_IMPORTED_MODULE_8_rxjs_operator_every__[\"every\"].call(runningChecks$, function (result) { return result === true; });\n    };\n    /**\n     * @param {?} future\n     * @return {?}\n     */\n    PreActivation.prototype.runCanActivate = function (future) {\n        var _this = this;\n        var /** @type {?} */ canActivate = future._routeConfig ? future._routeConfig.canActivate : null;\n        if (!canActivate || canActivate.length === 0)\n            return Object(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])(true);\n        var /** @type {?} */ obs = __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(Object(__WEBPACK_IMPORTED_MODULE_5_rxjs_observable_from__[\"from\"])(canActivate), function (c) {\n            var /** @type {?} */ guard = _this.getToken(c, future);\n            var /** @type {?} */ observable;\n            if (guard.canActivate) {\n                observable = wrapIntoObservable(guard.canActivate(future, _this.future));\n            }\n            else {\n                observable = wrapIntoObservable(guard(future, _this.future));\n            }\n            return __WEBPACK_IMPORTED_MODULE_9_rxjs_operator_first__[\"first\"].call(observable);\n        });\n        return andObservables(obs);\n    };\n    /**\n     * @param {?} path\n     * @return {?}\n     */\n    PreActivation.prototype.runCanActivateChild = function (path) {\n        var _this = this;\n        var /** @type {?} */ future = path[path.length - 1];\n        var /** @type {?} */ canActivateChildGuards = path.slice(0, path.length - 1)\n            .reverse()\n            .map(function (p) { return _this.extractCanActivateChild(p); })\n            .filter(function (_) { return _ !== null; });\n        return andObservables(__WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(Object(__WEBPACK_IMPORTED_MODULE_5_rxjs_observable_from__[\"from\"])(canActivateChildGuards), function (d) {\n            var /** @type {?} */ obs = __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(Object(__WEBPACK_IMPORTED_MODULE_5_rxjs_observable_from__[\"from\"])(d.guards), function (c) {\n                var /** @type {?} */ guard = _this.getToken(c, d.node);\n                var /** @type {?} */ observable;\n                if (guard.canActivateChild) {\n                    observable = wrapIntoObservable(guard.canActivateChild(future, _this.future));\n                }\n                else {\n                    observable = wrapIntoObservable(guard(future, _this.future));\n                }\n                return __WEBPACK_IMPORTED_MODULE_9_rxjs_operator_first__[\"first\"].call(observable);\n            });\n            return andObservables(obs);\n        }));\n    };\n    /**\n     * @param {?} p\n     * @return {?}\n     */\n    PreActivation.prototype.extractCanActivateChild = function (p) {\n        var /** @type {?} */ canActivateChild = p._routeConfig ? p._routeConfig.canActivateChild : null;\n        if (!canActivateChild || canActivateChild.length === 0)\n            return null;\n        return { node: p, guards: canActivateChild };\n    };\n    /**\n     * @param {?} component\n     * @param {?} curr\n     * @return {?}\n     */\n    PreActivation.prototype.runCanDeactivate = function (component, curr) {\n        var _this = this;\n        var /** @type {?} */ canDeactivate = curr && curr._routeConfig ? curr._routeConfig.canDeactivate : null;\n        if (!canDeactivate || canDeactivate.length === 0)\n            return Object(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])(true);\n        var /** @type {?} */ canDeactivate$ = __WEBPACK_IMPORTED_MODULE_12_rxjs_operator_mergeMap__[\"mergeMap\"].call(Object(__WEBPACK_IMPORTED_MODULE_5_rxjs_observable_from__[\"from\"])(canDeactivate), function (c) {\n            var /** @type {?} */ guard = _this.getToken(c, curr);\n            var /** @type {?} */ observable;\n            if (guard.canDeactivate) {\n                observable =\n                    wrapIntoObservable(guard.canDeactivate(component, curr, _this.curr, _this.future));\n            }\n            else {\n                observable = wrapIntoObservable(guard(component, curr, _this.curr, _this.future));\n            }\n            return __WEBPACK_IMPORTED_MODULE_9_rxjs_operator_first__[\"first\"].call(observable);\n        });\n        return __WEBPACK_IMPORTED_MODULE_8_rxjs_operator_every__[\"every\"].call(canDeactivate$, function (result) { return result === true; });\n    };\n    /**\n     * @param {?} future\n     * @return {?}\n     */\n    PreActivation.prototype.runResolve = function (future) {\n        var /** @type {?} */ resolve = future._resolve;\n        return __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(this.resolveNode(resolve, future), function (resolvedData) {\n            future._resolvedData = resolvedData;\n            future.data = Object.assign({}, future.data, inheritedParamsDataResolve(future).resolve);\n            return null;\n        });\n    };\n    /**\n     * @param {?} resolve\n     * @param {?} future\n     * @return {?}\n     */\n    PreActivation.prototype.resolveNode = function (resolve, future) {\n        var _this = this;\n        var /** @type {?} */ keys = Object.keys(resolve);\n        if (keys.length === 0) {\n            return Object(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])({});\n        }\n        if (keys.length === 1) {\n            var /** @type {?} */ key_1 = keys[0];\n            return __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(this.getResolver(resolve[key_1], future), function (value) {\n                return _a = {}, _a[key_1] = value, _a;\n                var _a;\n            });\n        }\n        var /** @type {?} */ data = {};\n        var /** @type {?} */ runningResolvers$ = __WEBPACK_IMPORTED_MODULE_12_rxjs_operator_mergeMap__[\"mergeMap\"].call(Object(__WEBPACK_IMPORTED_MODULE_5_rxjs_observable_from__[\"from\"])(keys), function (key) {\n            return __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(_this.getResolver(resolve[key], future), function (value) {\n                data[key] = value;\n                return value;\n            });\n        });\n        return __WEBPACK_IMPORTED_MODULE_11_rxjs_operator_map__[\"map\"].call(__WEBPACK_IMPORTED_MODULE_10_rxjs_operator_last__[\"last\"].call(runningResolvers$), function () { return data; });\n    };\n    /**\n     * @param {?} injectionToken\n     * @param {?} future\n     * @return {?}\n     */\n    PreActivation.prototype.getResolver = function (injectionToken, future) {\n        var /** @type {?} */ resolver = this.getToken(injectionToken, future);\n        return resolver.resolve ? wrapIntoObservable(resolver.resolve(future, this.future)) :\n            wrapIntoObservable(resolver(future, this.future));\n    };\n    /**\n     * @param {?} token\n     * @param {?} snapshot\n     * @return {?}\n     */\n    PreActivation.prototype.getToken = function (token, snapshot) {\n        var /** @type {?} */ config = closestLoadedConfig(snapshot);\n        var /** @type {?} */ injector = config ? config.module.injector : this.moduleInjector;\n        return injector.get(token);\n    };\n    return PreActivation;\n}());\nvar ActivateRoutes = (function () {\n    /**\n     * @param {?} routeReuseStrategy\n     * @param {?} futureState\n     * @param {?} currState\n     */\n    function ActivateRoutes(routeReuseStrategy, futureState, currState) {\n        this.routeReuseStrategy = routeReuseStrategy;\n        this.futureState = futureState;\n        this.currState = currState;\n    }\n    /**\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    ActivateRoutes.prototype.activate = function (parentContexts) {\n        var /** @type {?} */ futureRoot = this.futureState._root;\n        var /** @type {?} */ currRoot = this.currState ? this.currState._root : null;\n        this.deactivateChildRoutes(futureRoot, currRoot, parentContexts);\n        advanceActivatedRoute(this.futureState.root);\n        this.activateChildRoutes(futureRoot, currRoot, parentContexts);\n    };\n    /**\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} contexts\n     * @return {?}\n     */\n    ActivateRoutes.prototype.deactivateChildRoutes = function (futureNode, currNode, contexts) {\n        var _this = this;\n        var /** @type {?} */ children = nodeChildrenAsMap(currNode);\n        // Recurse on the routes active in the future state to de-activate deeper children\n        futureNode.children.forEach(function (futureChild) {\n            var /** @type {?} */ childOutletName = futureChild.value.outlet;\n            _this.deactivateRoutes(futureChild, children[childOutletName], contexts);\n            delete children[childOutletName];\n        });\n        // De-activate the routes that will not be re-used\n        forEach(children, function (v, childName) {\n            _this.deactivateRouteAndItsChildren(v, contexts);\n        });\n    };\n    /**\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} parentContext\n     * @return {?}\n     */\n    ActivateRoutes.prototype.deactivateRoutes = function (futureNode, currNode, parentContext) {\n        var /** @type {?} */ future = futureNode.value;\n        var /** @type {?} */ curr = currNode ? currNode.value : null;\n        if (future === curr) {\n            // Reusing the node, check to see if the children need to be de-activated\n            if (future.component) {\n                // If we have a normal route, we need to go through an outlet.\n                var /** @type {?} */ context = parentContext.getContext(future.outlet);\n                if (context) {\n                    this.deactivateChildRoutes(futureNode, currNode, context.children);\n                }\n            }\n            else {\n                // if we have a componentless route, we recurse but keep the same outlet map.\n                this.deactivateChildRoutes(futureNode, currNode, parentContext);\n            }\n        }\n        else {\n            if (curr) {\n                // Deactivate the current route which will not be re-used\n                this.deactivateRouteAndItsChildren(currNode, parentContext);\n            }\n        }\n    };\n    /**\n     * @param {?} route\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    ActivateRoutes.prototype.deactivateRouteAndItsChildren = function (route, parentContexts) {\n        if (this.routeReuseStrategy.shouldDetach(route.value.snapshot)) {\n            this.detachAndStoreRouteSubtree(route, parentContexts);\n        }\n        else {\n            this.deactivateRouteAndOutlet(route, parentContexts);\n        }\n    };\n    /**\n     * @param {?} route\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    ActivateRoutes.prototype.detachAndStoreRouteSubtree = function (route, parentContexts) {\n        var /** @type {?} */ context = parentContexts.getContext(route.value.outlet);\n        if (context && context.outlet) {\n            var /** @type {?} */ componentRef = context.outlet.detach();\n            var /** @type {?} */ contexts = context.children.onOutletDeactivated();\n            this.routeReuseStrategy.store(route.value.snapshot, { componentRef: componentRef, route: route, contexts: contexts });\n        }\n    };\n    /**\n     * @param {?} route\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    ActivateRoutes.prototype.deactivateRouteAndOutlet = function (route, parentContexts) {\n        var _this = this;\n        var /** @type {?} */ context = parentContexts.getContext(route.value.outlet);\n        if (context) {\n            var /** @type {?} */ children = nodeChildrenAsMap(route);\n            var /** @type {?} */ contexts_1 = route.value.component ? context.children : parentContexts;\n            forEach(children, function (v, k) { return _this.deactivateRouteAndItsChildren(v, contexts_1); });\n            if (context.outlet) {\n                // Destroy the component\n                context.outlet.deactivate();\n                // Destroy the contexts for all the outlets that were in the component\n                context.children.onOutletDeactivated();\n            }\n        }\n    };\n    /**\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} contexts\n     * @return {?}\n     */\n    ActivateRoutes.prototype.activateChildRoutes = function (futureNode, currNode, contexts) {\n        var _this = this;\n        var /** @type {?} */ children = nodeChildrenAsMap(currNode);\n        futureNode.children.forEach(function (c) { _this.activateRoutes(c, children[c.value.outlet], contexts); });\n    };\n    /**\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    ActivateRoutes.prototype.activateRoutes = function (futureNode, currNode, parentContexts) {\n        var /** @type {?} */ future = futureNode.value;\n        var /** @type {?} */ curr = currNode ? currNode.value : null;\n        advanceActivatedRoute(future);\n        // reusing the node\n        if (future === curr) {\n            if (future.component) {\n                // If we have a normal route, we need to go through an outlet.\n                var /** @type {?} */ context = parentContexts.getOrCreateContext(future.outlet);\n                this.activateChildRoutes(futureNode, currNode, context.children);\n            }\n            else {\n                // if we have a componentless route, we recurse but keep the same outlet map.\n                this.activateChildRoutes(futureNode, currNode, parentContexts);\n            }\n        }\n        else {\n            if (future.component) {\n                // if we have a normal route, we need to place the component into the outlet and recurse.\n                var /** @type {?} */ context = parentContexts.getOrCreateContext(future.outlet);\n                if (this.routeReuseStrategy.shouldAttach(future.snapshot)) {\n                    var /** @type {?} */ stored = ((this.routeReuseStrategy.retrieve(future.snapshot)));\n                    this.routeReuseStrategy.store(future.snapshot, null);\n                    context.children.onOutletReAttached(stored.contexts);\n                    context.attachRef = stored.componentRef;\n                    context.route = stored.route.value;\n                    if (context.outlet) {\n                        // Attach right away when the outlet has already been instantiated\n                        // Otherwise attach from `RouterOutlet.ngOnInit` when it is instantiated\n                        context.outlet.attach(stored.componentRef, stored.route.value);\n                    }\n                    advanceActivatedRouteNodeAndItsChildren(stored.route);\n                }\n                else {\n                    var /** @type {?} */ config = parentLoadedConfig(future.snapshot);\n                    var /** @type {?} */ cmpFactoryResolver = config ? config.module.componentFactoryResolver : null;\n                    context.route = future;\n                    context.resolver = cmpFactoryResolver;\n                    if (context.outlet) {\n                        // Activate the outlet when it has already been instantiated\n                        // Otherwise it will get activated from its `ngOnInit` when instantiated\n                        context.outlet.activateWith(future, cmpFactoryResolver);\n                    }\n                    this.activateChildRoutes(futureNode, null, context.children);\n                }\n            }\n            else {\n                // if we have a componentless route, we recurse but keep the same outlet map.\n                this.activateChildRoutes(futureNode, null, parentContexts);\n            }\n        }\n    };\n    return ActivateRoutes;\n}());\n/**\n * @param {?} node\n * @return {?}\n */\nfunction advanceActivatedRouteNodeAndItsChildren(node) {\n    advanceActivatedRoute(node.value);\n    node.children.forEach(advanceActivatedRouteNodeAndItsChildren);\n}\n/**\n * @param {?} snapshot\n * @return {?}\n */\nfunction parentLoadedConfig(snapshot) {\n    for (var /** @type {?} */ s = snapshot.parent; s; s = s.parent) {\n        var /** @type {?} */ route = s._routeConfig;\n        if (route && route._loadedConfig)\n            return route._loadedConfig;\n        if (route && route.component)\n            return null;\n    }\n    return null;\n}\n/**\n * @param {?} snapshot\n * @return {?}\n */\nfunction closestLoadedConfig(snapshot) {\n    if (!snapshot)\n        return null;\n    for (var /** @type {?} */ s = snapshot.parent; s; s = s.parent) {\n        var /** @type {?} */ route = s._routeConfig;\n        if (route && route._loadedConfig)\n            return route._loadedConfig;\n    }\n    return null;\n}\n/**\n * @template T\n * @param {?} node\n * @return {?}\n */\nfunction nodeChildrenAsMap(node) {\n    var /** @type {?} */ map$$1 = {};\n    if (node) {\n        node.children.forEach(function (child) { return map$$1[child.value.outlet] = child; });\n    }\n    return map$$1;\n}\n/**\n * @param {?} commands\n * @return {?}\n */\nfunction validateCommands(commands) {\n    for (var /** @type {?} */ i = 0; i < commands.length; i++) {\n        var /** @type {?} */ cmd = commands[i];\n        if (cmd == null) {\n            throw new Error(\"The requested path contains \" + cmd + \" segment at index \" + i);\n        }\n    }\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Lets you link to specific parts of your app.\n *\n * \\@howToUse\n *\n * Consider the following route configuration:\n * `[{ path: 'user/:name', component: UserCmp }]`\n *\n * When linking to this `user/:name` route, you can write:\n * `<a routerLink='/user/bob'>link to user component</a>`\n *\n * \\@description\n *\n * The RouterLink directives let you link to specific parts of your app.\n *\n * When the link is static, you can use the directive as follows:\n * `<a routerLink=\"/user/bob\">link to user component</a>`\n *\n * If you use dynamic values to generate the link, you can pass an array of path\n * segments, followed by the params for each segment.\n *\n * For instance `['/team', teamId, 'user', userName, {details: true}]`\n * means that we want to generate a link to `/team/11/user/bob;details=true`.\n *\n * Multiple static segments can be merged into one\n * (e.g., `['/team/11/user', userName, {details: true}]`).\n *\n * The first segment name can be prepended with `/`, `./`, or `../`:\n * * If the first segment begins with `/`, the router will look up the route from the root of the\n *   app.\n * * If the first segment begins with `./`, or doesn't begin with a slash, the router will\n *   instead look in the children of the current activated route.\n * * And if the first segment begins with `../`, the router will go up one level.\n *\n * You can set query params and fragment as follows:\n *\n * ```\n * <a [routerLink]=\"['/user/bob']\" [queryParams]=\"{debug: true}\" fragment=\"education\">\n *   link to user component\n * </a>\n * ```\n * RouterLink will use these to generate this link: `/user/bob#education?debug=true`.\n *\n * (Deprecated in v4.0.0 use `queryParamsHandling` instead) You can also tell the\n * directive to preserve the current query params and fragment:\n *\n * ```\n * <a [routerLink]=\"['/user/bob']\" preserveQueryParams preserveFragment>\n *   link to user component\n * </a>\n * ```\n *\n * You can tell the directive to how to handle queryParams, available options are:\n *  - 'merge' merge the queryParams into the current queryParams\n *  - 'preserve' preserve the current queryParams\n *  - default / '' use the queryParams only\n *  same options for {\\@link NavigationExtras#queryParamsHandling}\n *\n * ```\n * <a [routerLink]=\"['/user/bob']\" [queryParams]=\"{debug: true}\" queryParamsHandling=\"merge\">\n *   link to user component\n * </a>\n * ```\n *\n * The router link directive always treats the provided input as a delta to the current url.\n *\n * For instance, if the current url is `/user/(box//aux:team)`.\n *\n * Then the following link `<a [routerLink]=\"['/user/jim']\">Jim</a>` will generate the link\n * `/user/(jim//aux:team)`.\n *\n * \\@ngModule RouterModule\n *\n * See {\\@link Router#createUrlTree} for more information.\n *\n * \\@stable\n */\nvar RouterLink = (function () {\n    /**\n     * @param {?} router\n     * @param {?} route\n     * @param {?} tabIndex\n     * @param {?} renderer\n     * @param {?} el\n     */\n    function RouterLink(router, route, tabIndex, renderer, el) {\n        this.router = router;\n        this.route = route;\n        this.commands = [];\n        if (tabIndex == null) {\n            renderer.setAttribute(el.nativeElement, 'tabindex', '0');\n        }\n    }\n    Object.defineProperty(RouterLink.prototype, \"routerLink\", {\n        /**\n         * @param {?} commands\n         * @return {?}\n         */\n        set: function (commands) {\n            if (commands != null) {\n                this.commands = Array.isArray(commands) ? commands : [commands];\n            }\n            else {\n                this.commands = [];\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterLink.prototype, \"preserveQueryParams\", {\n        /**\n         * @deprecated 4.0.0 use `queryParamsHandling` instead.\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            if (Object(__WEBPACK_IMPORTED_MODULE_2__angular_core__[\"isDevMode\"])() && (console) && (console.warn)) {\n                console.warn('preserveQueryParams is deprecated!, use queryParamsHandling instead.');\n            }\n            this.preserve = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    RouterLink.prototype.onClick = function () {\n        var /** @type {?} */ extras = {\n            skipLocationChange: attrBoolValue(this.skipLocationChange),\n            replaceUrl: attrBoolValue(this.replaceUrl),\n        };\n        this.router.navigateByUrl(this.urlTree, extras);\n        return true;\n    };\n    Object.defineProperty(RouterLink.prototype, \"urlTree\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return this.router.createUrlTree(this.commands, {\n                relativeTo: this.route,\n                queryParams: this.queryParams,\n                fragment: this.fragment,\n                preserveQueryParams: attrBoolValue(this.preserve),\n                queryParamsHandling: this.queryParamsHandling,\n                preserveFragment: attrBoolValue(this.preserveFragment),\n            });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return RouterLink;\n}());\nRouterLink.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Directive\"], args: [{ selector: ':not(a)[routerLink]' },] },\n];\n/**\n * @nocollapse\n */\nRouterLink.ctorParameters = function () { return [\n    { type: Router, },\n    { type: ActivatedRoute, },\n    { type: undefined, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Attribute\"], args: ['tabindex',] },] },\n    { type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Renderer2\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"ElementRef\"], },\n]; };\nRouterLink.propDecorators = {\n    'queryParams': [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Input\"] },],\n    'fragment': [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Input\"] },],\n    'queryParamsHandling': [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Input\"] },],\n    'preserveFragment': [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Input\"] },],\n    'skipLocationChange': [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Input\"] },],\n    'replaceUrl': [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Input\"] },],\n    'routerLink': [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Input\"] },],\n    'preserveQueryParams': [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Input\"] },],\n    'onClick': [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"HostListener\"], args: ['click',] },],\n};\n/**\n * \\@whatItDoes Lets you link to specific parts of your app.\n *\n * See {\\@link RouterLink} for more information.\n *\n * \\@ngModule RouterModule\n *\n * \\@stable\n */\nvar RouterLinkWithHref = (function () {\n    /**\n     * @param {?} router\n     * @param {?} route\n     * @param {?} locationStrategy\n     */\n    function RouterLinkWithHref(router, route, locationStrategy) {\n        var _this = this;\n        this.router = router;\n        this.route = route;\n        this.locationStrategy = locationStrategy;\n        this.commands = [];\n        this.subscription = router.events.subscribe(function (s) {\n            if (s instanceof NavigationEnd) {\n                _this.updateTargetUrlAndHref();\n            }\n        });\n    }\n    Object.defineProperty(RouterLinkWithHref.prototype, \"routerLink\", {\n        /**\n         * @param {?} commands\n         * @return {?}\n         */\n        set: function (commands) {\n            if (commands != null) {\n                this.commands = Array.isArray(commands) ? commands : [commands];\n            }\n            else {\n                this.commands = [];\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterLinkWithHref.prototype, \"preserveQueryParams\", {\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            if (Object(__WEBPACK_IMPORTED_MODULE_2__angular_core__[\"isDevMode\"])() && (console) && (console.warn)) {\n                console.warn('preserveQueryParams is deprecated, use queryParamsHandling instead.');\n            }\n            this.preserve = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    RouterLinkWithHref.prototype.ngOnChanges = function (changes) { this.updateTargetUrlAndHref(); };\n    /**\n     * @return {?}\n     */\n    RouterLinkWithHref.prototype.ngOnDestroy = function () { this.subscription.unsubscribe(); };\n    /**\n     * @param {?} button\n     * @param {?} ctrlKey\n     * @param {?} metaKey\n     * @param {?} shiftKey\n     * @return {?}\n     */\n    RouterLinkWithHref.prototype.onClick = function (button, ctrlKey, metaKey, shiftKey) {\n        if (button !== 0 || ctrlKey || metaKey || shiftKey) {\n            return true;\n        }\n        if (typeof this.target === 'string' && this.target != '_self') {\n            return true;\n        }\n        var /** @type {?} */ extras = {\n            skipLocationChange: attrBoolValue(this.skipLocationChange),\n            replaceUrl: attrBoolValue(this.replaceUrl),\n        };\n        this.router.navigateByUrl(this.urlTree, extras);\n        return false;\n    };\n    /**\n     * @return {?}\n     */\n    RouterLinkWithHref.prototype.updateTargetUrlAndHref = function () {\n        this.href = this.locationStrategy.prepareExternalUrl(this.router.serializeUrl(this.urlTree));\n    };\n    Object.defineProperty(RouterLinkWithHref.prototype, \"urlTree\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return this.router.createUrlTree(this.commands, {\n                relativeTo: this.route,\n                queryParams: this.queryParams,\n                fragment: this.fragment,\n                preserveQueryParams: attrBoolValue(this.preserve),\n                queryParamsHandling: this.queryParamsHandling,\n                preserveFragment: attrBoolValue(this.preserveFragment),\n            });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return RouterLinkWithHref;\n}());\nRouterLinkWithHref.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Directive\"], args: [{ selector: 'a[routerLink]' },] },\n];\n/**\n * @nocollapse\n */\nRouterLinkWithHref.ctorParameters = function () { return [\n    { type: Router, },\n    { type: ActivatedRoute, },\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_common__[\"LocationStrategy\"], },\n]; };\nRouterLinkWithHref.propDecorators = {\n    'target': [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"HostBinding\"], args: ['attr.target',] }, { type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Input\"] },],\n    'queryParams': [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Input\"] },],\n    'fragment': [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Input\"] },],\n    'queryParamsHandling': [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Input\"] },],\n    'preserveFragment': [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Input\"] },],\n    'skipLocationChange': [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Input\"] },],\n    'replaceUrl': [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Input\"] },],\n    'href': [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"HostBinding\"] },],\n    'routerLink': [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Input\"] },],\n    'preserveQueryParams': [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Input\"] },],\n    'onClick': [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"HostListener\"], args: ['click', ['$event.button', '$event.ctrlKey', '$event.metaKey', '$event.shiftKey'],] },],\n};\n/**\n * @param {?} s\n * @return {?}\n */\nfunction attrBoolValue(s) {\n    return s === '' || !!s;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Lets you add a CSS class to an element when the link's route becomes active.\n *\n * \\@howToUse\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\">Bob</a>\n * ```\n *\n * \\@description\n *\n * The RouterLinkActive directive lets you add a CSS class to an element when the link's route\n * becomes active.\n *\n * Consider the following example:\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\">Bob</a>\n * ```\n *\n * When the url is either '/user' or '/user/bob', the active-link class will\n * be added to the `a` tag. If the url changes, the class will be removed.\n *\n * You can set more than one class, as follows:\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"class1 class2\">Bob</a>\n * <a routerLink=\"/user/bob\" [routerLinkActive]=\"['class1', 'class2']\">Bob</a>\n * ```\n *\n * You can configure RouterLinkActive by passing `exact: true`. This will add the classes\n * only when the url matches the link exactly.\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\" [routerLinkActiveOptions]=\"{exact:\n * true}\">Bob</a>\n * ```\n *\n * You can assign the RouterLinkActive instance to a template variable and directly check\n * the `isActive` status.\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive #rla=\"routerLinkActive\">\n *   Bob {{ rla.isActive ? '(already open)' : ''}}\n * </a>\n * ```\n *\n * Finally, you can apply the RouterLinkActive directive to an ancestor of a RouterLink.\n *\n * ```\n * <div routerLinkActive=\"active-link\" [routerLinkActiveOptions]=\"{exact: true}\">\n *   <a routerLink=\"/user/jim\">Jim</a>\n *   <a routerLink=\"/user/bob\">Bob</a>\n * </div>\n * ```\n *\n * This will set the active-link class on the div tag if the url is either '/user/jim' or\n * '/user/bob'.\n *\n * \\@ngModule RouterModule\n *\n * \\@stable\n */\nvar RouterLinkActive = (function () {\n    /**\n     * @param {?} router\n     * @param {?} element\n     * @param {?} renderer\n     * @param {?} cdr\n     */\n    function RouterLinkActive(router, element, renderer, cdr) {\n        var _this = this;\n        this.router = router;\n        this.element = element;\n        this.renderer = renderer;\n        this.cdr = cdr;\n        this.classes = [];\n        this.active = false;\n        this.routerLinkActiveOptions = { exact: false };\n        this.subscription = router.events.subscribe(function (s) {\n            if (s instanceof NavigationEnd) {\n                _this.update();\n            }\n        });\n    }\n    Object.defineProperty(RouterLinkActive.prototype, \"isActive\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.active; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    RouterLinkActive.prototype.ngAfterContentInit = function () {\n        var _this = this;\n        this.links.changes.subscribe(function (_) { return _this.update(); });\n        this.linksWithHrefs.changes.subscribe(function (_) { return _this.update(); });\n        this.update();\n    };\n    Object.defineProperty(RouterLinkActive.prototype, \"routerLinkActive\", {\n        /**\n         * @param {?} data\n         * @return {?}\n         */\n        set: function (data) {\n            var /** @type {?} */ classes = Array.isArray(data) ? data : data.split(' ');\n            this.classes = classes.filter(function (c) { return !!c; });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    RouterLinkActive.prototype.ngOnChanges = function (changes) { this.update(); };\n    /**\n     * @return {?}\n     */\n    RouterLinkActive.prototype.ngOnDestroy = function () { this.subscription.unsubscribe(); };\n    /**\n     * @return {?}\n     */\n    RouterLinkActive.prototype.update = function () {\n        var _this = this;\n        if (!this.links || !this.linksWithHrefs || !this.router.navigated)\n            return;\n        var /** @type {?} */ hasActiveLinks = this.hasActiveLinks();\n        // react only when status has changed to prevent unnecessary dom updates\n        if (this.active !== hasActiveLinks) {\n            this.classes.forEach(function (c) {\n                if (hasActiveLinks) {\n                    _this.renderer.addClass(_this.element.nativeElement, c);\n                }\n                else {\n                    _this.renderer.removeClass(_this.element.nativeElement, c);\n                }\n            });\n            Promise.resolve(hasActiveLinks).then(function (active) { return _this.active = active; });\n        }\n    };\n    /**\n     * @param {?} router\n     * @return {?}\n     */\n    RouterLinkActive.prototype.isLinkActive = function (router) {\n        var _this = this;\n        return function (link) { return router.isActive(link.urlTree, _this.routerLinkActiveOptions.exact); };\n    };\n    /**\n     * @return {?}\n     */\n    RouterLinkActive.prototype.hasActiveLinks = function () {\n        return this.links.some(this.isLinkActive(this.router)) ||\n            this.linksWithHrefs.some(this.isLinkActive(this.router));\n    };\n    return RouterLinkActive;\n}());\nRouterLinkActive.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Directive\"], args: [{\n                selector: '[routerLinkActive]',\n                exportAs: 'routerLinkActive',\n            },] },\n];\n/**\n * @nocollapse\n */\nRouterLinkActive.ctorParameters = function () { return [\n    { type: Router, },\n    { type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"ElementRef\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Renderer2\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"ChangeDetectorRef\"], },\n]; };\nRouterLinkActive.propDecorators = {\n    'links': [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"ContentChildren\"], args: [RouterLink, { descendants: true },] },],\n    'linksWithHrefs': [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"ContentChildren\"], args: [RouterLinkWithHref, { descendants: true },] },],\n    'routerLinkActiveOptions': [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Input\"] },],\n    'routerLinkActive': [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Input\"] },],\n};\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Store contextual information about a {\\@link RouterOutlet}\n *\n * \\@stable\n */\nvar OutletContext = (function () {\n    function OutletContext() {\n        this.outlet = null;\n        this.route = null;\n        this.resolver = null;\n        this.children = new ChildrenOutletContexts();\n        this.attachRef = null;\n    }\n    return OutletContext;\n}());\n/**\n * Store contextual information about the children (= nested) {\\@link RouterOutlet}\n *\n * \\@stable\n */\nvar ChildrenOutletContexts = (function () {\n    function ChildrenOutletContexts() {\n        this.contexts = new Map();\n    }\n    /**\n     * Called when a `RouterOutlet` directive is instantiated\n     * @param {?} childName\n     * @param {?} outlet\n     * @return {?}\n     */\n    ChildrenOutletContexts.prototype.onChildOutletCreated = function (childName, outlet) {\n        var /** @type {?} */ context = this.getOrCreateContext(childName);\n        context.outlet = outlet;\n        this.contexts.set(childName, context);\n    };\n    /**\n     * Called when a `RouterOutlet` directive is destroyed.\n     * We need to keep the context as the outlet could be destroyed inside a NgIf and might be\n     * re-created later.\n     * @param {?} childName\n     * @return {?}\n     */\n    ChildrenOutletContexts.prototype.onChildOutletDestroyed = function (childName) {\n        var /** @type {?} */ context = this.getContext(childName);\n        if (context) {\n            context.outlet = null;\n        }\n    };\n    /**\n     * Called when the corresponding route is deactivated during navigation.\n     * Because the component get destroyed, all children outlet are destroyed.\n     * @return {?}\n     */\n    ChildrenOutletContexts.prototype.onOutletDeactivated = function () {\n        var /** @type {?} */ contexts = this.contexts;\n        this.contexts = new Map();\n        return contexts;\n    };\n    /**\n     * @param {?} contexts\n     * @return {?}\n     */\n    ChildrenOutletContexts.prototype.onOutletReAttached = function (contexts) { this.contexts = contexts; };\n    /**\n     * @param {?} childName\n     * @return {?}\n     */\n    ChildrenOutletContexts.prototype.getOrCreateContext = function (childName) {\n        var /** @type {?} */ context = this.getContext(childName);\n        if (!context) {\n            context = new OutletContext();\n            this.contexts.set(childName, context);\n        }\n        return context;\n    };\n    /**\n     * @param {?} childName\n     * @return {?}\n     */\n    ChildrenOutletContexts.prototype.getContext = function (childName) { return this.contexts.get(childName) || null; };\n    return ChildrenOutletContexts;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Acts as a placeholder that Angular dynamically fills based on the current router\n * state.\n *\n * \\@howToUse\n *\n * ```\n * <router-outlet></router-outlet>\n * <router-outlet name='left'></router-outlet>\n * <router-outlet name='right'></router-outlet>\n * ```\n *\n * A router outlet will emit an activate event any time a new component is being instantiated,\n * and a deactivate event when it is being destroyed.\n *\n * ```\n * <router-outlet\n *   (activate)='onActivate($event)'\n *   (deactivate)='onDeactivate($event)'></router-outlet>\n * ```\n * \\@ngModule RouterModule\n *\n * \\@stable\n */\nvar RouterOutlet = (function () {\n    /**\n     * @param {?} parentContexts\n     * @param {?} location\n     * @param {?} resolver\n     * @param {?} name\n     * @param {?} changeDetector\n     */\n    function RouterOutlet(parentContexts, location, resolver, name, changeDetector) {\n        this.parentContexts = parentContexts;\n        this.location = location;\n        this.resolver = resolver;\n        this.changeDetector = changeDetector;\n        this.activated = null;\n        this._activatedRoute = null;\n        this.activateEvents = new __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"EventEmitter\"]();\n        this.deactivateEvents = new __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"EventEmitter\"]();\n        this.name = name || PRIMARY_OUTLET;\n        parentContexts.onChildOutletCreated(this.name, this);\n    }\n    /**\n     * @return {?}\n     */\n    RouterOutlet.prototype.ngOnDestroy = function () { this.parentContexts.onChildOutletDestroyed(this.name); };\n    /**\n     * @return {?}\n     */\n    RouterOutlet.prototype.ngOnInit = function () {\n        if (!this.activated) {\n            // If the outlet was not instantiated at the time the route got activated we need to populate\n            // the outlet when it is initialized (ie inside a NgIf)\n            var /** @type {?} */ context = this.parentContexts.getContext(this.name);\n            if (context && context.route) {\n                if (context.attachRef) {\n                    // `attachRef` is populated when there is an existing component to mount\n                    this.attach(context.attachRef, context.route);\n                }\n                else {\n                    // otherwise the component defined in the configuration is created\n                    this.activateWith(context.route, context.resolver || null);\n                }\n            }\n        }\n    };\n    Object.defineProperty(RouterOutlet.prototype, \"locationInjector\", {\n        /**\n         * @deprecated since v4 *\n         * @return {?}\n         */\n        get: function () { return this.location.injector; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterOutlet.prototype, \"locationFactoryResolver\", {\n        /**\n         * @deprecated since v4 *\n         * @return {?}\n         */\n        get: function () { return this.resolver; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterOutlet.prototype, \"isActivated\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return !!this.activated; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterOutlet.prototype, \"component\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            if (!this.activated)\n                throw new Error('Outlet is not activated');\n            return this.activated.instance;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterOutlet.prototype, \"activatedRoute\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            if (!this.activated)\n                throw new Error('Outlet is not activated');\n            return (this._activatedRoute);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterOutlet.prototype, \"activatedRouteData\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            if (this._activatedRoute) {\n                return this._activatedRoute.snapshot.data;\n            }\n            return {};\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Called when the `RouteReuseStrategy` instructs to detach the subtree\n     * @return {?}\n     */\n    RouterOutlet.prototype.detach = function () {\n        if (!this.activated)\n            throw new Error('Outlet is not activated');\n        this.location.detach();\n        var /** @type {?} */ cmp = this.activated;\n        this.activated = null;\n        this._activatedRoute = null;\n        return cmp;\n    };\n    /**\n     * Called when the `RouteReuseStrategy` instructs to re-attach a previously detached subtree\n     * @param {?} ref\n     * @param {?} activatedRoute\n     * @return {?}\n     */\n    RouterOutlet.prototype.attach = function (ref, activatedRoute) {\n        this.activated = ref;\n        this._activatedRoute = activatedRoute;\n        this.location.insert(ref.hostView);\n    };\n    /**\n     * @return {?}\n     */\n    RouterOutlet.prototype.deactivate = function () {\n        if (this.activated) {\n            var /** @type {?} */ c = this.component;\n            this.activated.destroy();\n            this.activated = null;\n            this._activatedRoute = null;\n            this.deactivateEvents.emit(c);\n        }\n    };\n    /**\n     * @param {?} activatedRoute\n     * @param {?} resolver\n     * @return {?}\n     */\n    RouterOutlet.prototype.activateWith = function (activatedRoute, resolver) {\n        if (this.isActivated) {\n            throw new Error('Cannot activate an already activated outlet');\n        }\n        this._activatedRoute = activatedRoute;\n        var /** @type {?} */ snapshot = activatedRoute._futureSnapshot;\n        var /** @type {?} */ component = (((snapshot._routeConfig)).component);\n        resolver = resolver || this.resolver;\n        var /** @type {?} */ factory = resolver.resolveComponentFactory(component);\n        var /** @type {?} */ childContexts = this.parentContexts.getOrCreateContext(this.name).children;\n        var /** @type {?} */ injector = new OutletInjector(activatedRoute, childContexts, this.location.injector);\n        this.activated = this.location.createComponent(factory, this.location.length, injector);\n        // Calling `markForCheck` to make sure we will run the change detection when the\n        // `RouterOutlet` is inside a `ChangeDetectionStrategy.OnPush` component.\n        this.changeDetector.markForCheck();\n        this.activateEvents.emit(this.activated.instance);\n    };\n    return RouterOutlet;\n}());\nRouterOutlet.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Directive\"], args: [{ selector: 'router-outlet', exportAs: 'outlet' },] },\n];\n/**\n * @nocollapse\n */\nRouterOutlet.ctorParameters = function () { return [\n    { type: ChildrenOutletContexts, },\n    { type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"ViewContainerRef\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"ComponentFactoryResolver\"], },\n    { type: undefined, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Attribute\"], args: ['name',] },] },\n    { type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"ChangeDetectorRef\"], },\n]; };\nRouterOutlet.propDecorators = {\n    'activateEvents': [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Output\"], args: ['activate',] },],\n    'deactivateEvents': [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Output\"], args: ['deactivate',] },],\n};\nvar OutletInjector = (function () {\n    /**\n     * @param {?} route\n     * @param {?} childContexts\n     * @param {?} parent\n     */\n    function OutletInjector(route, childContexts, parent) {\n        this.route = route;\n        this.childContexts = childContexts;\n        this.parent = parent;\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    OutletInjector.prototype.get = function (token, notFoundValue) {\n        if (token === ActivatedRoute) {\n            return this.route;\n        }\n        if (token === ChildrenOutletContexts) {\n            return this.childContexts;\n        }\n        return this.parent.get(token, notFoundValue);\n    };\n    return OutletInjector;\n}());\n/**\n*@license\n*Copyright Google Inc. All Rights Reserved.\n*\n*Use of this source code is governed by an MIT-style license that can be\n*found in the LICENSE file at https://angular.io/license\n*/\n/**\n * \\@whatItDoes Provides a preloading strategy.\n *\n * \\@experimental\n * @abstract\n */\nvar PreloadingStrategy = (function () {\n    function PreloadingStrategy() {\n    }\n    /**\n     * @abstract\n     * @param {?} route\n     * @param {?} fn\n     * @return {?}\n     */\n    PreloadingStrategy.prototype.preload = function (route, fn) { };\n    return PreloadingStrategy;\n}());\n/**\n * \\@whatItDoes Provides a preloading strategy that preloads all modules as quickly as possible.\n *\n * \\@howToUse\n *\n * ```\n * RouteModule.forRoot(ROUTES, {preloadingStrategy: PreloadAllModules})\n * ```\n *\n * \\@experimental\n */\nvar PreloadAllModules = (function () {\n    function PreloadAllModules() {\n    }\n    /**\n     * @param {?} route\n     * @param {?} fn\n     * @return {?}\n     */\n    PreloadAllModules.prototype.preload = function (route, fn) {\n        return __WEBPACK_IMPORTED_MODULE_15_rxjs_operator_catch__[\"_catch\"].call(fn(), function () { return Object(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])(null); });\n    };\n    return PreloadAllModules;\n}());\n/**\n * \\@whatItDoes Provides a preloading strategy that does not preload any modules.\n *\n * \\@description\n *\n * This strategy is enabled by default.\n *\n * \\@experimental\n */\nvar NoPreloading = (function () {\n    function NoPreloading() {\n    }\n    /**\n     * @param {?} route\n     * @param {?} fn\n     * @return {?}\n     */\n    NoPreloading.prototype.preload = function (route, fn) { return Object(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])(null); };\n    return NoPreloading;\n}());\n/**\n * The preloader optimistically loads all router configurations to\n * make navigations into lazily-loaded sections of the application faster.\n *\n * The preloader runs in the background. When the router bootstraps, the preloader\n * starts listening to all navigation events. After every such event, the preloader\n * will check if any configurations can be loaded lazily.\n *\n * If a route is protected by `canLoad` guards, the preloaded will not load it.\n *\n * \\@stable\n */\nvar RouterPreloader = (function () {\n    /**\n     * @param {?} router\n     * @param {?} moduleLoader\n     * @param {?} compiler\n     * @param {?} injector\n     * @param {?} preloadingStrategy\n     */\n    function RouterPreloader(router, moduleLoader, compiler, injector, preloadingStrategy) {\n        this.router = router;\n        this.injector = injector;\n        this.preloadingStrategy = preloadingStrategy;\n        var onStartLoad = function (r) { return router.triggerEvent(new RouteConfigLoadStart(r)); };\n        var onEndLoad = function (r) { return router.triggerEvent(new RouteConfigLoadEnd(r)); };\n        this.loader = new RouterConfigLoader(moduleLoader, compiler, onStartLoad, onEndLoad);\n    }\n    ;\n    /**\n     * @return {?}\n     */\n    RouterPreloader.prototype.setUpPreloading = function () {\n        var _this = this;\n        var /** @type {?} */ navigations$ = __WEBPACK_IMPORTED_MODULE_21_rxjs_operator_filter__[\"filter\"].call(this.router.events, function (e) { return e instanceof NavigationEnd; });\n        this.subscription = __WEBPACK_IMPORTED_MODULE_7_rxjs_operator_concatMap__[\"concatMap\"].call(navigations$, function () { return _this.preload(); }).subscribe(function () { });\n    };\n    /**\n     * @return {?}\n     */\n    RouterPreloader.prototype.preload = function () {\n        var /** @type {?} */ ngModule = this.injector.get(__WEBPACK_IMPORTED_MODULE_2__angular_core__[\"NgModuleRef\"]);\n        return this.processRoutes(ngModule, this.router.config);\n    };\n    /**\n     * @return {?}\n     */\n    RouterPreloader.prototype.ngOnDestroy = function () { this.subscription.unsubscribe(); };\n    /**\n     * @param {?} ngModule\n     * @param {?} routes\n     * @return {?}\n     */\n    RouterPreloader.prototype.processRoutes = function (ngModule, routes) {\n        var /** @type {?} */ res = [];\n        for (var _i = 0, routes_5 = routes; _i < routes_5.length; _i++) {\n            var route = routes_5[_i];\n            // we already have the config loaded, just recurse\n            if (route.loadChildren && !route.canLoad && route._loadedConfig) {\n                var /** @type {?} */ childConfig = route._loadedConfig;\n                res.push(this.processRoutes(childConfig.module, childConfig.routes));\n                // no config loaded, fetch the config\n            }\n            else if (route.loadChildren && !route.canLoad) {\n                res.push(this.preloadConfig(ngModule, route));\n                // recurse into children\n            }\n            else if (route.children) {\n                res.push(this.processRoutes(ngModule, route.children));\n            }\n        }\n        return __WEBPACK_IMPORTED_MODULE_19_rxjs_operator_mergeAll__[\"mergeAll\"].call(Object(__WEBPACK_IMPORTED_MODULE_5_rxjs_observable_from__[\"from\"])(res));\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} route\n     * @return {?}\n     */\n    RouterPreloader.prototype.preloadConfig = function (ngModule, route) {\n        var _this = this;\n        return this.preloadingStrategy.preload(route, function () {\n            var /** @type {?} */ loaded$ = _this.loader.load(ngModule.injector, route);\n            return __WEBPACK_IMPORTED_MODULE_12_rxjs_operator_mergeMap__[\"mergeMap\"].call(loaded$, function (config) {\n                route._loadedConfig = config;\n                return _this.processRoutes(config.module, config.routes);\n            });\n        });\n    };\n    return RouterPreloader;\n}());\nRouterPreloader.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Injectable\"] },\n];\n/**\n * @nocollapse\n */\nRouterPreloader.ctorParameters = function () { return [\n    { type: Router, },\n    { type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"NgModuleFactoryLoader\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Compiler\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Injector\"], },\n    { type: PreloadingStrategy, },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Contains a list of directives\n * \\@stable\n */\nvar ROUTER_DIRECTIVES = [RouterOutlet, RouterLink, RouterLinkWithHref, RouterLinkActive];\n/**\n * \\@whatItDoes Is used in DI to configure the router.\n * \\@stable\n */\nvar ROUTER_CONFIGURATION = new __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"InjectionToken\"]('ROUTER_CONFIGURATION');\n/**\n * \\@docsNotRequired\n */\nvar ROUTER_FORROOT_GUARD = new __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"InjectionToken\"]('ROUTER_FORROOT_GUARD');\nvar ROUTER_PROVIDERS = [\n    __WEBPACK_IMPORTED_MODULE_1__angular_common__[\"Location\"],\n    { provide: UrlSerializer, useClass: DefaultUrlSerializer },\n    {\n        provide: Router,\n        useFactory: setupRouter,\n        deps: [\n            __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"ApplicationRef\"], UrlSerializer, ChildrenOutletContexts, __WEBPACK_IMPORTED_MODULE_1__angular_common__[\"Location\"], __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Injector\"],\n            __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"NgModuleFactoryLoader\"], __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Compiler\"], ROUTES, ROUTER_CONFIGURATION,\n            [UrlHandlingStrategy, new __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Optional\"]()], [RouteReuseStrategy, new __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Optional\"]()]\n        ]\n    },\n    ChildrenOutletContexts,\n    { provide: ActivatedRoute, useFactory: rootRoute, deps: [Router] },\n    { provide: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"NgModuleFactoryLoader\"], useClass: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"SystemJsNgModuleLoader\"] },\n    RouterPreloader,\n    NoPreloading,\n    PreloadAllModules,\n    { provide: ROUTER_CONFIGURATION, useValue: { enableTracing: false } },\n];\n/**\n * @return {?}\n */\nfunction routerNgProbeToken() {\n    return new __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"NgProbeToken\"]('Router', Router);\n}\n/**\n * \\@whatItDoes Adds router directives and providers.\n *\n * \\@howToUse\n *\n * RouterModule can be imported multiple times: once per lazily-loaded bundle.\n * Since the router deals with a global shared resource--location, we cannot have\n * more than one router service active.\n *\n * That is why there are two ways to create the module: `RouterModule.forRoot` and\n * `RouterModule.forChild`.\n *\n * * `forRoot` creates a module that contains all the directives, the given routes, and the router\n *   service itself.\n * * `forChild` creates a module that contains all the directives and the given routes, but does not\n *   include the router service.\n *\n * When registered at the root, the module should be used as follows\n *\n * ```\n * \\@NgModule({\n *   imports: [RouterModule.forRoot(ROUTES)]\n * })\n * class MyNgModule {}\n * ```\n *\n * For submodules and lazy loaded submodules the module should be used as follows:\n *\n * ```\n * \\@NgModule({\n *   imports: [RouterModule.forChild(ROUTES)]\n * })\n * class MyNgModule {}\n * ```\n *\n * \\@description\n *\n * Managing state transitions is one of the hardest parts of building applications. This is\n * especially true on the web, where you also need to ensure that the state is reflected in the URL.\n * In addition, we often want to split applications into multiple bundles and load them on demand.\n * Doing this transparently is not trivial.\n *\n * The Angular router solves these problems. Using the router, you can declaratively specify\n * application states, manage state transitions while taking care of the URL, and load bundles on\n * demand.\n *\n * [Read this developer guide](https://angular.io/docs/ts/latest/guide/router.html) to get an\n * overview of how the router should be used.\n *\n * \\@stable\n */\nvar RouterModule = (function () {\n    /**\n     * @param {?} guard\n     * @param {?} router\n     */\n    function RouterModule(guard, router) {\n    }\n    /**\n     * Creates a module with all the router providers and directives. It also optionally sets up an\n     * application listener to perform an initial navigation.\n     *\n     * Options:\n     * * `enableTracing` makes the router log all its internal events to the console.\n     * * `useHash` enables the location strategy that uses the URL fragment instead of the history\n     * API.\n     * * `initialNavigation` disables the initial navigation.\n     * * `errorHandler` provides a custom error handler.\n     * @param {?} routes\n     * @param {?=} config\n     * @return {?}\n     */\n    RouterModule.forRoot = function (routes, config) {\n        return {\n            ngModule: RouterModule,\n            providers: [\n                ROUTER_PROVIDERS,\n                provideRoutes(routes),\n                {\n                    provide: ROUTER_FORROOT_GUARD,\n                    useFactory: provideForRootGuard,\n                    deps: [[Router, new __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Optional\"](), new __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"SkipSelf\"]()]]\n                },\n                { provide: ROUTER_CONFIGURATION, useValue: config ? config : {} },\n                {\n                    provide: __WEBPACK_IMPORTED_MODULE_1__angular_common__[\"LocationStrategy\"],\n                    useFactory: provideLocationStrategy,\n                    deps: [\n                        __WEBPACK_IMPORTED_MODULE_1__angular_common__[\"PlatformLocation\"], [new __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Inject\"](__WEBPACK_IMPORTED_MODULE_1__angular_common__[\"APP_BASE_HREF\"]), new __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Optional\"]()], ROUTER_CONFIGURATION\n                    ]\n                },\n                {\n                    provide: PreloadingStrategy,\n                    useExisting: config && config.preloadingStrategy ? config.preloadingStrategy :\n                        NoPreloading\n                },\n                { provide: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"NgProbeToken\"], multi: true, useFactory: routerNgProbeToken },\n                provideRouterInitializer(),\n            ],\n        };\n    };\n    /**\n     * Creates a module with all the router directives and a provider registering routes.\n     * @param {?} routes\n     * @return {?}\n     */\n    RouterModule.forChild = function (routes) {\n        return { ngModule: RouterModule, providers: [provideRoutes(routes)] };\n    };\n    return RouterModule;\n}());\nRouterModule.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"NgModule\"], args: [{ declarations: ROUTER_DIRECTIVES, exports: ROUTER_DIRECTIVES },] },\n];\n/**\n * @nocollapse\n */\nRouterModule.ctorParameters = function () { return [\n    { type: undefined, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Inject\"], args: [ROUTER_FORROOT_GUARD,] },] },\n    { type: Router, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Optional\"] },] },\n]; };\n/**\n * @param {?} platformLocationStrategy\n * @param {?} baseHref\n * @param {?=} options\n * @return {?}\n */\nfunction provideLocationStrategy(platformLocationStrategy, baseHref, options) {\n    if (options === void 0) { options = {}; }\n    return options.useHash ? new __WEBPACK_IMPORTED_MODULE_1__angular_common__[\"HashLocationStrategy\"](platformLocationStrategy, baseHref) :\n        new __WEBPACK_IMPORTED_MODULE_1__angular_common__[\"PathLocationStrategy\"](platformLocationStrategy, baseHref);\n}\n/**\n * @param {?} router\n * @return {?}\n */\nfunction provideForRootGuard(router) {\n    if (router) {\n        throw new Error(\"RouterModule.forRoot() called twice. Lazy loaded modules should use RouterModule.forChild() instead.\");\n    }\n    return 'guarded';\n}\n/**\n * \\@whatItDoes Registers routes.\n *\n * \\@howToUse\n *\n * ```\n * \\@NgModule({\n *   imports: [RouterModule.forChild(ROUTES)],\n *   providers: [provideRoutes(EXTRA_ROUTES)]\n * })\n * class MyNgModule {}\n * ```\n *\n * \\@stable\n * @param {?} routes\n * @return {?}\n */\nfunction provideRoutes(routes) {\n    return [\n        { provide: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"ANALYZE_FOR_ENTRY_COMPONENTS\"], multi: true, useValue: routes },\n        { provide: ROUTES, multi: true, useValue: routes },\n    ];\n}\n/**\n * @param {?} ref\n * @param {?} urlSerializer\n * @param {?} contexts\n * @param {?} location\n * @param {?} injector\n * @param {?} loader\n * @param {?} compiler\n * @param {?} config\n * @param {?=} opts\n * @param {?=} urlHandlingStrategy\n * @param {?=} routeReuseStrategy\n * @return {?}\n */\nfunction setupRouter(ref, urlSerializer, contexts, location, injector, loader, compiler, config, opts, urlHandlingStrategy, routeReuseStrategy) {\n    if (opts === void 0) { opts = {}; }\n    var /** @type {?} */ router = new Router(null, urlSerializer, contexts, location, injector, loader, compiler, flatten(config));\n    if (urlHandlingStrategy) {\n        router.urlHandlingStrategy = urlHandlingStrategy;\n    }\n    if (routeReuseStrategy) {\n        router.routeReuseStrategy = routeReuseStrategy;\n    }\n    if (opts.errorHandler) {\n        router.errorHandler = opts.errorHandler;\n    }\n    if (opts.enableTracing) {\n        var /** @type {?} */ dom_1 = Object(__WEBPACK_IMPORTED_MODULE_20__angular_platform_browser__[\"ɵgetDOM\"])();\n        router.events.subscribe(function (e) {\n            dom_1.logGroup(\"Router Event: \" + ((e.constructor)).name);\n            dom_1.log(e.toString());\n            dom_1.log(e);\n            dom_1.logGroupEnd();\n        });\n    }\n    return router;\n}\n/**\n * @param {?} router\n * @return {?}\n */\nfunction rootRoute(router) {\n    return router.routerState.root;\n}\n/**\n * To initialize the router properly we need to do in two steps:\n *\n * We need to start the navigation in a APP_INITIALIZER to block the bootstrap if\n * a resolver or a guards executes asynchronously. Second, we need to actually run\n * activation in a BOOTSTRAP_LISTENER. We utilize the afterPreactivation\n * hook provided by the router to do that.\n *\n * The router navigation starts, reaches the point when preactivation is done, and then\n * pauses. It waits for the hook to be resolved. We then resolve it only in a bootstrap listener.\n */\nvar RouterInitializer = (function () {\n    /**\n     * @param {?} injector\n     */\n    function RouterInitializer(injector) {\n        this.injector = injector;\n        this.initNavigation = false;\n        this.resultOfPreactivationDone = new __WEBPACK_IMPORTED_MODULE_4_rxjs_Subject__[\"Subject\"]();\n    }\n    /**\n     * @return {?}\n     */\n    RouterInitializer.prototype.appInitializer = function () {\n        var _this = this;\n        var /** @type {?} */ p = this.injector.get(__WEBPACK_IMPORTED_MODULE_1__angular_common__[\"LOCATION_INITIALIZED\"], Promise.resolve(null));\n        return p.then(function () {\n            var /** @type {?} */ resolve = ((null));\n            var /** @type {?} */ res = new Promise(function (r) { return resolve = r; });\n            var /** @type {?} */ router = _this.injector.get(Router);\n            var /** @type {?} */ opts = _this.injector.get(ROUTER_CONFIGURATION);\n            if (_this.isLegacyDisabled(opts) || _this.isLegacyEnabled(opts)) {\n                resolve(true);\n            }\n            else if (opts.initialNavigation === 'disabled') {\n                router.setUpLocationChangeListener();\n                resolve(true);\n            }\n            else if (opts.initialNavigation === 'enabled') {\n                router.hooks.afterPreactivation = function () {\n                    // only the initial navigation should be delayed\n                    if (!_this.initNavigation) {\n                        _this.initNavigation = true;\n                        resolve(true);\n                        return _this.resultOfPreactivationDone;\n                        // subsequent navigations should not be delayed\n                    }\n                    else {\n                        return (Object(__WEBPACK_IMPORTED_MODULE_6_rxjs_observable_of__[\"of\"])(null));\n                    }\n                };\n                router.initialNavigation();\n            }\n            else {\n                throw new Error(\"Invalid initialNavigation options: '\" + opts.initialNavigation + \"'\");\n            }\n            return res;\n        });\n    };\n    /**\n     * @param {?} bootstrappedComponentRef\n     * @return {?}\n     */\n    RouterInitializer.prototype.bootstrapListener = function (bootstrappedComponentRef) {\n        var /** @type {?} */ opts = this.injector.get(ROUTER_CONFIGURATION);\n        var /** @type {?} */ preloader = this.injector.get(RouterPreloader);\n        var /** @type {?} */ router = this.injector.get(Router);\n        var /** @type {?} */ ref = this.injector.get(__WEBPACK_IMPORTED_MODULE_2__angular_core__[\"ApplicationRef\"]);\n        if (bootstrappedComponentRef !== ref.components[0]) {\n            return;\n        }\n        if (this.isLegacyEnabled(opts)) {\n            router.initialNavigation();\n        }\n        else if (this.isLegacyDisabled(opts)) {\n            router.setUpLocationChangeListener();\n        }\n        preloader.setUpPreloading();\n        router.resetRootComponentType(ref.componentTypes[0]);\n        this.resultOfPreactivationDone.next(/** @type {?} */ ((null)));\n        this.resultOfPreactivationDone.complete();\n    };\n    /**\n     * @param {?} opts\n     * @return {?}\n     */\n    RouterInitializer.prototype.isLegacyEnabled = function (opts) {\n        return opts.initialNavigation === 'legacy_enabled' || opts.initialNavigation === true ||\n            opts.initialNavigation === undefined;\n    };\n    /**\n     * @param {?} opts\n     * @return {?}\n     */\n    RouterInitializer.prototype.isLegacyDisabled = function (opts) {\n        return opts.initialNavigation === 'legacy_disabled' || opts.initialNavigation === false;\n    };\n    return RouterInitializer;\n}());\nRouterInitializer.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Injectable\"] },\n];\n/**\n * @nocollapse\n */\nRouterInitializer.ctorParameters = function () { return [\n    { type: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Injector\"], },\n]; };\n/**\n * @param {?} r\n * @return {?}\n */\nfunction getAppInitializer(r) {\n    return r.appInitializer.bind(r);\n}\n/**\n * @param {?} r\n * @return {?}\n */\nfunction getBootstrapListener(r) {\n    return r.bootstrapListener.bind(r);\n}\n/**\n * A token for the router initializer that will be called after the app is bootstrapped.\n *\n * \\@experimental\n */\nvar ROUTER_INITIALIZER = new __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"InjectionToken\"]('Router Initializer');\n/**\n * @return {?}\n */\nfunction provideRouterInitializer() {\n    return [\n        RouterInitializer,\n        {\n            provide: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"APP_INITIALIZER\"],\n            multi: true,\n            useFactory: getAppInitializer,\n            deps: [RouterInitializer]\n        },\n        { provide: ROUTER_INITIALIZER, useFactory: getBootstrapListener, deps: [RouterInitializer] },\n        { provide: __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"APP_BOOTSTRAP_LISTENER\"], multi: true, useExisting: ROUTER_INITIALIZER },\n    ];\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common package.\n */\n/**\n * \\@stable\n */\nvar VERSION = new __WEBPACK_IMPORTED_MODULE_2__angular_core__[\"Version\"]('4.4.4');\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the router package.\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n/**\n * Generated bundle index. Do not edit.\n */\n\n//# sourceMappingURL=router.es5.js.map\n\n\n/***/ }),\n/* 40 */,\n/* 41 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar ArrayObservable_1 = __webpack_require__(15);\nexports.of = ArrayObservable_1.ArrayObservable.of;\n//# sourceMappingURL=of.js.map\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar mergeMap_1 = __webpack_require__(35);\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, in a serialized fashion waiting for each one to complete before\n * merging the next.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link concatAll}.</span>\n *\n * <img src=\"./img/concatMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each new inner Observable is\n * concatenated with the previous inner Observable.\n *\n * __Warning:__ if source values arrive endlessly and faster than their\n * corresponding inner Observables can complete, it will result in memory issues\n * as inner Observables amass in an unbounded buffer waiting for their turn to\n * be subscribed to.\n *\n * Note: `concatMap` is equivalent to `mergeMap` with concurrency parameter set\n * to `1`.\n *\n * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.concatMap(ev => Rx.Observable.interval(1000).take(4));\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n *\n * @see {@link concat}\n * @see {@link concatAll}\n * @see {@link concatMapTo}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and taking values from each projected inner\n * Observable sequentially.\n * @method concatMap\n * @owner Observable\n */\nfunction concatMap(project, resultSelector) {\n    return this.lift(new mergeMap_1.MergeMapOperator(project, resultSelector, 1));\n}\nexports.concatMap = concatMap;\n//# sourceMappingURL=concatMap.js.map\n\n/***/ }),\n/* 43 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = __webpack_require__(2);\n/* tslint:enable:max-line-length */\n/**\n * Filter items emitted by the source Observable by only emitting those that\n * satisfy a specified predicate.\n *\n * <span class=\"informal\">Like\n * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\n * it only emits a value from the source if it passes a criterion function.</span>\n *\n * <img src=\"./img/filter.png\" width=\"100%\">\n *\n * Similar to the well-known `Array.prototype.filter` method, this operator\n * takes values from the source Observable, passes them through a `predicate`\n * function and only emits those values that yielded `true`.\n *\n * @example <caption>Emit only click events whose target was a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var clicksOnDivs = clicks.filter(ev => ev.target.tagName === 'DIV');\n * clicksOnDivs.subscribe(x => console.log(x));\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n * @see {@link ignoreElements}\n * @see {@link partition}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted, if `false` the value is not passed to the output\n * Observable. The `index` parameter is the number `i` for the i-th source\n * emission that has happened since the subscription, starting from the number\n * `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable} An Observable of values from the source that were\n * allowed by the `predicate` function.\n * @method filter\n * @owner Observable\n */\nfunction filter(predicate, thisArg) {\n    return this.lift(new FilterOperator(predicate, thisArg));\n}\nexports.filter = filter;\nvar FilterOperator = (function () {\n    function FilterOperator(predicate, thisArg) {\n        this.predicate = predicate;\n        this.thisArg = thisArg;\n    }\n    FilterOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new FilterSubscriber(subscriber, this.predicate, this.thisArg));\n    };\n    return FilterOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar FilterSubscriber = (function (_super) {\n    __extends(FilterSubscriber, _super);\n    function FilterSubscriber(destination, predicate, thisArg) {\n        _super.call(this, destination);\n        this.predicate = predicate;\n        this.thisArg = thisArg;\n        this.count = 0;\n    }\n    // the try catch block below is left specifically for\n    // optimization and perf reasons. a tryCatcher is not necessary here.\n    FilterSubscriber.prototype._next = function (value) {\n        var result;\n        try {\n            result = this.predicate.call(this.thisArg, value, this.count++);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (result) {\n            this.destination.next(value);\n        }\n    };\n    return FilterSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=filter.js.map\n\n/***/ }),\n/* 44 */,\n/* 45 */,\n/* 46 */,\n/* 47 */,\n/* 48 */,\n/* 49 */,\n/* 50 */,\n/* 51 */,\n/* 52 */,\n/* 53 */,\n/* 54 */,\n/* 55 */,\n/* 56 */,\n/* 57 */,\n/* 58 */,\n/* 59 */,\n/* 60 */,\n/* 61 */,\n/* 62 */,\n/* 63 */,\n/* 64 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(process) {\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar platform_browser_dynamic_1 = __webpack_require__(32);\r\nvar core_1 = __webpack_require__(1);\r\nvar root_module_1 = __webpack_require__(65);\r\nif (process.env.NODE_ENV === 'production') {\r\n    core_1.enableProdMode();\r\n}\r\nplatform_browser_dynamic_1.platformBrowserDynamic().bootstrapModule(root_module_1.RootModule);\r\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(21)))\n\n/***/ }),\n/* 65 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = __webpack_require__(1);\r\nvar platform_browser_1 = __webpack_require__(5);\r\nvar root_routing_module_1 = __webpack_require__(66);\r\nvar root_component_1 = __webpack_require__(83);\r\nvar home_component_1 = __webpack_require__(36);\r\nvar page_not_found_component_1 = __webpack_require__(37);\r\nvar RootModule = /** @class */ (function () {\r\n    function RootModule() {\r\n    }\r\n    RootModule = __decorate([\r\n        core_1.NgModule({\r\n            imports: [\r\n                platform_browser_1.BrowserModule,\r\n                root_routing_module_1.RootRoutingModule\r\n            ],\r\n            declarations: [\r\n                root_component_1.RootComponent,\r\n                home_component_1.HomeComponent,\r\n                page_not_found_component_1.PageNotFoundComponent\r\n            ],\r\n            bootstrap: [root_component_1.RootComponent]\r\n        })\r\n    ], RootModule);\r\n    return RootModule;\r\n}());\r\nexports.RootModule = RootModule;\r\n\n\n/***/ }),\n/* 66 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = __webpack_require__(1);\r\nvar router_1 = __webpack_require__(39);\r\nvar home_component_1 = __webpack_require__(36);\r\nvar page_not_found_component_1 = __webpack_require__(37);\r\nvar appRoutes = [\r\n    { path: '', redirectTo: 'home', pathMatch: 'full' },\r\n    { path: 'home', component: home_component_1.HomeComponent },\r\n    {\r\n        path: 'employees',\r\n        loadChildren: function () { return new Promise(function (resolve) { __webpack_require__.e/* require.ensure */(0).then((function (require) { resolve(__webpack_require__(86)['EmployeesModule']); }).bind(null, __webpack_require__)).catch(__webpack_require__.oe); }); }\r\n    },\r\n    { path: '**', component: page_not_found_component_1.PageNotFoundComponent }\r\n];\r\nvar RootRoutingModule = /** @class */ (function () {\r\n    function RootRoutingModule() {\r\n    }\r\n    RootRoutingModule = __decorate([\r\n        core_1.NgModule({\r\n            imports: [\r\n                router_1.RouterModule.forRoot(appRoutes\r\n                //,{ enableTracing: true } // <-- debugging purposes only\r\n                )\r\n            ],\r\n            exports: [\r\n                router_1.RouterModule\r\n            ]\r\n        })\r\n    ], RootRoutingModule);\r\n    return RootRoutingModule;\r\n}());\r\nexports.RootRoutingModule = RootRoutingModule;\r\n\n\n/***/ }),\n/* 67 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subject_1 = __webpack_require__(7);\nvar ObjectUnsubscribedError_1 = __webpack_require__(30);\n/**\n * @class BehaviorSubject<T>\n */\nvar BehaviorSubject = (function (_super) {\n    __extends(BehaviorSubject, _super);\n    function BehaviorSubject(_value) {\n        _super.call(this);\n        this._value = _value;\n    }\n    Object.defineProperty(BehaviorSubject.prototype, \"value\", {\n        get: function () {\n            return this.getValue();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BehaviorSubject.prototype._subscribe = function (subscriber) {\n        var subscription = _super.prototype._subscribe.call(this, subscriber);\n        if (subscription && !subscription.closed) {\n            subscriber.next(this._value);\n        }\n        return subscription;\n    };\n    BehaviorSubject.prototype.getValue = function () {\n        if (this.hasError) {\n            throw this.thrownError;\n        }\n        else if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        else {\n            return this._value;\n        }\n    };\n    BehaviorSubject.prototype.next = function (value) {\n        _super.prototype.next.call(this, this._value = value);\n    };\n    return BehaviorSubject;\n}(Subject_1.Subject));\nexports.BehaviorSubject = BehaviorSubject;\n//# sourceMappingURL=BehaviorSubject.js.map\n\n/***/ }),\n/* 68 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar FromObservable_1 = __webpack_require__(69);\nexports.from = FromObservable_1.FromObservable.create;\n//# sourceMappingURL=from.js.map\n\n/***/ }),\n/* 69 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar isArray_1 = __webpack_require__(12);\nvar isArrayLike_1 = __webpack_require__(28);\nvar isPromise_1 = __webpack_require__(29);\nvar PromiseObservable_1 = __webpack_require__(34);\nvar IteratorObservable_1 = __webpack_require__(70);\nvar ArrayObservable_1 = __webpack_require__(15);\nvar ArrayLikeObservable_1 = __webpack_require__(71);\nvar iterator_1 = __webpack_require__(18);\nvar Observable_1 = __webpack_require__(0);\nvar observeOn_1 = __webpack_require__(72);\nvar observable_1 = __webpack_require__(14);\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar FromObservable = (function (_super) {\n    __extends(FromObservable, _super);\n    function FromObservable(ish, scheduler) {\n        _super.call(this, null);\n        this.ish = ish;\n        this.scheduler = scheduler;\n    }\n    /**\n     * Creates an Observable from an Array, an array-like object, a Promise, an\n     * iterable object, or an Observable-like object.\n     *\n     * <span class=\"informal\">Converts almost anything to an Observable.</span>\n     *\n     * <img src=\"./img/from.png\" width=\"100%\">\n     *\n     * Convert various other objects and data types into Observables. `from`\n     * converts a Promise or an array-like or an\n     * [iterable](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterable)\n     * object into an Observable that emits the items in that promise or array or\n     * iterable. A String, in this context, is treated as an array of characters.\n     * Observable-like objects (contains a function named with the ES2015 Symbol\n     * for Observable) can also be converted through this operator.\n     *\n     * @example <caption>Converts an array to an Observable</caption>\n     * var array = [10, 20, 30];\n     * var result = Rx.Observable.from(array);\n     * result.subscribe(x => console.log(x));\n     *\n     * // Results in the following:\n     * // 10 20 30\n     *\n     * @example <caption>Convert an infinite iterable (from a generator) to an Observable</caption>\n     * function* generateDoubles(seed) {\n     *   var i = seed;\n     *   while (true) {\n     *     yield i;\n     *     i = 2 * i; // double it\n     *   }\n     * }\n     *\n     * var iterator = generateDoubles(3);\n     * var result = Rx.Observable.from(iterator).take(10);\n     * result.subscribe(x => console.log(x));\n     *\n     * // Results in the following:\n     * // 3 6 12 24 48 96 192 384 768 1536\n     *\n     * @see {@link create}\n     * @see {@link fromEvent}\n     * @see {@link fromEventPattern}\n     * @see {@link fromPromise}\n     *\n     * @param {ObservableInput<T>} ish A subscribable object, a Promise, an\n     * Observable-like, an Array, an iterable or an array-like object to be\n     * converted.\n     * @param {Scheduler} [scheduler] The scheduler on which to schedule the\n     * emissions of values.\n     * @return {Observable<T>} The Observable whose values are originally from the\n     * input object that was converted.\n     * @static true\n     * @name from\n     * @owner Observable\n     */\n    FromObservable.create = function (ish, scheduler) {\n        if (ish != null) {\n            if (typeof ish[observable_1.observable] === 'function') {\n                if (ish instanceof Observable_1.Observable && !scheduler) {\n                    return ish;\n                }\n                return new FromObservable(ish, scheduler);\n            }\n            else if (isArray_1.isArray(ish)) {\n                return new ArrayObservable_1.ArrayObservable(ish, scheduler);\n            }\n            else if (isPromise_1.isPromise(ish)) {\n                return new PromiseObservable_1.PromiseObservable(ish, scheduler);\n            }\n            else if (typeof ish[iterator_1.iterator] === 'function' || typeof ish === 'string') {\n                return new IteratorObservable_1.IteratorObservable(ish, scheduler);\n            }\n            else if (isArrayLike_1.isArrayLike(ish)) {\n                return new ArrayLikeObservable_1.ArrayLikeObservable(ish, scheduler);\n            }\n        }\n        throw new TypeError((ish !== null && typeof ish || ish) + ' is not observable');\n    };\n    FromObservable.prototype._subscribe = function (subscriber) {\n        var ish = this.ish;\n        var scheduler = this.scheduler;\n        if (scheduler == null) {\n            return ish[observable_1.observable]().subscribe(subscriber);\n        }\n        else {\n            return ish[observable_1.observable]().subscribe(new observeOn_1.ObserveOnSubscriber(subscriber, scheduler, 0));\n        }\n    };\n    return FromObservable;\n}(Observable_1.Observable));\nexports.FromObservable = FromObservable;\n//# sourceMappingURL=FromObservable.js.map\n\n/***/ }),\n/* 70 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar root_1 = __webpack_require__(4);\nvar Observable_1 = __webpack_require__(0);\nvar iterator_1 = __webpack_require__(18);\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar IteratorObservable = (function (_super) {\n    __extends(IteratorObservable, _super);\n    function IteratorObservable(iterator, scheduler) {\n        _super.call(this);\n        this.scheduler = scheduler;\n        if (iterator == null) {\n            throw new Error('iterator cannot be null.');\n        }\n        this.iterator = getIterator(iterator);\n    }\n    IteratorObservable.create = function (iterator, scheduler) {\n        return new IteratorObservable(iterator, scheduler);\n    };\n    IteratorObservable.dispatch = function (state) {\n        var index = state.index, hasError = state.hasError, iterator = state.iterator, subscriber = state.subscriber;\n        if (hasError) {\n            subscriber.error(state.error);\n            return;\n        }\n        var result = iterator.next();\n        if (result.done) {\n            subscriber.complete();\n            return;\n        }\n        subscriber.next(result.value);\n        state.index = index + 1;\n        if (subscriber.closed) {\n            if (typeof iterator.return === 'function') {\n                iterator.return();\n            }\n            return;\n        }\n        this.schedule(state);\n    };\n    IteratorObservable.prototype._subscribe = function (subscriber) {\n        var index = 0;\n        var _a = this, iterator = _a.iterator, scheduler = _a.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(IteratorObservable.dispatch, 0, {\n                index: index, iterator: iterator, subscriber: subscriber\n            });\n        }\n        else {\n            do {\n                var result = iterator.next();\n                if (result.done) {\n                    subscriber.complete();\n                    break;\n                }\n                else {\n                    subscriber.next(result.value);\n                }\n                if (subscriber.closed) {\n                    if (typeof iterator.return === 'function') {\n                        iterator.return();\n                    }\n                    break;\n                }\n            } while (true);\n        }\n    };\n    return IteratorObservable;\n}(Observable_1.Observable));\nexports.IteratorObservable = IteratorObservable;\nvar StringIterator = (function () {\n    function StringIterator(str, idx, len) {\n        if (idx === void 0) { idx = 0; }\n        if (len === void 0) { len = str.length; }\n        this.str = str;\n        this.idx = idx;\n        this.len = len;\n    }\n    StringIterator.prototype[iterator_1.iterator] = function () { return (this); };\n    StringIterator.prototype.next = function () {\n        return this.idx < this.len ? {\n            done: false,\n            value: this.str.charAt(this.idx++)\n        } : {\n            done: true,\n            value: undefined\n        };\n    };\n    return StringIterator;\n}());\nvar ArrayIterator = (function () {\n    function ArrayIterator(arr, idx, len) {\n        if (idx === void 0) { idx = 0; }\n        if (len === void 0) { len = toLength(arr); }\n        this.arr = arr;\n        this.idx = idx;\n        this.len = len;\n    }\n    ArrayIterator.prototype[iterator_1.iterator] = function () { return this; };\n    ArrayIterator.prototype.next = function () {\n        return this.idx < this.len ? {\n            done: false,\n            value: this.arr[this.idx++]\n        } : {\n            done: true,\n            value: undefined\n        };\n    };\n    return ArrayIterator;\n}());\nfunction getIterator(obj) {\n    var i = obj[iterator_1.iterator];\n    if (!i && typeof obj === 'string') {\n        return new StringIterator(obj);\n    }\n    if (!i && obj.length !== undefined) {\n        return new ArrayIterator(obj);\n    }\n    if (!i) {\n        throw new TypeError('object is not iterable');\n    }\n    return obj[iterator_1.iterator]();\n}\nvar maxSafeInteger = Math.pow(2, 53) - 1;\nfunction toLength(o) {\n    var len = +o.length;\n    if (isNaN(len)) {\n        return 0;\n    }\n    if (len === 0 || !numberIsFinite(len)) {\n        return len;\n    }\n    len = sign(len) * Math.floor(Math.abs(len));\n    if (len <= 0) {\n        return 0;\n    }\n    if (len > maxSafeInteger) {\n        return maxSafeInteger;\n    }\n    return len;\n}\nfunction numberIsFinite(value) {\n    return typeof value === 'number' && root_1.root.isFinite(value);\n}\nfunction sign(value) {\n    var valueAsNumber = +value;\n    if (valueAsNumber === 0) {\n        return valueAsNumber;\n    }\n    if (isNaN(valueAsNumber)) {\n        return valueAsNumber;\n    }\n    return valueAsNumber < 0 ? -1 : 1;\n}\n//# sourceMappingURL=IteratorObservable.js.map\n\n/***/ }),\n/* 71 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = __webpack_require__(0);\nvar ScalarObservable_1 = __webpack_require__(26);\nvar EmptyObservable_1 = __webpack_require__(16);\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar ArrayLikeObservable = (function (_super) {\n    __extends(ArrayLikeObservable, _super);\n    function ArrayLikeObservable(arrayLike, scheduler) {\n        _super.call(this);\n        this.arrayLike = arrayLike;\n        this.scheduler = scheduler;\n        if (!scheduler && arrayLike.length === 1) {\n            this._isScalar = true;\n            this.value = arrayLike[0];\n        }\n    }\n    ArrayLikeObservable.create = function (arrayLike, scheduler) {\n        var length = arrayLike.length;\n        if (length === 0) {\n            return new EmptyObservable_1.EmptyObservable();\n        }\n        else if (length === 1) {\n            return new ScalarObservable_1.ScalarObservable(arrayLike[0], scheduler);\n        }\n        else {\n            return new ArrayLikeObservable(arrayLike, scheduler);\n        }\n    };\n    ArrayLikeObservable.dispatch = function (state) {\n        var arrayLike = state.arrayLike, index = state.index, length = state.length, subscriber = state.subscriber;\n        if (subscriber.closed) {\n            return;\n        }\n        if (index >= length) {\n            subscriber.complete();\n            return;\n        }\n        subscriber.next(arrayLike[index]);\n        state.index = index + 1;\n        this.schedule(state);\n    };\n    ArrayLikeObservable.prototype._subscribe = function (subscriber) {\n        var index = 0;\n        var _a = this, arrayLike = _a.arrayLike, scheduler = _a.scheduler;\n        var length = arrayLike.length;\n        if (scheduler) {\n            return scheduler.schedule(ArrayLikeObservable.dispatch, 0, {\n                arrayLike: arrayLike, index: index, length: length, subscriber: subscriber\n            });\n        }\n        else {\n            for (var i = 0; i < length && !subscriber.closed; i++) {\n                subscriber.next(arrayLike[i]);\n            }\n            subscriber.complete();\n        }\n    };\n    return ArrayLikeObservable;\n}(Observable_1.Observable));\nexports.ArrayLikeObservable = ArrayLikeObservable;\n//# sourceMappingURL=ArrayLikeObservable.js.map\n\n/***/ }),\n/* 72 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = __webpack_require__(2);\nvar Notification_1 = __webpack_require__(73);\n/**\n *\n * Re-emits all notifications from source Observable with specified scheduler.\n *\n * <span class=\"informal\">Ensure a specific scheduler is used, from outside of an Observable.</span>\n *\n * `observeOn` is an operator that accepts a scheduler as a first parameter, which will be used to reschedule\n * notifications emitted by the source Observable. It might be useful, if you do not have control over\n * internal scheduler of a given Observable, but want to control when its values are emitted nevertheless.\n *\n * Returned Observable emits the same notifications (nexted values, complete and error events) as the source Observable,\n * but rescheduled with provided scheduler. Note that this doesn't mean that source Observables internal\n * scheduler will be replaced in any way. Original scheduler still will be used, but when the source Observable emits\n * notification, it will be immediately scheduled again - this time with scheduler passed to `observeOn`.\n * An anti-pattern would be calling `observeOn` on Observable that emits lots of values synchronously, to split\n * that emissions into asynchronous chunks. For this to happen, scheduler would have to be passed into the source\n * Observable directly (usually into the operator that creates it). `observeOn` simply delays notifications a\n * little bit more, to ensure that they are emitted at expected moments.\n *\n * As a matter of fact, `observeOn` accepts second parameter, which specifies in milliseconds with what delay notifications\n * will be emitted. The main difference between {@link delay} operator and `observeOn` is that `observeOn`\n * will delay all notifications - including error notifications - while `delay` will pass through error\n * from source Observable immediately when it is emitted. In general it is highly recommended to use `delay` operator\n * for any kind of delaying of values in the stream, while using `observeOn` to specify which scheduler should be used\n * for notification emissions in general.\n *\n * @example <caption>Ensure values in subscribe are called just before browser repaint.</caption>\n * const intervals = Rx.Observable.interval(10); // Intervals are scheduled\n *                                               // with async scheduler by default...\n *\n * intervals\n * .observeOn(Rx.Scheduler.animationFrame)       // ...but we will observe on animationFrame\n * .subscribe(val => {                           // scheduler to ensure smooth animation.\n *   someDiv.style.height = val + 'px';\n * });\n *\n * @see {@link delay}\n *\n * @param {IScheduler} scheduler Scheduler that will be used to reschedule notifications from source Observable.\n * @param {number} [delay] Number of milliseconds that states with what delay every notification should be rescheduled.\n * @return {Observable<T>} Observable that emits the same notifications as the source Observable,\n * but with provided scheduler.\n *\n * @method observeOn\n * @owner Observable\n */\nfunction observeOn(scheduler, delay) {\n    if (delay === void 0) { delay = 0; }\n    return this.lift(new ObserveOnOperator(scheduler, delay));\n}\nexports.observeOn = observeOn;\nvar ObserveOnOperator = (function () {\n    function ObserveOnOperator(scheduler, delay) {\n        if (delay === void 0) { delay = 0; }\n        this.scheduler = scheduler;\n        this.delay = delay;\n    }\n    ObserveOnOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ObserveOnSubscriber(subscriber, this.scheduler, this.delay));\n    };\n    return ObserveOnOperator;\n}());\nexports.ObserveOnOperator = ObserveOnOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ObserveOnSubscriber = (function (_super) {\n    __extends(ObserveOnSubscriber, _super);\n    function ObserveOnSubscriber(destination, scheduler, delay) {\n        if (delay === void 0) { delay = 0; }\n        _super.call(this, destination);\n        this.scheduler = scheduler;\n        this.delay = delay;\n    }\n    ObserveOnSubscriber.dispatch = function (arg) {\n        var notification = arg.notification, destination = arg.destination;\n        notification.observe(destination);\n        this.unsubscribe();\n    };\n    ObserveOnSubscriber.prototype.scheduleMessage = function (notification) {\n        this.add(this.scheduler.schedule(ObserveOnSubscriber.dispatch, this.delay, new ObserveOnMessage(notification, this.destination)));\n    };\n    ObserveOnSubscriber.prototype._next = function (value) {\n        this.scheduleMessage(Notification_1.Notification.createNext(value));\n    };\n    ObserveOnSubscriber.prototype._error = function (err) {\n        this.scheduleMessage(Notification_1.Notification.createError(err));\n    };\n    ObserveOnSubscriber.prototype._complete = function () {\n        this.scheduleMessage(Notification_1.Notification.createComplete());\n    };\n    return ObserveOnSubscriber;\n}(Subscriber_1.Subscriber));\nexports.ObserveOnSubscriber = ObserveOnSubscriber;\nvar ObserveOnMessage = (function () {\n    function ObserveOnMessage(notification, destination) {\n        this.notification = notification;\n        this.destination = destination;\n    }\n    return ObserveOnMessage;\n}());\nexports.ObserveOnMessage = ObserveOnMessage;\n//# sourceMappingURL=observeOn.js.map\n\n/***/ }),\n/* 73 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar Observable_1 = __webpack_require__(0);\n/**\n * Represents a push-based event or value that an {@link Observable} can emit.\n * This class is particularly useful for operators that manage notifications,\n * like {@link materialize}, {@link dematerialize}, {@link observeOn}, and\n * others. Besides wrapping the actual delivered value, it also annotates it\n * with metadata of, for instance, what type of push message it is (`next`,\n * `error`, or `complete`).\n *\n * @see {@link materialize}\n * @see {@link dematerialize}\n * @see {@link observeOn}\n *\n * @class Notification<T>\n */\nvar Notification = (function () {\n    function Notification(kind, value, error) {\n        this.kind = kind;\n        this.value = value;\n        this.error = error;\n        this.hasValue = kind === 'N';\n    }\n    /**\n     * Delivers to the given `observer` the value wrapped by this Notification.\n     * @param {Observer} observer\n     * @return\n     */\n    Notification.prototype.observe = function (observer) {\n        switch (this.kind) {\n            case 'N':\n                return observer.next && observer.next(this.value);\n            case 'E':\n                return observer.error && observer.error(this.error);\n            case 'C':\n                return observer.complete && observer.complete();\n        }\n    };\n    /**\n     * Given some {@link Observer} callbacks, deliver the value represented by the\n     * current Notification to the correctly corresponding callback.\n     * @param {function(value: T): void} next An Observer `next` callback.\n     * @param {function(err: any): void} [error] An Observer `error` callback.\n     * @param {function(): void} [complete] An Observer `complete` callback.\n     * @return {any}\n     */\n    Notification.prototype.do = function (next, error, complete) {\n        var kind = this.kind;\n        switch (kind) {\n            case 'N':\n                return next && next(this.value);\n            case 'E':\n                return error && error(this.error);\n            case 'C':\n                return complete && complete();\n        }\n    };\n    /**\n     * Takes an Observer or its individual callback functions, and calls `observe`\n     * or `do` methods accordingly.\n     * @param {Observer|function(value: T): void} nextOrObserver An Observer or\n     * the `next` callback.\n     * @param {function(err: any): void} [error] An Observer `error` callback.\n     * @param {function(): void} [complete] An Observer `complete` callback.\n     * @return {any}\n     */\n    Notification.prototype.accept = function (nextOrObserver, error, complete) {\n        if (nextOrObserver && typeof nextOrObserver.next === 'function') {\n            return this.observe(nextOrObserver);\n        }\n        else {\n            return this.do(nextOrObserver, error, complete);\n        }\n    };\n    /**\n     * Returns a simple Observable that just delivers the notification represented\n     * by this Notification instance.\n     * @return {any}\n     */\n    Notification.prototype.toObservable = function () {\n        var kind = this.kind;\n        switch (kind) {\n            case 'N':\n                return Observable_1.Observable.of(this.value);\n            case 'E':\n                return Observable_1.Observable.throw(this.error);\n            case 'C':\n                return Observable_1.Observable.empty();\n        }\n        throw new Error('unexpected notification kind value');\n    };\n    /**\n     * A shortcut to create a Notification instance of the type `next` from a\n     * given value.\n     * @param {T} value The `next` value.\n     * @return {Notification<T>} The \"next\" Notification representing the\n     * argument.\n     */\n    Notification.createNext = function (value) {\n        if (typeof value !== 'undefined') {\n            return new Notification('N', value);\n        }\n        return Notification.undefinedValueNotification;\n    };\n    /**\n     * A shortcut to create a Notification instance of the type `error` from a\n     * given error.\n     * @param {any} [err] The `error` error.\n     * @return {Notification<T>} The \"error\" Notification representing the\n     * argument.\n     */\n    Notification.createError = function (err) {\n        return new Notification('E', undefined, err);\n    };\n    /**\n     * A shortcut to create a Notification instance of the type `complete`.\n     * @return {Notification<any>} The valueless \"complete\" Notification.\n     */\n    Notification.createComplete = function () {\n        return Notification.completeNotification;\n    };\n    Notification.completeNotification = new Notification('C');\n    Notification.undefinedValueNotification = new Notification('N', undefined);\n    return Notification;\n}());\nexports.Notification = Notification;\n//# sourceMappingURL=Notification.js.map\n\n/***/ }),\n/* 74 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = __webpack_require__(2);\n/**\n * Returns an Observable that emits whether or not every item of the source satisfies the condition specified.\n *\n * @example <caption>A simple example emitting true if all elements are less than 5, false otherwise</caption>\n *  Observable.of(1, 2, 3, 4, 5, 6)\n *     .every(x => x < 5)\n *     .subscribe(x => console.log(x)); // -> false\n *\n * @param {function} predicate A function for determining if an item meets a specified condition.\n * @param {any} [thisArg] Optional object to use for `this` in the callback.\n * @return {Observable} An Observable of booleans that determines if all items of the source Observable meet the condition specified.\n * @method every\n * @owner Observable\n */\nfunction every(predicate, thisArg) {\n    return this.lift(new EveryOperator(predicate, thisArg, this));\n}\nexports.every = every;\nvar EveryOperator = (function () {\n    function EveryOperator(predicate, thisArg, source) {\n        this.predicate = predicate;\n        this.thisArg = thisArg;\n        this.source = source;\n    }\n    EveryOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new EverySubscriber(observer, this.predicate, this.thisArg, this.source));\n    };\n    return EveryOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar EverySubscriber = (function (_super) {\n    __extends(EverySubscriber, _super);\n    function EverySubscriber(destination, predicate, thisArg, source) {\n        _super.call(this, destination);\n        this.predicate = predicate;\n        this.thisArg = thisArg;\n        this.source = source;\n        this.index = 0;\n        this.thisArg = thisArg || this;\n    }\n    EverySubscriber.prototype.notifyComplete = function (everyValueMatch) {\n        this.destination.next(everyValueMatch);\n        this.destination.complete();\n    };\n    EverySubscriber.prototype._next = function (value) {\n        var result = false;\n        try {\n            result = this.predicate.call(this.thisArg, value, this.index++, this.source);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (!result) {\n            this.notifyComplete(false);\n        }\n    };\n    EverySubscriber.prototype._complete = function () {\n        this.notifyComplete(true);\n    };\n    return EverySubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=every.js.map\n\n/***/ }),\n/* 75 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = __webpack_require__(2);\nvar EmptyError_1 = __webpack_require__(19);\n/**\n * Emits only the first value (or the first value that meets some condition)\n * emitted by the source Observable.\n *\n * <span class=\"informal\">Emits only the first value. Or emits only the first\n * value that passes some test.</span>\n *\n * <img src=\"./img/first.png\" width=\"100%\">\n *\n * If called with no arguments, `first` emits the first value of the source\n * Observable, then completes. If called with a `predicate` function, `first`\n * emits the first value of the source that matches the specified condition. It\n * may also take a `resultSelector` function to produce the output value from\n * the input value, and a `defaultValue` to emit in case the source completes\n * before it is able to emit a valid value. Throws an error if `defaultValue`\n * was not provided and a matching element is not found.\n *\n * @example <caption>Emit only the first click that happens on the DOM</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.first();\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Emits the first click that happens on a DIV</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.first(ev => ev.target.tagName === 'DIV');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link filter}\n * @see {@link find}\n * @see {@link take}\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} [predicate]\n * An optional function called with each item to test for condition matching.\n * @param {function(value: T, index: number): R} [resultSelector] A function to\n * produce the value on the output Observable based on the values\n * and the indices of the source Observable. The arguments passed to this\n * function are:\n * - `value`: the value that was emitted on the source.\n * - `index`: the \"index\" of the value from the source.\n * @param {R} [defaultValue] The default value emitted in case no valid value\n * was found on the source.\n * @return {Observable<T|R>} An Observable of the first item that matches the\n * condition.\n * @method first\n * @owner Observable\n */\nfunction first(predicate, resultSelector, defaultValue) {\n    return this.lift(new FirstOperator(predicate, resultSelector, defaultValue, this));\n}\nexports.first = first;\nvar FirstOperator = (function () {\n    function FirstOperator(predicate, resultSelector, defaultValue, source) {\n        this.predicate = predicate;\n        this.resultSelector = resultSelector;\n        this.defaultValue = defaultValue;\n        this.source = source;\n    }\n    FirstOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new FirstSubscriber(observer, this.predicate, this.resultSelector, this.defaultValue, this.source));\n    };\n    return FirstOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar FirstSubscriber = (function (_super) {\n    __extends(FirstSubscriber, _super);\n    function FirstSubscriber(destination, predicate, resultSelector, defaultValue, source) {\n        _super.call(this, destination);\n        this.predicate = predicate;\n        this.resultSelector = resultSelector;\n        this.defaultValue = defaultValue;\n        this.source = source;\n        this.index = 0;\n        this.hasCompleted = false;\n        this._emitted = false;\n    }\n    FirstSubscriber.prototype._next = function (value) {\n        var index = this.index++;\n        if (this.predicate) {\n            this._tryPredicate(value, index);\n        }\n        else {\n            this._emit(value, index);\n        }\n    };\n    FirstSubscriber.prototype._tryPredicate = function (value, index) {\n        var result;\n        try {\n            result = this.predicate(value, index, this.source);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (result) {\n            this._emit(value, index);\n        }\n    };\n    FirstSubscriber.prototype._emit = function (value, index) {\n        if (this.resultSelector) {\n            this._tryResultSelector(value, index);\n            return;\n        }\n        this._emitFinal(value);\n    };\n    FirstSubscriber.prototype._tryResultSelector = function (value, index) {\n        var result;\n        try {\n            result = this.resultSelector(value, index);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this._emitFinal(result);\n    };\n    FirstSubscriber.prototype._emitFinal = function (value) {\n        var destination = this.destination;\n        if (!this._emitted) {\n            this._emitted = true;\n            destination.next(value);\n            destination.complete();\n            this.hasCompleted = true;\n        }\n    };\n    FirstSubscriber.prototype._complete = function () {\n        var destination = this.destination;\n        if (!this.hasCompleted && typeof this.defaultValue !== 'undefined') {\n            destination.next(this.defaultValue);\n            destination.complete();\n        }\n        else if (!this.hasCompleted) {\n            destination.error(new EmptyError_1.EmptyError);\n        }\n    };\n    return FirstSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=first.js.map\n\n/***/ }),\n/* 76 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = __webpack_require__(2);\nvar EmptyError_1 = __webpack_require__(19);\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that emits only the last item emitted by the source Observable.\n * It optionally takes a predicate function as a parameter, in which case, rather than emitting\n * the last item from the source Observable, the resulting Observable will emit the last item\n * from the source Observable that satisfies the predicate.\n *\n * <img src=\"./img/last.png\" width=\"100%\">\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * @param {function} predicate - The condition any source emitted item has to satisfy.\n * @return {Observable} An Observable that emits only the last item satisfying the given condition\n * from the source, or an NoSuchElementException if no such items are emitted.\n * @throws - Throws if no items that match the predicate are emitted by the source Observable.\n * @method last\n * @owner Observable\n */\nfunction last(predicate, resultSelector, defaultValue) {\n    return this.lift(new LastOperator(predicate, resultSelector, defaultValue, this));\n}\nexports.last = last;\nvar LastOperator = (function () {\n    function LastOperator(predicate, resultSelector, defaultValue, source) {\n        this.predicate = predicate;\n        this.resultSelector = resultSelector;\n        this.defaultValue = defaultValue;\n        this.source = source;\n    }\n    LastOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new LastSubscriber(observer, this.predicate, this.resultSelector, this.defaultValue, this.source));\n    };\n    return LastOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar LastSubscriber = (function (_super) {\n    __extends(LastSubscriber, _super);\n    function LastSubscriber(destination, predicate, resultSelector, defaultValue, source) {\n        _super.call(this, destination);\n        this.predicate = predicate;\n        this.resultSelector = resultSelector;\n        this.defaultValue = defaultValue;\n        this.source = source;\n        this.hasValue = false;\n        this.index = 0;\n        if (typeof defaultValue !== 'undefined') {\n            this.lastValue = defaultValue;\n            this.hasValue = true;\n        }\n    }\n    LastSubscriber.prototype._next = function (value) {\n        var index = this.index++;\n        if (this.predicate) {\n            this._tryPredicate(value, index);\n        }\n        else {\n            if (this.resultSelector) {\n                this._tryResultSelector(value, index);\n                return;\n            }\n            this.lastValue = value;\n            this.hasValue = true;\n        }\n    };\n    LastSubscriber.prototype._tryPredicate = function (value, index) {\n        var result;\n        try {\n            result = this.predicate(value, index, this.source);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (result) {\n            if (this.resultSelector) {\n                this._tryResultSelector(value, index);\n                return;\n            }\n            this.lastValue = value;\n            this.hasValue = true;\n        }\n    };\n    LastSubscriber.prototype._tryResultSelector = function (value, index) {\n        var result;\n        try {\n            result = this.resultSelector(value, index);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.lastValue = result;\n        this.hasValue = true;\n    };\n    LastSubscriber.prototype._complete = function () {\n        var destination = this.destination;\n        if (this.hasValue) {\n            destination.next(this.lastValue);\n            destination.complete();\n        }\n        else {\n            destination.error(new EmptyError_1.EmptyError);\n        }\n    };\n    return LastSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=last.js.map\n\n/***/ }),\n/* 77 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = __webpack_require__(2);\n/* tslint:enable:max-line-length */\n/**\n * Applies an accumulator function over the source Observable, and returns the\n * accumulated result when the source completes, given an optional seed value.\n *\n * <span class=\"informal\">Combines together all values emitted on the source,\n * using an accumulator function that knows how to join a new source value into\n * the accumulation from the past.</span>\n *\n * <img src=\"./img/reduce.png\" width=\"100%\">\n *\n * Like\n * [Array.prototype.reduce()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce),\n * `reduce` applies an `accumulator` function against an accumulation and each\n * value of the source Observable (from the past) to reduce it to a single\n * value, emitted on the output Observable. Note that `reduce` will only emit\n * one value, only when the source Observable completes. It is equivalent to\n * applying operator {@link scan} followed by operator {@link last}.\n *\n * Returns an Observable that applies a specified `accumulator` function to each\n * item emitted by the source Observable. If a `seed` value is specified, then\n * that value will be used as the initial value for the accumulator. If no seed\n * value is specified, the first item of the source is used as the seed.\n *\n * @example <caption>Count the number of click events that happened in 5 seconds</caption>\n * var clicksInFiveSeconds = Rx.Observable.fromEvent(document, 'click')\n *   .takeUntil(Rx.Observable.interval(5000));\n * var ones = clicksInFiveSeconds.mapTo(1);\n * var seed = 0;\n * var count = ones.reduce((acc, one) => acc + one, seed);\n * count.subscribe(x => console.log(x));\n *\n * @see {@link count}\n * @see {@link expand}\n * @see {@link mergeScan}\n * @see {@link scan}\n *\n * @param {function(acc: R, value: T, index: number): R} accumulator The accumulator function\n * called on each source value.\n * @param {R} [seed] The initial accumulation value.\n * @return {Observable<R>} An Observable that emits a single value that is the\n * result of accumulating the values emitted by the source Observable.\n * @method reduce\n * @owner Observable\n */\nfunction reduce(accumulator, seed) {\n    var hasSeed = false;\n    // providing a seed of `undefined` *should* be valid and trigger\n    // hasSeed! so don't use `seed !== undefined` checks!\n    // For this reason, we have to check it here at the original call site\n    // otherwise inside Operator/Subscriber we won't know if `undefined`\n    // means they didn't provide anything or if they literally provided `undefined`\n    if (arguments.length >= 2) {\n        hasSeed = true;\n    }\n    return this.lift(new ReduceOperator(accumulator, seed, hasSeed));\n}\nexports.reduce = reduce;\nvar ReduceOperator = (function () {\n    function ReduceOperator(accumulator, seed, hasSeed) {\n        if (hasSeed === void 0) { hasSeed = false; }\n        this.accumulator = accumulator;\n        this.seed = seed;\n        this.hasSeed = hasSeed;\n    }\n    ReduceOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ReduceSubscriber(subscriber, this.accumulator, this.seed, this.hasSeed));\n    };\n    return ReduceOperator;\n}());\nexports.ReduceOperator = ReduceOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ReduceSubscriber = (function (_super) {\n    __extends(ReduceSubscriber, _super);\n    function ReduceSubscriber(destination, accumulator, seed, hasSeed) {\n        _super.call(this, destination);\n        this.accumulator = accumulator;\n        this.hasSeed = hasSeed;\n        this.index = 0;\n        this.hasValue = false;\n        this.acc = seed;\n        if (!this.hasSeed) {\n            this.index++;\n        }\n    }\n    ReduceSubscriber.prototype._next = function (value) {\n        if (this.hasValue || (this.hasValue = this.hasSeed)) {\n            this._tryReduce(value);\n        }\n        else {\n            this.acc = value;\n            this.hasValue = true;\n        }\n    };\n    ReduceSubscriber.prototype._tryReduce = function (value) {\n        var result;\n        try {\n            result = this.accumulator(this.acc, value, this.index++);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.acc = result;\n    };\n    ReduceSubscriber.prototype._complete = function () {\n        if (this.hasValue || this.hasSeed) {\n            this.destination.next(this.acc);\n        }\n        this.destination.complete();\n    };\n    return ReduceSubscriber;\n}(Subscriber_1.Subscriber));\nexports.ReduceSubscriber = ReduceSubscriber;\n//# sourceMappingURL=reduce.js.map\n\n/***/ }),\n/* 78 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OuterSubscriber_1 = __webpack_require__(10);\nvar subscribeToResult_1 = __webpack_require__(11);\n/**\n * Catches errors on the observable to be handled by returning a new observable or throwing an error.\n *\n * <img src=\"./img/catch.png\" width=\"100%\">\n *\n * @example <caption>Continues with a different Observable when there's an error</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n * \t   if (n == 4) {\n * \t     throw 'four!';\n *     }\n *\t   return n;\n *   })\n *   .catch(err => Observable.of('I', 'II', 'III', 'IV', 'V'))\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, I, II, III, IV, V\n *\n * @example <caption>Retries the caught source Observable again in case of error, similar to retry() operator</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n * \t   if (n === 4) {\n * \t     throw 'four!';\n *     }\n * \t   return n;\n *   })\n *   .catch((err, caught) => caught)\n *   .take(30)\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, 1, 2, 3, ...\n *\n * @example <caption>Throws a new error when the source Observable throws an error</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n *     if (n == 4) {\n *       throw 'four!';\n *     }\n *     return n;\n *   })\n *   .catch(err => {\n *     throw 'error in source. Details: ' + err;\n *   })\n *   .subscribe(\n *     x => console.log(x),\n *     err => console.log(err)\n *   );\n *   // 1, 2, 3, error in source. Details: four!\n *\n * @param {function} selector a function that takes as arguments `err`, which is the error, and `caught`, which\n *  is the source observable, in case you'd like to \"retry\" that observable by returning it again. Whatever observable\n *  is returned by the `selector` will be used to continue the observable chain.\n * @return {Observable} An observable that originates from either the source or the observable returned by the\n *  catch `selector` function.\n * @method catch\n * @name catch\n * @owner Observable\n */\nfunction _catch(selector) {\n    var operator = new CatchOperator(selector);\n    var caught = this.lift(operator);\n    return (operator.caught = caught);\n}\nexports._catch = _catch;\nvar CatchOperator = (function () {\n    function CatchOperator(selector) {\n        this.selector = selector;\n    }\n    CatchOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new CatchSubscriber(subscriber, this.selector, this.caught));\n    };\n    return CatchOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar CatchSubscriber = (function (_super) {\n    __extends(CatchSubscriber, _super);\n    function CatchSubscriber(destination, selector, caught) {\n        _super.call(this, destination);\n        this.selector = selector;\n        this.caught = caught;\n    }\n    // NOTE: overriding `error` instead of `_error` because we don't want\n    // to have this flag this subscriber as `isStopped`. We can mimic the\n    // behavior of the RetrySubscriber (from the `retry` operator), where\n    // we unsubscribe from our source chain, reset our Subscriber flags,\n    // then subscribe to the selector result.\n    CatchSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var result = void 0;\n            try {\n                result = this.selector(err, this.caught);\n            }\n            catch (err2) {\n                _super.prototype.error.call(this, err2);\n                return;\n            }\n            this._unsubscribeAndRecycle();\n            this.add(subscribeToResult_1.subscribeToResult(this, result));\n        }\n    };\n    return CatchSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=catch.js.map\n\n/***/ }),\n/* 79 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar mergeAll_1 = __webpack_require__(17);\n/* tslint:enable:max-line-length */\n/**\n * Converts a higher-order Observable into a first-order Observable by\n * concatenating the inner Observables in order.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by putting one\n * inner Observable after the other.</span>\n *\n * <img src=\"./img/concatAll.png\" width=\"100%\">\n *\n * Joins every Observable emitted by the source (a higher-order Observable), in\n * a serial fashion. It subscribes to each inner Observable only after the\n * previous inner Observable has completed, and merges all of their values into\n * the returned observable.\n *\n * __Warning:__ If the source Observable emits Observables quickly and\n * endlessly, and the inner Observables it emits generally complete slower than\n * the source emits, you can run into memory issues as the incoming Observables\n * collect in an unbounded buffer.\n *\n * Note: `concatAll` is equivalent to `mergeAll` with concurrency parameter set\n * to `1`.\n *\n * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map(ev => Rx.Observable.interval(1000).take(4));\n * var firstOrder = higherOrder.concatAll();\n * firstOrder.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n *\n * @see {@link combineAll}\n * @see {@link concat}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n * @see {@link exhaust}\n * @see {@link mergeAll}\n * @see {@link switch}\n * @see {@link zipAll}\n *\n * @return {Observable} An Observable emitting values from all the inner\n * Observables concatenated.\n * @method concatAll\n * @owner Observable\n */\nfunction concatAll() {\n    return this.lift(new mergeAll_1.MergeAllOperator(1));\n}\nexports.concatAll = concatAll;\n//# sourceMappingURL=concatAll.js.map\n\n/***/ }),\n/* 80 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<h1>Home</h1>\\r\\n<p>\\r\\n    Welcome to the home page...\\r\\n</p>\";\n\n/***/ }),\n/* 81 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"\\r\\n<h1>Page not found</h1>\";\n\n/***/ }),\n/* 82 */,\n/* 83 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = __webpack_require__(1);\r\nvar RootComponent = /** @class */ (function () {\r\n    function RootComponent() {\r\n    }\r\n    RootComponent = __decorate([\r\n        core_1.Component({\r\n            selector: 'internal-root',\r\n            template: __webpack_require__(84)\r\n        })\r\n    ], RootComponent);\r\n    return RootComponent;\r\n}());\r\nexports.RootComponent = RootComponent;\r\n\n\n/***/ }),\n/* 84 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-2\\\">\\r\\n            <ul class='list-unstyled'>\\r\\n                <li>\\r\\n                    <a routerLink=\\\"/home\\\" routerLinkActive=\\\"active-link\\\">Home</a>\\r\\n                </li>\\r\\n                <li>\\r\\n                    <a routerLink=\\\"/employees\\\" routerLinkActive=\\\"active-link\\\">Employees</a>\\r\\n                </li>\\r\\n            </ul>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-10\\\">\\r\\n            <router-outlet></router-outlet>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\";\n\n/***/ })\n]),[64]);\n\n\n// WEBPACK FOOTER //\n// main-bundle.js","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when an Observable or a sequence was queried but has no\n * elements.\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link single}\n *\n * @class EmptyError\n */\nvar EmptyError = (function (_super) {\n    __extends(EmptyError, _super);\n    function EmptyError() {\n        var err = _super.call(this, 'no elements in sequence');\n        this.name = err.name = 'EmptyError';\n        this.stack = err.stack;\n        this.message = err.message;\n    }\n    return EmptyError;\n}(Error));\nexports.EmptyError = EmptyError;\n//# sourceMappingURL=EmptyError.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/util/EmptyError.js\n// module id = 19\n// module chunks = 2","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar subscribeToResult_1 = require('../util/subscribeToResult');\nvar OuterSubscriber_1 = require('../OuterSubscriber');\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link mergeAll}.</span>\n *\n * <img src=\"./img/mergeMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger.\n *\n * @example <caption>Map and flatten each letter to an Observable ticking every 1 second</caption>\n * var letters = Rx.Observable.of('a', 'b', 'c');\n * var result = letters.mergeMap(x =>\n *   Rx.Observable.interval(1000).map(i => x+i)\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // a0\n * // b0\n * // c0\n * // a1\n * // b1\n * // c1\n * // continues to list a,b,c with respective ascending integers\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and merging the results of the Observables obtained\n * from this transformation.\n * @method mergeMap\n * @owner Observable\n */\nfunction mergeMap(project, resultSelector, concurrent) {\n    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n    if (typeof resultSelector === 'number') {\n        concurrent = resultSelector;\n        resultSelector = null;\n    }\n    return this.lift(new MergeMapOperator(project, resultSelector, concurrent));\n}\nexports.mergeMap = mergeMap;\nvar MergeMapOperator = (function () {\n    function MergeMapOperator(project, resultSelector, concurrent) {\n        if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n        this.project = project;\n        this.resultSelector = resultSelector;\n        this.concurrent = concurrent;\n    }\n    MergeMapOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new MergeMapSubscriber(observer, this.project, this.resultSelector, this.concurrent));\n    };\n    return MergeMapOperator;\n}());\nexports.MergeMapOperator = MergeMapOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar MergeMapSubscriber = (function (_super) {\n    __extends(MergeMapSubscriber, _super);\n    function MergeMapSubscriber(destination, project, resultSelector, concurrent) {\n        if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n        _super.call(this, destination);\n        this.project = project;\n        this.resultSelector = resultSelector;\n        this.concurrent = concurrent;\n        this.hasCompleted = false;\n        this.buffer = [];\n        this.active = 0;\n        this.index = 0;\n    }\n    MergeMapSubscriber.prototype._next = function (value) {\n        if (this.active < this.concurrent) {\n            this._tryNext(value);\n        }\n        else {\n            this.buffer.push(value);\n        }\n    };\n    MergeMapSubscriber.prototype._tryNext = function (value) {\n        var result;\n        var index = this.index++;\n        try {\n            result = this.project(value, index);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.active++;\n        this._innerSub(result, value, index);\n    };\n    MergeMapSubscriber.prototype._innerSub = function (ish, value, index) {\n        this.add(subscribeToResult_1.subscribeToResult(this, ish, value, index));\n    };\n    MergeMapSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (this.active === 0 && this.buffer.length === 0) {\n            this.destination.complete();\n        }\n    };\n    MergeMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        if (this.resultSelector) {\n            this._notifyResultSelector(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        else {\n            this.destination.next(innerValue);\n        }\n    };\n    MergeMapSubscriber.prototype._notifyResultSelector = function (outerValue, innerValue, outerIndex, innerIndex) {\n        var result;\n        try {\n            result = this.resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    MergeMapSubscriber.prototype.notifyComplete = function (innerSub) {\n        var buffer = this.buffer;\n        this.remove(innerSub);\n        this.active--;\n        if (buffer.length > 0) {\n            this._next(buffer.shift());\n        }\n        else if (this.active === 0 && this.hasCompleted) {\n            this.destination.complete();\n        }\n    };\n    return MergeMapSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\nexports.MergeMapSubscriber = MergeMapSubscriber;\n//# sourceMappingURL=mergeMap.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/operator/mergeMap.js\n// module id = 35\n// module chunks = 2","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'internal-home',\r\n    template: require('./home.component.html')\r\n})\r\nexport class HomeComponent {\r\n   \r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular-router-loader/src!./components/root-module/home/home.component.ts","import { Component } from '@angular/core';\r\n\r\n@Component({   \r\n    template: require('./page-not-found.component.html')\r\n})\r\nexport class PageNotFoundComponent { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular-router-loader/src!./components/root-module/page-not-found/page-not-found.component.ts","import * as tslib_1 from \"tslib\";\n/**\n * @license Angular v4.4.4\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\nimport { APP_BASE_HREF, HashLocationStrategy, LOCATION_INITIALIZED, Location, LocationStrategy, PathLocationStrategy, PlatformLocation } from '@angular/common';\nimport { ANALYZE_FOR_ENTRY_COMPONENTS, APP_BOOTSTRAP_LISTENER, APP_INITIALIZER, ApplicationRef, Attribute, ChangeDetectorRef, Compiler, ComponentFactoryResolver, ContentChildren, Directive, ElementRef, EventEmitter, HostBinding, HostListener, Inject, Injectable, InjectionToken, Injector, Input, NgModule, NgModuleFactory, NgModuleFactoryLoader, NgModuleRef, NgProbeToken, Optional, Output, Renderer2, SkipSelf, SystemJsNgModuleLoader, Version, ViewContainerRef, isDevMode, ɵisObservable, ɵisPromise } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Subject } from 'rxjs/Subject';\nimport { from } from 'rxjs/observable/from';\nimport { of } from 'rxjs/observable/of';\nimport { concatMap } from 'rxjs/operator/concatMap';\nimport { every } from 'rxjs/operator/every';\nimport { first } from 'rxjs/operator/first';\nimport { last } from 'rxjs/operator/last';\nimport { map } from 'rxjs/operator/map';\nimport { mergeMap } from 'rxjs/operator/mergeMap';\nimport { reduce } from 'rxjs/operator/reduce';\nimport { Observable } from 'rxjs/Observable';\nimport { _catch } from 'rxjs/operator/catch';\nimport { concatAll } from 'rxjs/operator/concatAll';\nimport { EmptyError } from 'rxjs/util/EmptyError';\nimport { fromPromise } from 'rxjs/observable/fromPromise';\nimport { mergeAll } from 'rxjs/operator/mergeAll';\nimport { ɵgetDOM } from '@angular/platform-browser';\nimport { filter } from 'rxjs/operator/filter';\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Represents an event triggered when a navigation starts.\n *\n * \\@stable\n */\nvar NavigationStart = (function () {\n    /**\n     * @param {?} id\n     * @param {?} url\n     */\n    function NavigationStart(id, url) {\n        this.id = id;\n        this.url = url;\n    }\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    NavigationStart.prototype.toString = function () { return \"NavigationStart(id: \" + this.id + \", url: '\" + this.url + \"')\"; };\n    return NavigationStart;\n}());\n/**\n * \\@whatItDoes Represents an event triggered when a navigation ends successfully.\n *\n * \\@stable\n */\nvar NavigationEnd = (function () {\n    /**\n     * @param {?} id\n     * @param {?} url\n     * @param {?} urlAfterRedirects\n     */\n    function NavigationEnd(id, url, urlAfterRedirects) {\n        this.id = id;\n        this.url = url;\n        this.urlAfterRedirects = urlAfterRedirects;\n    }\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    NavigationEnd.prototype.toString = function () {\n        return \"NavigationEnd(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"')\";\n    };\n    return NavigationEnd;\n}());\n/**\n * \\@whatItDoes Represents an event triggered when a navigation is canceled.\n *\n * \\@stable\n */\nvar NavigationCancel = (function () {\n    /**\n     * @param {?} id\n     * @param {?} url\n     * @param {?} reason\n     */\n    function NavigationCancel(id, url, reason) {\n        this.id = id;\n        this.url = url;\n        this.reason = reason;\n    }\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    NavigationCancel.prototype.toString = function () { return \"NavigationCancel(id: \" + this.id + \", url: '\" + this.url + \"')\"; };\n    return NavigationCancel;\n}());\n/**\n * \\@whatItDoes Represents an event triggered when a navigation fails due to an unexpected error.\n *\n * \\@stable\n */\nvar NavigationError = (function () {\n    /**\n     * @param {?} id\n     * @param {?} url\n     * @param {?} error\n     */\n    function NavigationError(id, url, error) {\n        this.id = id;\n        this.url = url;\n        this.error = error;\n    }\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    NavigationError.prototype.toString = function () {\n        return \"NavigationError(id: \" + this.id + \", url: '\" + this.url + \"', error: \" + this.error + \")\";\n    };\n    return NavigationError;\n}());\n/**\n * \\@whatItDoes Represents an event triggered when routes are recognized.\n *\n * \\@stable\n */\nvar RoutesRecognized = (function () {\n    /**\n     * @param {?} id\n     * @param {?} url\n     * @param {?} urlAfterRedirects\n     * @param {?} state\n     */\n    function RoutesRecognized(id, url, urlAfterRedirects, state) {\n        this.id = id;\n        this.url = url;\n        this.urlAfterRedirects = urlAfterRedirects;\n        this.state = state;\n    }\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    RoutesRecognized.prototype.toString = function () {\n        return \"RoutesRecognized(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n    };\n    return RoutesRecognized;\n}());\n/**\n * \\@whatItDoes Represents an event triggered before lazy loading a route config.\n *\n * \\@experimental\n */\nvar RouteConfigLoadStart = (function () {\n    /**\n     * @param {?} route\n     */\n    function RouteConfigLoadStart(route) {\n        this.route = route;\n    }\n    /**\n     * @return {?}\n     */\n    RouteConfigLoadStart.prototype.toString = function () { return \"RouteConfigLoadStart(path: \" + this.route.path + \")\"; };\n    return RouteConfigLoadStart;\n}());\n/**\n * \\@whatItDoes Represents an event triggered when a route has been lazy loaded.\n *\n * \\@experimental\n */\nvar RouteConfigLoadEnd = (function () {\n    /**\n     * @param {?} route\n     */\n    function RouteConfigLoadEnd(route) {\n        this.route = route;\n    }\n    /**\n     * @return {?}\n     */\n    RouteConfigLoadEnd.prototype.toString = function () { return \"RouteConfigLoadEnd(path: \" + this.route.path + \")\"; };\n    return RouteConfigLoadEnd;\n}());\n/**\n * \\@whatItDoes Represents the start of the Guard phase of routing.\n *\n * \\@experimental\n */\nvar GuardsCheckStart = (function () {\n    /**\n     * @param {?} id\n     * @param {?} url\n     * @param {?} urlAfterRedirects\n     * @param {?} state\n     */\n    function GuardsCheckStart(id, url, urlAfterRedirects, state) {\n        this.id = id;\n        this.url = url;\n        this.urlAfterRedirects = urlAfterRedirects;\n        this.state = state;\n    }\n    /**\n     * @return {?}\n     */\n    GuardsCheckStart.prototype.toString = function () {\n        return \"GuardsCheckStart(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n    };\n    return GuardsCheckStart;\n}());\n/**\n * \\@whatItDoes Represents the end of the Guard phase of routing.\n *\n * \\@experimental\n */\nvar GuardsCheckEnd = (function () {\n    /**\n     * @param {?} id\n     * @param {?} url\n     * @param {?} urlAfterRedirects\n     * @param {?} state\n     * @param {?} shouldActivate\n     */\n    function GuardsCheckEnd(id, url, urlAfterRedirects, state, shouldActivate) {\n        this.id = id;\n        this.url = url;\n        this.urlAfterRedirects = urlAfterRedirects;\n        this.state = state;\n        this.shouldActivate = shouldActivate;\n    }\n    /**\n     * @return {?}\n     */\n    GuardsCheckEnd.prototype.toString = function () {\n        return \"GuardsCheckEnd(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \", shouldActivate: \" + this.shouldActivate + \")\";\n    };\n    return GuardsCheckEnd;\n}());\n/**\n * \\@whatItDoes Represents the start of the Resolve phase of routing. The timing of this\n * event may change, thus it's experimental. In the current iteration it will run\n * in the \"resolve\" phase whether there's things to resolve or not. In the future this\n * behavior may change to only run when there are things to be resolved.\n *\n * \\@experimental\n */\nvar ResolveStart = (function () {\n    /**\n     * @param {?} id\n     * @param {?} url\n     * @param {?} urlAfterRedirects\n     * @param {?} state\n     */\n    function ResolveStart(id, url, urlAfterRedirects, state) {\n        this.id = id;\n        this.url = url;\n        this.urlAfterRedirects = urlAfterRedirects;\n        this.state = state;\n    }\n    /**\n     * @return {?}\n     */\n    ResolveStart.prototype.toString = function () {\n        return \"ResolveStart(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n    };\n    return ResolveStart;\n}());\n/**\n * \\@whatItDoes Represents the end of the Resolve phase of routing. See note on\n * {\\@link ResolveStart} for use of this experimental API.\n *\n * \\@experimental\n */\nvar ResolveEnd = (function () {\n    /**\n     * @param {?} id\n     * @param {?} url\n     * @param {?} urlAfterRedirects\n     * @param {?} state\n     */\n    function ResolveEnd(id, url, urlAfterRedirects, state) {\n        this.id = id;\n        this.url = url;\n        this.urlAfterRedirects = urlAfterRedirects;\n        this.state = state;\n    }\n    /**\n     * @return {?}\n     */\n    ResolveEnd.prototype.toString = function () {\n        return \"ResolveEnd(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n    };\n    return ResolveEnd;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Name of the primary outlet.\n *\n * \\@stable\n */\nvar PRIMARY_OUTLET = 'primary';\nvar ParamsAsMap = (function () {\n    /**\n     * @param {?} params\n     */\n    function ParamsAsMap(params) {\n        this.params = params || {};\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ParamsAsMap.prototype.has = function (name) { return this.params.hasOwnProperty(name); };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ParamsAsMap.prototype.get = function (name) {\n        if (this.has(name)) {\n            var /** @type {?} */ v = this.params[name];\n            return Array.isArray(v) ? v[0] : v;\n        }\n        return null;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ParamsAsMap.prototype.getAll = function (name) {\n        if (this.has(name)) {\n            var /** @type {?} */ v = this.params[name];\n            return Array.isArray(v) ? v : [v];\n        }\n        return [];\n    };\n    Object.defineProperty(ParamsAsMap.prototype, \"keys\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return Object.keys(this.params); },\n        enumerable: true,\n        configurable: true\n    });\n    return ParamsAsMap;\n}());\n/**\n * Convert a {\\@link Params} instance to a {\\@link ParamMap}.\n *\n * \\@stable\n * @param {?} params\n * @return {?}\n */\nfunction convertToParamMap(params) {\n    return new ParamsAsMap(params);\n}\nvar NAVIGATION_CANCELING_ERROR = 'ngNavigationCancelingError';\n/**\n * @param {?} message\n * @return {?}\n */\nfunction navigationCancelingError(message) {\n    var /** @type {?} */ error = Error('NavigationCancelingError: ' + message);\n    ((error))[NAVIGATION_CANCELING_ERROR] = true;\n    return error;\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction isNavigationCancelingError(error) {\n    return ((error))[NAVIGATION_CANCELING_ERROR];\n}\n/**\n * @param {?} segments\n * @param {?} segmentGroup\n * @param {?} route\n * @return {?}\n */\nfunction defaultUrlMatcher(segments, segmentGroup, route) {\n    var /** @type {?} */ parts = ((route.path)).split('/');\n    if (parts.length > segments.length) {\n        // The actual URL is shorter than the config, no match\n        return null;\n    }\n    if (route.pathMatch === 'full' &&\n        (segmentGroup.hasChildren() || parts.length < segments.length)) {\n        // The config is longer than the actual URL but we are looking for a full match, return null\n        return null;\n    }\n    var /** @type {?} */ posParams = {};\n    // Check each config part against the actual URL\n    for (var /** @type {?} */ index = 0; index < parts.length; index++) {\n        var /** @type {?} */ part = parts[index];\n        var /** @type {?} */ segment = segments[index];\n        var /** @type {?} */ isParameter = part.startsWith(':');\n        if (isParameter) {\n            posParams[part.substring(1)] = segment;\n        }\n        else if (part !== segment.path) {\n            // The actual URL part does not match the config, no match\n            return null;\n        }\n    }\n    return { consumed: segments.slice(0, parts.length), posParams: posParams };\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar LoadedRouterConfig = (function () {\n    /**\n     * @param {?} routes\n     * @param {?} module\n     */\n    function LoadedRouterConfig(routes, module) {\n        this.routes = routes;\n        this.module = module;\n    }\n    return LoadedRouterConfig;\n}());\n/**\n * @param {?} config\n * @param {?=} parentPath\n * @return {?}\n */\nfunction validateConfig(config, parentPath) {\n    if (parentPath === void 0) { parentPath = ''; }\n    // forEach doesn't iterate undefined values\n    for (var /** @type {?} */ i = 0; i < config.length; i++) {\n        var /** @type {?} */ route = config[i];\n        var /** @type {?} */ fullPath = getFullPath(parentPath, route);\n        validateNode(route, fullPath);\n    }\n}\n/**\n * @param {?} route\n * @param {?} fullPath\n * @return {?}\n */\nfunction validateNode(route, fullPath) {\n    if (!route) {\n        throw new Error(\"\\n      Invalid configuration of route '\" + fullPath + \"': Encountered undefined route.\\n      The reason might be an extra comma.\\n\\n      Example:\\n      const routes: Routes = [\\n        { path: '', redirectTo: '/dashboard', pathMatch: 'full' },\\n        { path: 'dashboard',  component: DashboardComponent },, << two commas\\n        { path: 'detail/:id', component: HeroDetailComponent }\\n      ];\\n    \");\n    }\n    if (Array.isArray(route)) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': Array cannot be specified\");\n    }\n    if (!route.component && (route.outlet && route.outlet !== PRIMARY_OUTLET)) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': a componentless route cannot have a named outlet set\");\n    }\n    if (route.redirectTo && route.children) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': redirectTo and children cannot be used together\");\n    }\n    if (route.redirectTo && route.loadChildren) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': redirectTo and loadChildren cannot be used together\");\n    }\n    if (route.children && route.loadChildren) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': children and loadChildren cannot be used together\");\n    }\n    if (route.redirectTo && route.component) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': redirectTo and component cannot be used together\");\n    }\n    if (route.path && route.matcher) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': path and matcher cannot be used together\");\n    }\n    if (route.redirectTo === void 0 && !route.component && !route.children && !route.loadChildren) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"'. One of the following must be provided: component, redirectTo, children or loadChildren\");\n    }\n    if (route.path === void 0 && route.matcher === void 0) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': routes must have either a path or a matcher specified\");\n    }\n    if (typeof route.path === 'string' && route.path.charAt(0) === '/') {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': path cannot start with a slash\");\n    }\n    if (route.path === '' && route.redirectTo !== void 0 && route.pathMatch === void 0) {\n        var /** @type {?} */ exp = \"The default value of 'pathMatch' is 'prefix', but often the intent is to use 'full'.\";\n        throw new Error(\"Invalid configuration of route '{path: \\\"\" + fullPath + \"\\\", redirectTo: \\\"\" + route.redirectTo + \"\\\"}': please provide 'pathMatch'. \" + exp);\n    }\n    if (route.pathMatch !== void 0 && route.pathMatch !== 'full' && route.pathMatch !== 'prefix') {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': pathMatch can only be set to 'prefix' or 'full'\");\n    }\n    if (route.children) {\n        validateConfig(route.children, fullPath);\n    }\n}\n/**\n * @param {?} parentPath\n * @param {?} currentRoute\n * @return {?}\n */\nfunction getFullPath(parentPath, currentRoute) {\n    if (!currentRoute) {\n        return parentPath;\n    }\n    if (!parentPath && !currentRoute.path) {\n        return '';\n    }\n    else if (parentPath && !currentRoute.path) {\n        return parentPath + \"/\";\n    }\n    else if (!parentPath && currentRoute.path) {\n        return currentRoute.path;\n    }\n    else {\n        return parentPath + \"/\" + currentRoute.path;\n    }\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction shallowEqualArrays(a, b) {\n    if (a.length !== b.length)\n        return false;\n    for (var /** @type {?} */ i = 0; i < a.length; ++i) {\n        if (!shallowEqual(a[i], b[i]))\n            return false;\n    }\n    return true;\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction shallowEqual(a, b) {\n    var /** @type {?} */ k1 = Object.keys(a);\n    var /** @type {?} */ k2 = Object.keys(b);\n    if (k1.length != k2.length) {\n        return false;\n    }\n    var /** @type {?} */ key;\n    for (var /** @type {?} */ i = 0; i < k1.length; i++) {\n        key = k1[i];\n        if (a[key] !== b[key]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * @template T\n * @param {?} arr\n * @return {?}\n */\nfunction flatten(arr) {\n    return Array.prototype.concat.apply([], arr);\n}\n/**\n * @template T\n * @param {?} a\n * @return {?}\n */\nfunction last$1(a) {\n    return a.length > 0 ? a[a.length - 1] : null;\n}\n/**\n * @param {?} bools\n * @return {?}\n */\n/**\n * @template K, V\n * @param {?} map\n * @param {?} callback\n * @return {?}\n */\nfunction forEach(map$$1, callback) {\n    for (var /** @type {?} */ prop in map$$1) {\n        if (map$$1.hasOwnProperty(prop)) {\n            callback(map$$1[prop], prop);\n        }\n    }\n}\n/**\n * @template A, B\n * @param {?} obj\n * @param {?} fn\n * @return {?}\n */\nfunction waitForMap(obj, fn) {\n    if (Object.keys(obj).length === 0) {\n        return of({});\n    }\n    var /** @type {?} */ waitHead = [];\n    var /** @type {?} */ waitTail = [];\n    var /** @type {?} */ res = {};\n    forEach(obj, function (a, k) {\n        var /** @type {?} */ mapped = map.call(fn(k, a), function (r) { return res[k] = r; });\n        if (k === PRIMARY_OUTLET) {\n            waitHead.push(mapped);\n        }\n        else {\n            waitTail.push(mapped);\n        }\n    });\n    var /** @type {?} */ concat$ = concatAll.call(of.apply(void 0, waitHead.concat(waitTail)));\n    var /** @type {?} */ last$ = last.call(concat$);\n    return map.call(last$, function () { return res; });\n}\n/**\n * @param {?} observables\n * @return {?}\n */\nfunction andObservables(observables) {\n    var /** @type {?} */ merged$ = mergeAll.call(observables);\n    return every.call(merged$, function (result) { return result === true; });\n}\n/**\n * @template T\n * @param {?} value\n * @return {?}\n */\nfunction wrapIntoObservable(value) {\n    if (ɵisObservable(value)) {\n        return value;\n    }\n    if (ɵisPromise(value)) {\n        // Use `Promise.resolve()` to wrap promise-like instances.\n        // Required ie when a Resolver returns a AngularJS `$q` promise to correctly trigger the\n        // change detection.\n        return fromPromise(Promise.resolve(value));\n    }\n    return of(/** @type {?} */ (value));\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @return {?}\n */\nfunction createEmptyUrlTree() {\n    return new UrlTree(new UrlSegmentGroup([], {}), {}, null);\n}\n/**\n * @param {?} container\n * @param {?} containee\n * @param {?} exact\n * @return {?}\n */\nfunction containsTree(container, containee, exact) {\n    if (exact) {\n        return equalQueryParams(container.queryParams, containee.queryParams) &&\n            equalSegmentGroups(container.root, containee.root);\n    }\n    return containsQueryParams(container.queryParams, containee.queryParams) &&\n        containsSegmentGroup(container.root, containee.root);\n}\n/**\n * @param {?} container\n * @param {?} containee\n * @return {?}\n */\nfunction equalQueryParams(container, containee) {\n    return shallowEqual(container, containee);\n}\n/**\n * @param {?} container\n * @param {?} containee\n * @return {?}\n */\nfunction equalSegmentGroups(container, containee) {\n    if (!equalPath(container.segments, containee.segments))\n        return false;\n    if (container.numberOfChildren !== containee.numberOfChildren)\n        return false;\n    for (var /** @type {?} */ c in containee.children) {\n        if (!container.children[c])\n            return false;\n        if (!equalSegmentGroups(container.children[c], containee.children[c]))\n            return false;\n    }\n    return true;\n}\n/**\n * @param {?} container\n * @param {?} containee\n * @return {?}\n */\nfunction containsQueryParams(container, containee) {\n    return Object.keys(containee).length <= Object.keys(container).length &&\n        Object.keys(containee).every(function (key) { return containee[key] === container[key]; });\n}\n/**\n * @param {?} container\n * @param {?} containee\n * @return {?}\n */\nfunction containsSegmentGroup(container, containee) {\n    return containsSegmentGroupHelper(container, containee, containee.segments);\n}\n/**\n * @param {?} container\n * @param {?} containee\n * @param {?} containeePaths\n * @return {?}\n */\nfunction containsSegmentGroupHelper(container, containee, containeePaths) {\n    if (container.segments.length > containeePaths.length) {\n        var /** @type {?} */ current = container.segments.slice(0, containeePaths.length);\n        if (!equalPath(current, containeePaths))\n            return false;\n        if (containee.hasChildren())\n            return false;\n        return true;\n    }\n    else if (container.segments.length === containeePaths.length) {\n        if (!equalPath(container.segments, containeePaths))\n            return false;\n        for (var /** @type {?} */ c in containee.children) {\n            if (!container.children[c])\n                return false;\n            if (!containsSegmentGroup(container.children[c], containee.children[c]))\n                return false;\n        }\n        return true;\n    }\n    else {\n        var /** @type {?} */ current = containeePaths.slice(0, container.segments.length);\n        var /** @type {?} */ next = containeePaths.slice(container.segments.length);\n        if (!equalPath(container.segments, current))\n            return false;\n        if (!container.children[PRIMARY_OUTLET])\n            return false;\n        return containsSegmentGroupHelper(container.children[PRIMARY_OUTLET], containee, next);\n    }\n}\n/**\n * \\@whatItDoes Represents the parsed URL.\n *\n * \\@howToUse\n *\n * ```\n * \\@Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const tree: UrlTree =\n *       router.parseUrl('/team/33/(user/victor//support:help)?debug=true#fragment');\n *     const f = tree.fragment; // return 'fragment'\n *     const q = tree.queryParams; // returns {debug: 'true'}\n *     const g: UrlSegmentGroup = tree.root.children[PRIMARY_OUTLET];\n *     const s: UrlSegment[] = g.segments; // returns 2 segments 'team' and '33'\n *     g.children[PRIMARY_OUTLET].segments; // returns 2 segments 'user' and 'victor'\n *     g.children['support'].segments; // return 1 segment 'help'\n *   }\n * }\n * ```\n *\n * \\@description\n *\n * Since a router state is a tree, and the URL is nothing but a serialized state, the URL is a\n * serialized tree.\n * UrlTree is a data structure that provides a lot of affordances in dealing with URLs\n *\n * \\@stable\n */\nvar UrlTree = (function () {\n    /**\n     * \\@internal\n     * @param {?} root\n     * @param {?} queryParams\n     * @param {?} fragment\n     */\n    function UrlTree(root, queryParams, fragment) {\n        this.root = root;\n        this.queryParams = queryParams;\n        this.fragment = fragment;\n    }\n    Object.defineProperty(UrlTree.prototype, \"queryParamMap\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            if (!this._queryParamMap) {\n                this._queryParamMap = convertToParamMap(this.queryParams);\n            }\n            return this._queryParamMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    UrlTree.prototype.toString = function () { return DEFAULT_SERIALIZER.serialize(this); };\n    return UrlTree;\n}());\n/**\n * \\@whatItDoes Represents the parsed URL segment group.\n *\n * See {\\@link UrlTree} for more information.\n *\n * \\@stable\n */\nvar UrlSegmentGroup = (function () {\n    /**\n     * @param {?} segments\n     * @param {?} children\n     */\n    function UrlSegmentGroup(segments, children) {\n        var _this = this;\n        this.segments = segments;\n        this.children = children;\n        /**\n         * The parent node in the url tree\n         */\n        this.parent = null;\n        forEach(children, function (v, k) { return v.parent = _this; });\n    }\n    /**\n     * Whether the segment has child segments\n     * @return {?}\n     */\n    UrlSegmentGroup.prototype.hasChildren = function () { return this.numberOfChildren > 0; };\n    Object.defineProperty(UrlSegmentGroup.prototype, \"numberOfChildren\", {\n        /**\n         * Number of child segments\n         * @return {?}\n         */\n        get: function () { return Object.keys(this.children).length; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    UrlSegmentGroup.prototype.toString = function () { return serializePaths(this); };\n    return UrlSegmentGroup;\n}());\n/**\n * \\@whatItDoes Represents a single URL segment.\n *\n * \\@howToUse\n *\n * ```\n * \\@Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const tree: UrlTree = router.parseUrl('/team;id=33');\n *     const g: UrlSegmentGroup = tree.root.children[PRIMARY_OUTLET];\n *     const s: UrlSegment[] = g.segments;\n *     s[0].path; // returns 'team'\n *     s[0].parameters; // returns {id: 33}\n *   }\n * }\n * ```\n *\n * \\@description\n *\n * A UrlSegment is a part of a URL between the two slashes. It contains a path and the matrix\n * parameters associated with the segment.\n *\n * \\@stable\n */\nvar UrlSegment = (function () {\n    /**\n     * @param {?} path\n     * @param {?} parameters\n     */\n    function UrlSegment(path, parameters) {\n        this.path = path;\n        this.parameters = parameters;\n    }\n    Object.defineProperty(UrlSegment.prototype, \"parameterMap\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            if (!this._parameterMap) {\n                this._parameterMap = convertToParamMap(this.parameters);\n            }\n            return this._parameterMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    UrlSegment.prototype.toString = function () { return serializePath(this); };\n    return UrlSegment;\n}());\n/**\n * @param {?} as\n * @param {?} bs\n * @return {?}\n */\nfunction equalSegments(as, bs) {\n    return equalPath(as, bs) && as.every(function (a, i) { return shallowEqual(a.parameters, bs[i].parameters); });\n}\n/**\n * @param {?} as\n * @param {?} bs\n * @return {?}\n */\nfunction equalPath(as, bs) {\n    if (as.length !== bs.length)\n        return false;\n    return as.every(function (a, i) { return a.path === bs[i].path; });\n}\n/**\n * @template T\n * @param {?} segment\n * @param {?} fn\n * @return {?}\n */\nfunction mapChildrenIntoArray(segment, fn) {\n    var /** @type {?} */ res = [];\n    forEach(segment.children, function (child, childOutlet) {\n        if (childOutlet === PRIMARY_OUTLET) {\n            res = res.concat(fn(child, childOutlet));\n        }\n    });\n    forEach(segment.children, function (child, childOutlet) {\n        if (childOutlet !== PRIMARY_OUTLET) {\n            res = res.concat(fn(child, childOutlet));\n        }\n    });\n    return res;\n}\n/**\n * \\@whatItDoes Serializes and deserializes a URL string into a URL tree.\n *\n * \\@description The url serialization strategy is customizable. You can\n * make all URLs case insensitive by providing a custom UrlSerializer.\n *\n * See {\\@link DefaultUrlSerializer} for an example of a URL serializer.\n *\n * \\@stable\n * @abstract\n */\nvar UrlSerializer = (function () {\n    function UrlSerializer() {\n    }\n    /**\n     * Parse a url into a {\\@link UrlTree}\n     * @abstract\n     * @param {?} url\n     * @return {?}\n     */\n    UrlSerializer.prototype.parse = function (url) { };\n    /**\n     * Converts a {\\@link UrlTree} into a url\n     * @abstract\n     * @param {?} tree\n     * @return {?}\n     */\n    UrlSerializer.prototype.serialize = function (tree) { };\n    return UrlSerializer;\n}());\n/**\n * \\@whatItDoes A default implementation of the {\\@link UrlSerializer}.\n *\n * \\@description\n *\n * Example URLs:\n *\n * ```\n * /inbox/33(popup:compose)\n * /inbox/33;open=true/messages/44\n * ```\n *\n * DefaultUrlSerializer uses parentheses to serialize secondary segments (e.g., popup:compose), the\n * colon syntax to specify the outlet, and the ';parameter=value' syntax (e.g., open=true) to\n * specify route specific parameters.\n *\n * \\@stable\n */\nvar DefaultUrlSerializer = (function () {\n    function DefaultUrlSerializer() {\n    }\n    /**\n     * Parses a url into a {\\@link UrlTree}\n     * @param {?} url\n     * @return {?}\n     */\n    DefaultUrlSerializer.prototype.parse = function (url) {\n        var /** @type {?} */ p = new UrlParser(url);\n        return new UrlTree(p.parseRootSegment(), p.parseQueryParams(), p.parseFragment());\n    };\n    /**\n     * Converts a {\\@link UrlTree} into a url\n     * @param {?} tree\n     * @return {?}\n     */\n    DefaultUrlSerializer.prototype.serialize = function (tree) {\n        var /** @type {?} */ segment = \"/\" + serializeSegment(tree.root, true);\n        var /** @type {?} */ query = serializeQueryParams(tree.queryParams);\n        var /** @type {?} */ fragment = typeof tree.fragment === \"string\" ? \"#\" + encodeURI(/** @type {?} */ ((tree.fragment))) : '';\n        return \"\" + segment + query + fragment;\n    };\n    return DefaultUrlSerializer;\n}());\nvar DEFAULT_SERIALIZER = new DefaultUrlSerializer();\n/**\n * @param {?} segment\n * @return {?}\n */\nfunction serializePaths(segment) {\n    return segment.segments.map(function (p) { return serializePath(p); }).join('/');\n}\n/**\n * @param {?} segment\n * @param {?} root\n * @return {?}\n */\nfunction serializeSegment(segment, root) {\n    if (!segment.hasChildren()) {\n        return serializePaths(segment);\n    }\n    if (root) {\n        var /** @type {?} */ primary = segment.children[PRIMARY_OUTLET] ?\n            serializeSegment(segment.children[PRIMARY_OUTLET], false) :\n            '';\n        var /** @type {?} */ children_1 = [];\n        forEach(segment.children, function (v, k) {\n            if (k !== PRIMARY_OUTLET) {\n                children_1.push(k + \":\" + serializeSegment(v, false));\n            }\n        });\n        return children_1.length > 0 ? primary + \"(\" + children_1.join('//') + \")\" : primary;\n    }\n    else {\n        var /** @type {?} */ children = mapChildrenIntoArray(segment, function (v, k) {\n            if (k === PRIMARY_OUTLET) {\n                return [serializeSegment(segment.children[PRIMARY_OUTLET], false)];\n            }\n            return [k + \":\" + serializeSegment(v, false)];\n        });\n        return serializePaths(segment) + \"/(\" + children.join('//') + \")\";\n    }\n}\n/**\n * This method is intended for encoding *key* or *value* parts of query component. We need a custom\n * method because encodeURIComponent is too aggressive and encodes stuff that doesn't have to be\n * encoded per http://tools.ietf.org/html/rfc3986:\n *    query         = *( pchar / \"/\" / \"?\" )\n *    pchar         = unreserved / pct-encoded / sub-delims / \":\" / \"\\@\"\n *    unreserved    = ALPHA / DIGIT / \"-\" / \".\" / \"_\" / \"~\"\n *    pct-encoded   = \"%\" HEXDIG HEXDIG\n *    sub-delims    = \"!\" / \"$\" / \"&\" / \"'\" / \"(\" / \")\"\n *                     / \"*\" / \"+\" / \",\" / \";\" / \"=\"\n * @param {?} s\n * @return {?}\n */\nfunction encode(s) {\n    return encodeURIComponent(s)\n        .replace(/%40/g, '@')\n        .replace(/%3A/gi, ':')\n        .replace(/%24/g, '$')\n        .replace(/%2C/gi, ',')\n        .replace(/%3B/gi, ';');\n}\n/**\n * @param {?} s\n * @return {?}\n */\nfunction decode(s) {\n    return decodeURIComponent(s);\n}\n/**\n * @param {?} path\n * @return {?}\n */\nfunction serializePath(path) {\n    return \"\" + encode(path.path) + serializeParams(path.parameters);\n}\n/**\n * @param {?} params\n * @return {?}\n */\nfunction serializeParams(params) {\n    return Object.keys(params).map(function (key) { return \";\" + encode(key) + \"=\" + encode(params[key]); }).join('');\n}\n/**\n * @param {?} params\n * @return {?}\n */\nfunction serializeQueryParams(params) {\n    var /** @type {?} */ strParams = Object.keys(params).map(function (name) {\n        var /** @type {?} */ value = params[name];\n        return Array.isArray(value) ? value.map(function (v) { return encode(name) + \"=\" + encode(v); }).join('&') :\n            encode(name) + \"=\" + encode(value);\n    });\n    return strParams.length ? \"?\" + strParams.join(\"&\") : '';\n}\nvar SEGMENT_RE = /^[^\\/()?;=&#]+/;\n/**\n * @param {?} str\n * @return {?}\n */\nfunction matchSegments(str) {\n    var /** @type {?} */ match = str.match(SEGMENT_RE);\n    return match ? match[0] : '';\n}\nvar QUERY_PARAM_RE = /^[^=?&#]+/;\n/**\n * @param {?} str\n * @return {?}\n */\nfunction matchQueryParams(str) {\n    var /** @type {?} */ match = str.match(QUERY_PARAM_RE);\n    return match ? match[0] : '';\n}\nvar QUERY_PARAM_VALUE_RE = /^[^?&#]+/;\n/**\n * @param {?} str\n * @return {?}\n */\nfunction matchUrlQueryParamValue(str) {\n    var /** @type {?} */ match = str.match(QUERY_PARAM_VALUE_RE);\n    return match ? match[0] : '';\n}\nvar UrlParser = (function () {\n    /**\n     * @param {?} url\n     */\n    function UrlParser(url) {\n        this.url = url;\n        this.remaining = url;\n    }\n    /**\n     * @return {?}\n     */\n    UrlParser.prototype.parseRootSegment = function () {\n        this.consumeOptional('/');\n        if (this.remaining === '' || this.peekStartsWith('?') || this.peekStartsWith('#')) {\n            return new UrlSegmentGroup([], {});\n        }\n        // The root segment group never has segments\n        return new UrlSegmentGroup([], this.parseChildren());\n    };\n    /**\n     * @return {?}\n     */\n    UrlParser.prototype.parseQueryParams = function () {\n        var /** @type {?} */ params = {};\n        if (this.consumeOptional('?')) {\n            do {\n                this.parseQueryParam(params);\n            } while (this.consumeOptional('&'));\n        }\n        return params;\n    };\n    /**\n     * @return {?}\n     */\n    UrlParser.prototype.parseFragment = function () {\n        return this.consumeOptional('#') ? decodeURI(this.remaining) : null;\n    };\n    /**\n     * @return {?}\n     */\n    UrlParser.prototype.parseChildren = function () {\n        if (this.remaining === '') {\n            return {};\n        }\n        this.consumeOptional('/');\n        var /** @type {?} */ segments = [];\n        if (!this.peekStartsWith('(')) {\n            segments.push(this.parseSegment());\n        }\n        while (this.peekStartsWith('/') && !this.peekStartsWith('//') && !this.peekStartsWith('/(')) {\n            this.capture('/');\n            segments.push(this.parseSegment());\n        }\n        var /** @type {?} */ children = {};\n        if (this.peekStartsWith('/(')) {\n            this.capture('/');\n            children = this.parseParens(true);\n        }\n        var /** @type {?} */ res = {};\n        if (this.peekStartsWith('(')) {\n            res = this.parseParens(false);\n        }\n        if (segments.length > 0 || Object.keys(children).length > 0) {\n            res[PRIMARY_OUTLET] = new UrlSegmentGroup(segments, children);\n        }\n        return res;\n    };\n    /**\n     * @return {?}\n     */\n    UrlParser.prototype.parseSegment = function () {\n        var /** @type {?} */ path = matchSegments(this.remaining);\n        if (path === '' && this.peekStartsWith(';')) {\n            throw new Error(\"Empty path url segment cannot have parameters: '\" + this.remaining + \"'.\");\n        }\n        this.capture(path);\n        return new UrlSegment(decode(path), this.parseMatrixParams());\n    };\n    /**\n     * @return {?}\n     */\n    UrlParser.prototype.parseMatrixParams = function () {\n        var /** @type {?} */ params = {};\n        while (this.consumeOptional(';')) {\n            this.parseParam(params);\n        }\n        return params;\n    };\n    /**\n     * @param {?} params\n     * @return {?}\n     */\n    UrlParser.prototype.parseParam = function (params) {\n        var /** @type {?} */ key = matchSegments(this.remaining);\n        if (!key) {\n            return;\n        }\n        this.capture(key);\n        var /** @type {?} */ value = '';\n        if (this.consumeOptional('=')) {\n            var /** @type {?} */ valueMatch = matchSegments(this.remaining);\n            if (valueMatch) {\n                value = valueMatch;\n                this.capture(value);\n            }\n        }\n        params[decode(key)] = decode(value);\n    };\n    /**\n     * @param {?} params\n     * @return {?}\n     */\n    UrlParser.prototype.parseQueryParam = function (params) {\n        var /** @type {?} */ key = matchQueryParams(this.remaining);\n        if (!key) {\n            return;\n        }\n        this.capture(key);\n        var /** @type {?} */ value = '';\n        if (this.consumeOptional('=')) {\n            var /** @type {?} */ valueMatch = matchUrlQueryParamValue(this.remaining);\n            if (valueMatch) {\n                value = valueMatch;\n                this.capture(value);\n            }\n        }\n        var /** @type {?} */ decodedKey = decode(key);\n        var /** @type {?} */ decodedVal = decode(value);\n        if (params.hasOwnProperty(decodedKey)) {\n            // Append to existing values\n            var /** @type {?} */ currentVal = params[decodedKey];\n            if (!Array.isArray(currentVal)) {\n                currentVal = [currentVal];\n                params[decodedKey] = currentVal;\n            }\n            currentVal.push(decodedVal);\n        }\n        else {\n            // Create a new value\n            params[decodedKey] = decodedVal;\n        }\n    };\n    /**\n     * @param {?} allowPrimary\n     * @return {?}\n     */\n    UrlParser.prototype.parseParens = function (allowPrimary) {\n        var /** @type {?} */ segments = {};\n        this.capture('(');\n        while (!this.consumeOptional(')') && this.remaining.length > 0) {\n            var /** @type {?} */ path = matchSegments(this.remaining);\n            var /** @type {?} */ next = this.remaining[path.length];\n            // if is is not one of these characters, then the segment was unescaped\n            // or the group was not closed\n            if (next !== '/' && next !== ')' && next !== ';') {\n                throw new Error(\"Cannot parse url '\" + this.url + \"'\");\n            }\n            var /** @type {?} */ outletName = ((undefined));\n            if (path.indexOf(':') > -1) {\n                outletName = path.substr(0, path.indexOf(':'));\n                this.capture(outletName);\n                this.capture(':');\n            }\n            else if (allowPrimary) {\n                outletName = PRIMARY_OUTLET;\n            }\n            var /** @type {?} */ children = this.parseChildren();\n            segments[outletName] = Object.keys(children).length === 1 ? children[PRIMARY_OUTLET] :\n                new UrlSegmentGroup([], children);\n            this.consumeOptional('//');\n        }\n        return segments;\n    };\n    /**\n     * @param {?} str\n     * @return {?}\n     */\n    UrlParser.prototype.peekStartsWith = function (str) { return this.remaining.startsWith(str); };\n    /**\n     * @param {?} str\n     * @return {?}\n     */\n    UrlParser.prototype.consumeOptional = function (str) {\n        if (this.peekStartsWith(str)) {\n            this.remaining = this.remaining.substring(str.length);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} str\n     * @return {?}\n     */\n    UrlParser.prototype.capture = function (str) {\n        if (!this.consumeOptional(str)) {\n            throw new Error(\"Expected \\\"\" + str + \"\\\".\");\n        }\n    };\n    return UrlParser;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NoMatch = (function () {\n    /**\n     * @param {?=} segmentGroup\n     */\n    function NoMatch(segmentGroup) {\n        this.segmentGroup = segmentGroup || null;\n    }\n    return NoMatch;\n}());\nvar AbsoluteRedirect = (function () {\n    /**\n     * @param {?} urlTree\n     */\n    function AbsoluteRedirect(urlTree) {\n        this.urlTree = urlTree;\n    }\n    return AbsoluteRedirect;\n}());\n/**\n * @param {?} segmentGroup\n * @return {?}\n */\nfunction noMatch(segmentGroup) {\n    return new Observable(function (obs) { return obs.error(new NoMatch(segmentGroup)); });\n}\n/**\n * @param {?} newTree\n * @return {?}\n */\nfunction absoluteRedirect(newTree) {\n    return new Observable(function (obs) { return obs.error(new AbsoluteRedirect(newTree)); });\n}\n/**\n * @param {?} redirectTo\n * @return {?}\n */\nfunction namedOutletsRedirect(redirectTo) {\n    return new Observable(function (obs) { return obs.error(new Error(\"Only absolute redirects can have named outlets. redirectTo: '\" + redirectTo + \"'\")); });\n}\n/**\n * @param {?} route\n * @return {?}\n */\nfunction canLoadFails(route) {\n    return new Observable(function (obs) { return obs.error(navigationCancelingError(\"Cannot load children because the guard of the route \\\"path: '\" + route.path + \"'\\\" returned false\")); });\n}\n/**\n * Returns the `UrlTree` with the redirection applied.\n *\n * Lazy modules are loaded along the way.\n * @param {?} moduleInjector\n * @param {?} configLoader\n * @param {?} urlSerializer\n * @param {?} urlTree\n * @param {?} config\n * @return {?}\n */\nfunction applyRedirects(moduleInjector, configLoader, urlSerializer, urlTree, config) {\n    return new ApplyRedirects(moduleInjector, configLoader, urlSerializer, urlTree, config).apply();\n}\nvar ApplyRedirects = (function () {\n    /**\n     * @param {?} moduleInjector\n     * @param {?} configLoader\n     * @param {?} urlSerializer\n     * @param {?} urlTree\n     * @param {?} config\n     */\n    function ApplyRedirects(moduleInjector, configLoader, urlSerializer, urlTree, config) {\n        this.configLoader = configLoader;\n        this.urlSerializer = urlSerializer;\n        this.urlTree = urlTree;\n        this.config = config;\n        this.allowRedirects = true;\n        this.ngModule = moduleInjector.get(NgModuleRef);\n    }\n    /**\n     * @return {?}\n     */\n    ApplyRedirects.prototype.apply = function () {\n        var _this = this;\n        var /** @type {?} */ expanded$ = this.expandSegmentGroup(this.ngModule, this.config, this.urlTree.root, PRIMARY_OUTLET);\n        var /** @type {?} */ urlTrees$ = map.call(expanded$, function (rootSegmentGroup) { return _this.createUrlTree(rootSegmentGroup, _this.urlTree.queryParams, /** @type {?} */ ((_this.urlTree.fragment))); });\n        return _catch.call(urlTrees$, function (e) {\n            if (e instanceof AbsoluteRedirect) {\n                // after an absolute redirect we do not apply any more redirects!\n                _this.allowRedirects = false;\n                // we need to run matching, so we can fetch all lazy-loaded modules\n                return _this.match(e.urlTree);\n            }\n            if (e instanceof NoMatch) {\n                throw _this.noMatchError(e);\n            }\n            throw e;\n        });\n    };\n    /**\n     * @param {?} tree\n     * @return {?}\n     */\n    ApplyRedirects.prototype.match = function (tree) {\n        var _this = this;\n        var /** @type {?} */ expanded$ = this.expandSegmentGroup(this.ngModule, this.config, tree.root, PRIMARY_OUTLET);\n        var /** @type {?} */ mapped$ = map.call(expanded$, function (rootSegmentGroup) { return _this.createUrlTree(rootSegmentGroup, tree.queryParams, /** @type {?} */ ((tree.fragment))); });\n        return _catch.call(mapped$, function (e) {\n            if (e instanceof NoMatch) {\n                throw _this.noMatchError(e);\n            }\n            throw e;\n        });\n    };\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ApplyRedirects.prototype.noMatchError = function (e) {\n        return new Error(\"Cannot match any routes. URL Segment: '\" + e.segmentGroup + \"'\");\n    };\n    /**\n     * @param {?} rootCandidate\n     * @param {?} queryParams\n     * @param {?} fragment\n     * @return {?}\n     */\n    ApplyRedirects.prototype.createUrlTree = function (rootCandidate, queryParams, fragment) {\n        var /** @type {?} */ root = rootCandidate.segments.length > 0 ?\n            new UrlSegmentGroup([], (_a = {}, _a[PRIMARY_OUTLET] = rootCandidate, _a)) :\n            rootCandidate;\n        return new UrlTree(root, queryParams, fragment);\n        var _a;\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} routes\n     * @param {?} segmentGroup\n     * @param {?} outlet\n     * @return {?}\n     */\n    ApplyRedirects.prototype.expandSegmentGroup = function (ngModule, routes, segmentGroup, outlet) {\n        if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n            return map.call(this.expandChildren(ngModule, routes, segmentGroup), function (children) { return new UrlSegmentGroup([], children); });\n        }\n        return this.expandSegment(ngModule, segmentGroup, routes, segmentGroup.segments, outlet, true);\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} routes\n     * @param {?} segmentGroup\n     * @return {?}\n     */\n    ApplyRedirects.prototype.expandChildren = function (ngModule, routes, segmentGroup) {\n        var _this = this;\n        return waitForMap(segmentGroup.children, function (childOutlet, child) { return _this.expandSegmentGroup(ngModule, routes, child, childOutlet); });\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} segmentGroup\n     * @param {?} routes\n     * @param {?} segments\n     * @param {?} outlet\n     * @param {?} allowRedirects\n     * @return {?}\n     */\n    ApplyRedirects.prototype.expandSegment = function (ngModule, segmentGroup, routes, segments, outlet, allowRedirects) {\n        var _this = this;\n        var /** @type {?} */ routes$ = of.apply(void 0, routes);\n        var /** @type {?} */ processedRoutes$ = map.call(routes$, function (r) {\n            var /** @type {?} */ expanded$ = _this.expandSegmentAgainstRoute(ngModule, segmentGroup, routes, r, segments, outlet, allowRedirects);\n            return _catch.call(expanded$, function (e) {\n                if (e instanceof NoMatch) {\n                    return of(null);\n                }\n                throw e;\n            });\n        });\n        var /** @type {?} */ concattedProcessedRoutes$ = concatAll.call(processedRoutes$);\n        var /** @type {?} */ first$ = first.call(concattedProcessedRoutes$, function (s) { return !!s; });\n        return _catch.call(first$, function (e, _) {\n            if (e instanceof EmptyError) {\n                if (_this.noLeftoversInUrl(segmentGroup, segments, outlet)) {\n                    return of(new UrlSegmentGroup([], {}));\n                }\n                throw new NoMatch(segmentGroup);\n            }\n            throw e;\n        });\n    };\n    /**\n     * @param {?} segmentGroup\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    ApplyRedirects.prototype.noLeftoversInUrl = function (segmentGroup, segments, outlet) {\n        return segments.length === 0 && !segmentGroup.children[outlet];\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} segmentGroup\n     * @param {?} routes\n     * @param {?} route\n     * @param {?} paths\n     * @param {?} outlet\n     * @param {?} allowRedirects\n     * @return {?}\n     */\n    ApplyRedirects.prototype.expandSegmentAgainstRoute = function (ngModule, segmentGroup, routes, route, paths, outlet, allowRedirects) {\n        if (getOutlet(route) !== outlet) {\n            return noMatch(segmentGroup);\n        }\n        if (route.redirectTo === undefined) {\n            return this.matchSegmentAgainstRoute(ngModule, segmentGroup, route, paths);\n        }\n        if (allowRedirects && this.allowRedirects) {\n            return this.expandSegmentAgainstRouteUsingRedirect(ngModule, segmentGroup, routes, route, paths, outlet);\n        }\n        return noMatch(segmentGroup);\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} segmentGroup\n     * @param {?} routes\n     * @param {?} route\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    ApplyRedirects.prototype.expandSegmentAgainstRouteUsingRedirect = function (ngModule, segmentGroup, routes, route, segments, outlet) {\n        if (route.path === '**') {\n            return this.expandWildCardWithParamsAgainstRouteUsingRedirect(ngModule, routes, route, outlet);\n        }\n        return this.expandRegularSegmentAgainstRouteUsingRedirect(ngModule, segmentGroup, routes, route, segments, outlet);\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} routes\n     * @param {?} route\n     * @param {?} outlet\n     * @return {?}\n     */\n    ApplyRedirects.prototype.expandWildCardWithParamsAgainstRouteUsingRedirect = function (ngModule, routes, route, outlet) {\n        var _this = this;\n        var /** @type {?} */ newTree = this.applyRedirectCommands([], /** @type {?} */ ((route.redirectTo)), {});\n        if (((route.redirectTo)).startsWith('/')) {\n            return absoluteRedirect(newTree);\n        }\n        return mergeMap.call(this.lineralizeSegments(route, newTree), function (newSegments) {\n            var /** @type {?} */ group = new UrlSegmentGroup(newSegments, {});\n            return _this.expandSegment(ngModule, group, routes, newSegments, outlet, false);\n        });\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} segmentGroup\n     * @param {?} routes\n     * @param {?} route\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    ApplyRedirects.prototype.expandRegularSegmentAgainstRouteUsingRedirect = function (ngModule, segmentGroup, routes, route, segments, outlet) {\n        var _this = this;\n        var _a = match(segmentGroup, route, segments), matched = _a.matched, consumedSegments = _a.consumedSegments, lastChild = _a.lastChild, positionalParamSegments = _a.positionalParamSegments;\n        if (!matched)\n            return noMatch(segmentGroup);\n        var /** @type {?} */ newTree = this.applyRedirectCommands(consumedSegments, /** @type {?} */ ((route.redirectTo)), /** @type {?} */ (positionalParamSegments));\n        if (((route.redirectTo)).startsWith('/')) {\n            return absoluteRedirect(newTree);\n        }\n        return mergeMap.call(this.lineralizeSegments(route, newTree), function (newSegments) {\n            return _this.expandSegment(ngModule, segmentGroup, routes, newSegments.concat(segments.slice(lastChild)), outlet, false);\n        });\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} rawSegmentGroup\n     * @param {?} route\n     * @param {?} segments\n     * @return {?}\n     */\n    ApplyRedirects.prototype.matchSegmentAgainstRoute = function (ngModule, rawSegmentGroup, route, segments) {\n        var _this = this;\n        if (route.path === '**') {\n            if (route.loadChildren) {\n                return map.call(this.configLoader.load(ngModule.injector, route), function (cfg) {\n                    route._loadedConfig = cfg;\n                    return new UrlSegmentGroup(segments, {});\n                });\n            }\n            return of(new UrlSegmentGroup(segments, {}));\n        }\n        var _a = match(rawSegmentGroup, route, segments), matched = _a.matched, consumedSegments = _a.consumedSegments, lastChild = _a.lastChild;\n        if (!matched)\n            return noMatch(rawSegmentGroup);\n        var /** @type {?} */ rawSlicedSegments = segments.slice(lastChild);\n        var /** @type {?} */ childConfig$ = this.getChildConfig(ngModule, route);\n        return mergeMap.call(childConfig$, function (routerConfig) {\n            var /** @type {?} */ childModule = routerConfig.module;\n            var /** @type {?} */ childConfig = routerConfig.routes;\n            var _a = split(rawSegmentGroup, consumedSegments, rawSlicedSegments, childConfig), segmentGroup = _a.segmentGroup, slicedSegments = _a.slicedSegments;\n            if (slicedSegments.length === 0 && segmentGroup.hasChildren()) {\n                var /** @type {?} */ expanded$_1 = _this.expandChildren(childModule, childConfig, segmentGroup);\n                return map.call(expanded$_1, function (children) { return new UrlSegmentGroup(consumedSegments, children); });\n            }\n            if (childConfig.length === 0 && slicedSegments.length === 0) {\n                return of(new UrlSegmentGroup(consumedSegments, {}));\n            }\n            var /** @type {?} */ expanded$ = _this.expandSegment(childModule, segmentGroup, childConfig, slicedSegments, PRIMARY_OUTLET, true);\n            return map.call(expanded$, function (cs) { return new UrlSegmentGroup(consumedSegments.concat(cs.segments), cs.children); });\n        });\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} route\n     * @return {?}\n     */\n    ApplyRedirects.prototype.getChildConfig = function (ngModule, route) {\n        var _this = this;\n        if (route.children) {\n            // The children belong to the same module\n            return of(new LoadedRouterConfig(route.children, ngModule));\n        }\n        if (route.loadChildren) {\n            // lazy children belong to the loaded module\n            if (route._loadedConfig !== undefined) {\n                return of(route._loadedConfig);\n            }\n            return mergeMap.call(runCanLoadGuard(ngModule.injector, route), function (shouldLoad) {\n                if (shouldLoad) {\n                    return map.call(_this.configLoader.load(ngModule.injector, route), function (cfg) {\n                        route._loadedConfig = cfg;\n                        return cfg;\n                    });\n                }\n                return canLoadFails(route);\n            });\n        }\n        return of(new LoadedRouterConfig([], ngModule));\n    };\n    /**\n     * @param {?} route\n     * @param {?} urlTree\n     * @return {?}\n     */\n    ApplyRedirects.prototype.lineralizeSegments = function (route, urlTree) {\n        var /** @type {?} */ res = [];\n        var /** @type {?} */ c = urlTree.root;\n        while (true) {\n            res = res.concat(c.segments);\n            if (c.numberOfChildren === 0) {\n                return of(res);\n            }\n            if (c.numberOfChildren > 1 || !c.children[PRIMARY_OUTLET]) {\n                return namedOutletsRedirect(/** @type {?} */ ((route.redirectTo)));\n            }\n            c = c.children[PRIMARY_OUTLET];\n        }\n    };\n    /**\n     * @param {?} segments\n     * @param {?} redirectTo\n     * @param {?} posParams\n     * @return {?}\n     */\n    ApplyRedirects.prototype.applyRedirectCommands = function (segments, redirectTo, posParams) {\n        return this.applyRedirectCreatreUrlTree(redirectTo, this.urlSerializer.parse(redirectTo), segments, posParams);\n    };\n    /**\n     * @param {?} redirectTo\n     * @param {?} urlTree\n     * @param {?} segments\n     * @param {?} posParams\n     * @return {?}\n     */\n    ApplyRedirects.prototype.applyRedirectCreatreUrlTree = function (redirectTo, urlTree, segments, posParams) {\n        var /** @type {?} */ newRoot = this.createSegmentGroup(redirectTo, urlTree.root, segments, posParams);\n        return new UrlTree(newRoot, this.createQueryParams(urlTree.queryParams, this.urlTree.queryParams), urlTree.fragment);\n    };\n    /**\n     * @param {?} redirectToParams\n     * @param {?} actualParams\n     * @return {?}\n     */\n    ApplyRedirects.prototype.createQueryParams = function (redirectToParams, actualParams) {\n        var /** @type {?} */ res = {};\n        forEach(redirectToParams, function (v, k) {\n            var /** @type {?} */ copySourceValue = typeof v === 'string' && v.startsWith(':');\n            if (copySourceValue) {\n                var /** @type {?} */ sourceName = v.substring(1);\n                res[k] = actualParams[sourceName];\n            }\n            else {\n                res[k] = v;\n            }\n        });\n        return res;\n    };\n    /**\n     * @param {?} redirectTo\n     * @param {?} group\n     * @param {?} segments\n     * @param {?} posParams\n     * @return {?}\n     */\n    ApplyRedirects.prototype.createSegmentGroup = function (redirectTo, group, segments, posParams) {\n        var _this = this;\n        var /** @type {?} */ updatedSegments = this.createSegments(redirectTo, group.segments, segments, posParams);\n        var /** @type {?} */ children = {};\n        forEach(group.children, function (child, name) {\n            children[name] = _this.createSegmentGroup(redirectTo, child, segments, posParams);\n        });\n        return new UrlSegmentGroup(updatedSegments, children);\n    };\n    /**\n     * @param {?} redirectTo\n     * @param {?} redirectToSegments\n     * @param {?} actualSegments\n     * @param {?} posParams\n     * @return {?}\n     */\n    ApplyRedirects.prototype.createSegments = function (redirectTo, redirectToSegments, actualSegments, posParams) {\n        var _this = this;\n        return redirectToSegments.map(function (s) { return s.path.startsWith(':') ? _this.findPosParam(redirectTo, s, posParams) :\n            _this.findOrReturn(s, actualSegments); });\n    };\n    /**\n     * @param {?} redirectTo\n     * @param {?} redirectToUrlSegment\n     * @param {?} posParams\n     * @return {?}\n     */\n    ApplyRedirects.prototype.findPosParam = function (redirectTo, redirectToUrlSegment, posParams) {\n        var /** @type {?} */ pos = posParams[redirectToUrlSegment.path.substring(1)];\n        if (!pos)\n            throw new Error(\"Cannot redirect to '\" + redirectTo + \"'. Cannot find '\" + redirectToUrlSegment.path + \"'.\");\n        return pos;\n    };\n    /**\n     * @param {?} redirectToUrlSegment\n     * @param {?} actualSegments\n     * @return {?}\n     */\n    ApplyRedirects.prototype.findOrReturn = function (redirectToUrlSegment, actualSegments) {\n        var /** @type {?} */ idx = 0;\n        for (var _i = 0, actualSegments_1 = actualSegments; _i < actualSegments_1.length; _i++) {\n            var s = actualSegments_1[_i];\n            if (s.path === redirectToUrlSegment.path) {\n                actualSegments.splice(idx);\n                return s;\n            }\n            idx++;\n        }\n        return redirectToUrlSegment;\n    };\n    return ApplyRedirects;\n}());\n/**\n * @param {?} moduleInjector\n * @param {?} route\n * @return {?}\n */\nfunction runCanLoadGuard(moduleInjector, route) {\n    var /** @type {?} */ canLoad = route.canLoad;\n    if (!canLoad || canLoad.length === 0)\n        return of(true);\n    var /** @type {?} */ obs = map.call(from(canLoad), function (injectionToken) {\n        var /** @type {?} */ guard = moduleInjector.get(injectionToken);\n        return wrapIntoObservable(guard.canLoad ? guard.canLoad(route) : guard(route));\n    });\n    return andObservables(obs);\n}\n/**\n * @param {?} segmentGroup\n * @param {?} route\n * @param {?} segments\n * @return {?}\n */\nfunction match(segmentGroup, route, segments) {\n    if (route.path === '') {\n        if ((route.pathMatch === 'full') && (segmentGroup.hasChildren() || segments.length > 0)) {\n            return { matched: false, consumedSegments: [], lastChild: 0, positionalParamSegments: {} };\n        }\n        return { matched: true, consumedSegments: [], lastChild: 0, positionalParamSegments: {} };\n    }\n    var /** @type {?} */ matcher = route.matcher || defaultUrlMatcher;\n    var /** @type {?} */ res = matcher(segments, segmentGroup, route);\n    if (!res) {\n        return {\n            matched: false,\n            consumedSegments: /** @type {?} */ ([]),\n            lastChild: 0,\n            positionalParamSegments: {},\n        };\n    }\n    return {\n        matched: true,\n        consumedSegments: /** @type {?} */ ((res.consumed)),\n        lastChild: /** @type {?} */ ((res.consumed.length)),\n        positionalParamSegments: /** @type {?} */ ((res.posParams)),\n    };\n}\n/**\n * @param {?} segmentGroup\n * @param {?} consumedSegments\n * @param {?} slicedSegments\n * @param {?} config\n * @return {?}\n */\nfunction split(segmentGroup, consumedSegments, slicedSegments, config) {\n    if (slicedSegments.length > 0 &&\n        containsEmptyPathRedirectsWithNamedOutlets(segmentGroup, slicedSegments, config)) {\n        var /** @type {?} */ s = new UrlSegmentGroup(consumedSegments, createChildrenForEmptySegments(config, new UrlSegmentGroup(slicedSegments, segmentGroup.children)));\n        return { segmentGroup: mergeTrivialChildren(s), slicedSegments: [] };\n    }\n    if (slicedSegments.length === 0 &&\n        containsEmptyPathRedirects(segmentGroup, slicedSegments, config)) {\n        var /** @type {?} */ s = new UrlSegmentGroup(segmentGroup.segments, addEmptySegmentsToChildrenIfNeeded(segmentGroup, slicedSegments, config, segmentGroup.children));\n        return { segmentGroup: mergeTrivialChildren(s), slicedSegments: slicedSegments };\n    }\n    return { segmentGroup: segmentGroup, slicedSegments: slicedSegments };\n}\n/**\n * @param {?} s\n * @return {?}\n */\nfunction mergeTrivialChildren(s) {\n    if (s.numberOfChildren === 1 && s.children[PRIMARY_OUTLET]) {\n        var /** @type {?} */ c = s.children[PRIMARY_OUTLET];\n        return new UrlSegmentGroup(s.segments.concat(c.segments), c.children);\n    }\n    return s;\n}\n/**\n * @param {?} segmentGroup\n * @param {?} slicedSegments\n * @param {?} routes\n * @param {?} children\n * @return {?}\n */\nfunction addEmptySegmentsToChildrenIfNeeded(segmentGroup, slicedSegments, routes, children) {\n    var /** @type {?} */ res = {};\n    for (var _i = 0, routes_1 = routes; _i < routes_1.length; _i++) {\n        var r = routes_1[_i];\n        if (isEmptyPathRedirect(segmentGroup, slicedSegments, r) && !children[getOutlet(r)]) {\n            res[getOutlet(r)] = new UrlSegmentGroup([], {});\n        }\n    }\n    return Object.assign({}, children, res);\n}\n/**\n * @param {?} routes\n * @param {?} primarySegmentGroup\n * @return {?}\n */\nfunction createChildrenForEmptySegments(routes, primarySegmentGroup) {\n    var /** @type {?} */ res = {};\n    res[PRIMARY_OUTLET] = primarySegmentGroup;\n    for (var _i = 0, routes_2 = routes; _i < routes_2.length; _i++) {\n        var r = routes_2[_i];\n        if (r.path === '' && getOutlet(r) !== PRIMARY_OUTLET) {\n            res[getOutlet(r)] = new UrlSegmentGroup([], {});\n        }\n    }\n    return res;\n}\n/**\n * @param {?} segmentGroup\n * @param {?} segments\n * @param {?} routes\n * @return {?}\n */\nfunction containsEmptyPathRedirectsWithNamedOutlets(segmentGroup, segments, routes) {\n    return routes.some(function (r) { return isEmptyPathRedirect(segmentGroup, segments, r) && getOutlet(r) !== PRIMARY_OUTLET; });\n}\n/**\n * @param {?} segmentGroup\n * @param {?} segments\n * @param {?} routes\n * @return {?}\n */\nfunction containsEmptyPathRedirects(segmentGroup, segments, routes) {\n    return routes.some(function (r) { return isEmptyPathRedirect(segmentGroup, segments, r); });\n}\n/**\n * @param {?} segmentGroup\n * @param {?} segments\n * @param {?} r\n * @return {?}\n */\nfunction isEmptyPathRedirect(segmentGroup, segments, r) {\n    if ((segmentGroup.hasChildren() || segments.length > 0) && r.pathMatch === 'full') {\n        return false;\n    }\n    return r.path === '' && r.redirectTo !== undefined;\n}\n/**\n * @param {?} route\n * @return {?}\n */\nfunction getOutlet(route) {\n    return route.outlet || PRIMARY_OUTLET;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar Tree = (function () {\n    /**\n     * @param {?} root\n     */\n    function Tree(root) {\n        this._root = root;\n    }\n    Object.defineProperty(Tree.prototype, \"root\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._root.value; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * \\@internal\n     * @param {?} t\n     * @return {?}\n     */\n    Tree.prototype.parent = function (t) {\n        var /** @type {?} */ p = this.pathFromRoot(t);\n        return p.length > 1 ? p[p.length - 2] : null;\n    };\n    /**\n     * \\@internal\n     * @param {?} t\n     * @return {?}\n     */\n    Tree.prototype.children = function (t) {\n        var /** @type {?} */ n = findNode(t, this._root);\n        return n ? n.children.map(function (t) { return t.value; }) : [];\n    };\n    /**\n     * \\@internal\n     * @param {?} t\n     * @return {?}\n     */\n    Tree.prototype.firstChild = function (t) {\n        var /** @type {?} */ n = findNode(t, this._root);\n        return n && n.children.length > 0 ? n.children[0].value : null;\n    };\n    /**\n     * \\@internal\n     * @param {?} t\n     * @return {?}\n     */\n    Tree.prototype.siblings = function (t) {\n        var /** @type {?} */ p = findPath(t, this._root);\n        if (p.length < 2)\n            return [];\n        var /** @type {?} */ c = p[p.length - 2].children.map(function (c) { return c.value; });\n        return c.filter(function (cc) { return cc !== t; });\n    };\n    /**\n     * \\@internal\n     * @param {?} t\n     * @return {?}\n     */\n    Tree.prototype.pathFromRoot = function (t) { return findPath(t, this._root).map(function (s) { return s.value; }); };\n    return Tree;\n}());\n/**\n * @template T\n * @param {?} value\n * @param {?} node\n * @return {?}\n */\nfunction findNode(value, node) {\n    if (value === node.value)\n        return node;\n    for (var _i = 0, _a = node.children; _i < _a.length; _i++) {\n        var child = _a[_i];\n        var /** @type {?} */ node_1 = findNode(value, child);\n        if (node_1)\n            return node_1;\n    }\n    return null;\n}\n/**\n * @template T\n * @param {?} value\n * @param {?} node\n * @return {?}\n */\nfunction findPath(value, node) {\n    if (value === node.value)\n        return [node];\n    for (var _i = 0, _a = node.children; _i < _a.length; _i++) {\n        var child = _a[_i];\n        var /** @type {?} */ path = findPath(value, child);\n        if (path.length) {\n            path.unshift(node);\n            return path;\n        }\n    }\n    return [];\n}\nvar TreeNode = (function () {\n    /**\n     * @param {?} value\n     * @param {?} children\n     */\n    function TreeNode(value, children) {\n        this.value = value;\n        this.children = children;\n    }\n    /**\n     * @return {?}\n     */\n    TreeNode.prototype.toString = function () { return \"TreeNode(\" + this.value + \")\"; };\n    return TreeNode;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Represents the state of the router.\n *\n * \\@howToUse\n *\n * ```\n * \\@Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const state: RouterState = router.routerState;\n *     const root: ActivatedRoute = state.root;\n *     const child = root.firstChild;\n *     const id: Observable<string> = child.params.map(p => p.id);\n *     //...\n *   }\n * }\n * ```\n *\n * \\@description\n * RouterState is a tree of activated routes. Every node in this tree knows about the \"consumed\" URL\n * segments, the extracted parameters, and the resolved data.\n *\n * See {\\@link ActivatedRoute} for more information.\n *\n * \\@stable\n */\nvar RouterState = (function (_super) {\n    tslib_1.__extends(RouterState, _super);\n    /**\n     * \\@internal\n     * @param {?} root\n     * @param {?} snapshot\n     */\n    function RouterState(root, snapshot) {\n        var _this = _super.call(this, root) || this;\n        _this.snapshot = snapshot;\n        setRouterState(_this, root);\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    RouterState.prototype.toString = function () { return this.snapshot.toString(); };\n    return RouterState;\n}(Tree));\n/**\n * @param {?} urlTree\n * @param {?} rootComponent\n * @return {?}\n */\nfunction createEmptyState(urlTree, rootComponent) {\n    var /** @type {?} */ snapshot = createEmptyStateSnapshot(urlTree, rootComponent);\n    var /** @type {?} */ emptyUrl = new BehaviorSubject([new UrlSegment('', {})]);\n    var /** @type {?} */ emptyParams = new BehaviorSubject({});\n    var /** @type {?} */ emptyData = new BehaviorSubject({});\n    var /** @type {?} */ emptyQueryParams = new BehaviorSubject({});\n    var /** @type {?} */ fragment = new BehaviorSubject('');\n    var /** @type {?} */ activated = new ActivatedRoute(emptyUrl, emptyParams, emptyQueryParams, fragment, emptyData, PRIMARY_OUTLET, rootComponent, snapshot.root);\n    activated.snapshot = snapshot.root;\n    return new RouterState(new TreeNode(activated, []), snapshot);\n}\n/**\n * @param {?} urlTree\n * @param {?} rootComponent\n * @return {?}\n */\nfunction createEmptyStateSnapshot(urlTree, rootComponent) {\n    var /** @type {?} */ emptyParams = {};\n    var /** @type {?} */ emptyData = {};\n    var /** @type {?} */ emptyQueryParams = {};\n    var /** @type {?} */ fragment = '';\n    var /** @type {?} */ activated = new ActivatedRouteSnapshot([], emptyParams, emptyQueryParams, fragment, emptyData, PRIMARY_OUTLET, rootComponent, null, urlTree.root, -1, {});\n    return new RouterStateSnapshot('', new TreeNode(activated, []));\n}\n/**\n * \\@whatItDoes Contains the information about a route associated with a component loaded in an\n * outlet.\n * An `ActivatedRoute` can also be used to traverse the router state tree.\n *\n * \\@howToUse\n *\n * ```\n * \\@Component({...})\n * class MyComponent {\n *   constructor(route: ActivatedRoute) {\n *     const id: Observable<string> = route.params.map(p => p.id);\n *     const url: Observable<string> = route.url.map(segments => segments.join(''));\n *     // route.data includes both `data` and `resolve`\n *     const user = route.data.map(d => d.user);\n *   }\n * }\n * ```\n *\n * \\@stable\n */\nvar ActivatedRoute = (function () {\n    /**\n     * \\@internal\n     * @param {?} url\n     * @param {?} params\n     * @param {?} queryParams\n     * @param {?} fragment\n     * @param {?} data\n     * @param {?} outlet\n     * @param {?} component\n     * @param {?} futureSnapshot\n     */\n    function ActivatedRoute(url, params, queryParams, fragment, data, outlet, component, futureSnapshot) {\n        this.url = url;\n        this.params = params;\n        this.queryParams = queryParams;\n        this.fragment = fragment;\n        this.data = data;\n        this.outlet = outlet;\n        this.component = component;\n        this._futureSnapshot = futureSnapshot;\n    }\n    Object.defineProperty(ActivatedRoute.prototype, \"routeConfig\", {\n        /**\n         * The configuration used to match this route\n         * @return {?}\n         */\n        get: function () { return this._futureSnapshot.routeConfig; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"root\", {\n        /**\n         * The root of the router state\n         * @return {?}\n         */\n        get: function () { return this._routerState.root; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"parent\", {\n        /**\n         * The parent of this route in the router state tree\n         * @return {?}\n         */\n        get: function () { return this._routerState.parent(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"firstChild\", {\n        /**\n         * The first child of this route in the router state tree\n         * @return {?}\n         */\n        get: function () { return this._routerState.firstChild(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"children\", {\n        /**\n         * The children of this route in the router state tree\n         * @return {?}\n         */\n        get: function () { return this._routerState.children(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"pathFromRoot\", {\n        /**\n         * The path from the root of the router state tree to this route\n         * @return {?}\n         */\n        get: function () { return this._routerState.pathFromRoot(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"paramMap\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            if (!this._paramMap) {\n                this._paramMap = map.call(this.params, function (p) { return convertToParamMap(p); });\n            }\n            return this._paramMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"queryParamMap\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            if (!this._queryParamMap) {\n                this._queryParamMap =\n                    map.call(this.queryParams, function (p) { return convertToParamMap(p); });\n            }\n            return this._queryParamMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ActivatedRoute.prototype.toString = function () {\n        return this.snapshot ? this.snapshot.toString() : \"Future(\" + this._futureSnapshot + \")\";\n    };\n    return ActivatedRoute;\n}());\n/**\n * \\@internal\n * @param {?} route\n * @return {?}\n */\nfunction inheritedParamsDataResolve(route) {\n    var /** @type {?} */ pathToRoot = route.pathFromRoot;\n    var /** @type {?} */ inhertingStartingFrom = pathToRoot.length - 1;\n    while (inhertingStartingFrom >= 1) {\n        var /** @type {?} */ current = pathToRoot[inhertingStartingFrom];\n        var /** @type {?} */ parent = pathToRoot[inhertingStartingFrom - 1];\n        // current route is an empty path => inherits its parent's params and data\n        if (current.routeConfig && current.routeConfig.path === '') {\n            inhertingStartingFrom--;\n            // parent is componentless => current route should inherit its params and data\n        }\n        else if (!parent.component) {\n            inhertingStartingFrom--;\n        }\n        else {\n            break;\n        }\n    }\n    return pathToRoot.slice(inhertingStartingFrom).reduce(function (res, curr) {\n        var /** @type {?} */ params = Object.assign({}, res.params, curr.params);\n        var /** @type {?} */ data = Object.assign({}, res.data, curr.data);\n        var /** @type {?} */ resolve = Object.assign({}, res.resolve, curr._resolvedData);\n        return { params: params, data: data, resolve: resolve };\n    }, /** @type {?} */ ({ params: {}, data: {}, resolve: {} }));\n}\n/**\n * \\@whatItDoes Contains the information about a route associated with a component loaded in an\n * outlet\n * at a particular moment in time. ActivatedRouteSnapshot can also be used to traverse the router\n * state tree.\n *\n * \\@howToUse\n *\n * ```\n * \\@Component({templateUrl:'./my-component.html'})\n * class MyComponent {\n *   constructor(route: ActivatedRoute) {\n *     const id: string = route.snapshot.params.id;\n *     const url: string = route.snapshot.url.join('');\n *     const user = route.snapshot.data.user;\n *   }\n * }\n * ```\n *\n * \\@stable\n */\nvar ActivatedRouteSnapshot = (function () {\n    /**\n     * \\@internal\n     * @param {?} url\n     * @param {?} params\n     * @param {?} queryParams\n     * @param {?} fragment\n     * @param {?} data\n     * @param {?} outlet\n     * @param {?} component\n     * @param {?} routeConfig\n     * @param {?} urlSegment\n     * @param {?} lastPathIndex\n     * @param {?} resolve\n     */\n    function ActivatedRouteSnapshot(url, params, queryParams, fragment, data, outlet, component, routeConfig, urlSegment, lastPathIndex, resolve) {\n        this.url = url;\n        this.params = params;\n        this.queryParams = queryParams;\n        this.fragment = fragment;\n        this.data = data;\n        this.outlet = outlet;\n        this.component = component;\n        this._routeConfig = routeConfig;\n        this._urlSegment = urlSegment;\n        this._lastPathIndex = lastPathIndex;\n        this._resolve = resolve;\n    }\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"routeConfig\", {\n        /**\n         * The configuration used to match this route\n         * @return {?}\n         */\n        get: function () { return this._routeConfig; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"root\", {\n        /**\n         * The root of the router state\n         * @return {?}\n         */\n        get: function () { return this._routerState.root; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"parent\", {\n        /**\n         * The parent of this route in the router state tree\n         * @return {?}\n         */\n        get: function () { return this._routerState.parent(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"firstChild\", {\n        /**\n         * The first child of this route in the router state tree\n         * @return {?}\n         */\n        get: function () { return this._routerState.firstChild(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"children\", {\n        /**\n         * The children of this route in the router state tree\n         * @return {?}\n         */\n        get: function () { return this._routerState.children(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"pathFromRoot\", {\n        /**\n         * The path from the root of the router state tree to this route\n         * @return {?}\n         */\n        get: function () { return this._routerState.pathFromRoot(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"paramMap\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            if (!this._paramMap) {\n                this._paramMap = convertToParamMap(this.params);\n            }\n            return this._paramMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"queryParamMap\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            if (!this._queryParamMap) {\n                this._queryParamMap = convertToParamMap(this.queryParams);\n            }\n            return this._queryParamMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ActivatedRouteSnapshot.prototype.toString = function () {\n        var /** @type {?} */ url = this.url.map(function (segment) { return segment.toString(); }).join('/');\n        var /** @type {?} */ matched = this._routeConfig ? this._routeConfig.path : '';\n        return \"Route(url:'\" + url + \"', path:'\" + matched + \"')\";\n    };\n    return ActivatedRouteSnapshot;\n}());\n/**\n * \\@whatItDoes Represents the state of the router at a moment in time.\n *\n * \\@howToUse\n *\n * ```\n * \\@Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const state: RouterState = router.routerState;\n *     const snapshot: RouterStateSnapshot = state.snapshot;\n *     const root: ActivatedRouteSnapshot = snapshot.root;\n *     const child = root.firstChild;\n *     const id: Observable<string> = child.params.map(p => p.id);\n *     //...\n *   }\n * }\n * ```\n *\n * \\@description\n * RouterStateSnapshot is a tree of activated route snapshots. Every node in this tree knows about\n * the \"consumed\" URL segments, the extracted parameters, and the resolved data.\n *\n * \\@stable\n */\nvar RouterStateSnapshot = (function (_super) {\n    tslib_1.__extends(RouterStateSnapshot, _super);\n    /**\n     * \\@internal\n     * @param {?} url\n     * @param {?} root\n     */\n    function RouterStateSnapshot(url, root) {\n        var _this = _super.call(this, root) || this;\n        _this.url = url;\n        setRouterState(_this, root);\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    RouterStateSnapshot.prototype.toString = function () { return serializeNode(this._root); };\n    return RouterStateSnapshot;\n}(Tree));\n/**\n * @template U, T\n * @param {?} state\n * @param {?} node\n * @return {?}\n */\nfunction setRouterState(state, node) {\n    node.value._routerState = state;\n    node.children.forEach(function (c) { return setRouterState(state, c); });\n}\n/**\n * @param {?} node\n * @return {?}\n */\nfunction serializeNode(node) {\n    var /** @type {?} */ c = node.children.length > 0 ? \" { \" + node.children.map(serializeNode).join(\", \") + \" } \" : '';\n    return \"\" + node.value + c;\n}\n/**\n * The expectation is that the activate route is created with the right set of parameters.\n * So we push new values into the observables only when they are not the initial values.\n * And we detect that by checking if the snapshot field is set.\n * @param {?} route\n * @return {?}\n */\nfunction advanceActivatedRoute(route) {\n    if (route.snapshot) {\n        var /** @type {?} */ currentSnapshot = route.snapshot;\n        var /** @type {?} */ nextSnapshot = route._futureSnapshot;\n        route.snapshot = nextSnapshot;\n        if (!shallowEqual(currentSnapshot.queryParams, nextSnapshot.queryParams)) {\n            ((route.queryParams)).next(nextSnapshot.queryParams);\n        }\n        if (currentSnapshot.fragment !== nextSnapshot.fragment) {\n            ((route.fragment)).next(nextSnapshot.fragment);\n        }\n        if (!shallowEqual(currentSnapshot.params, nextSnapshot.params)) {\n            ((route.params)).next(nextSnapshot.params);\n        }\n        if (!shallowEqualArrays(currentSnapshot.url, nextSnapshot.url)) {\n            ((route.url)).next(nextSnapshot.url);\n        }\n        if (!shallowEqual(currentSnapshot.data, nextSnapshot.data)) {\n            ((route.data)).next(nextSnapshot.data);\n        }\n    }\n    else {\n        route.snapshot = route._futureSnapshot;\n        // this is for resolved data\n        ((route.data)).next(route._futureSnapshot.data);\n    }\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction equalParamsAndUrlSegments(a, b) {\n    var /** @type {?} */ equalUrlParams = shallowEqual(a.params, b.params) && equalSegments(a.url, b.url);\n    var /** @type {?} */ parentsMismatch = !a.parent !== !b.parent;\n    return equalUrlParams && !parentsMismatch &&\n        (!a.parent || equalParamsAndUrlSegments(a.parent, /** @type {?} */ ((b.parent))));\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} routeReuseStrategy\n * @param {?} curr\n * @param {?} prevState\n * @return {?}\n */\nfunction createRouterState(routeReuseStrategy, curr, prevState) {\n    var /** @type {?} */ root = createNode(routeReuseStrategy, curr._root, prevState ? prevState._root : undefined);\n    return new RouterState(root, curr);\n}\n/**\n * @param {?} routeReuseStrategy\n * @param {?} curr\n * @param {?=} prevState\n * @return {?}\n */\nfunction createNode(routeReuseStrategy, curr, prevState) {\n    // reuse an activated route that is currently displayed on the screen\n    if (prevState && routeReuseStrategy.shouldReuseRoute(curr.value, prevState.value.snapshot)) {\n        var /** @type {?} */ value = prevState.value;\n        value._futureSnapshot = curr.value;\n        var /** @type {?} */ children = createOrReuseChildren(routeReuseStrategy, curr, prevState);\n        return new TreeNode(value, children);\n        // retrieve an activated route that is used to be displayed, but is not currently displayed\n    }\n    else if (routeReuseStrategy.retrieve(curr.value)) {\n        var /** @type {?} */ tree_1 = ((routeReuseStrategy.retrieve(curr.value))).route;\n        setFutureSnapshotsOfActivatedRoutes(curr, tree_1);\n        return tree_1;\n    }\n    else {\n        var /** @type {?} */ value = createActivatedRoute(curr.value);\n        var /** @type {?} */ children = curr.children.map(function (c) { return createNode(routeReuseStrategy, c); });\n        return new TreeNode(value, children);\n    }\n}\n/**\n * @param {?} curr\n * @param {?} result\n * @return {?}\n */\nfunction setFutureSnapshotsOfActivatedRoutes(curr, result) {\n    if (curr.value.routeConfig !== result.value.routeConfig) {\n        throw new Error('Cannot reattach ActivatedRouteSnapshot created from a different route');\n    }\n    if (curr.children.length !== result.children.length) {\n        throw new Error('Cannot reattach ActivatedRouteSnapshot with a different number of children');\n    }\n    result.value._futureSnapshot = curr.value;\n    for (var /** @type {?} */ i = 0; i < curr.children.length; ++i) {\n        setFutureSnapshotsOfActivatedRoutes(curr.children[i], result.children[i]);\n    }\n}\n/**\n * @param {?} routeReuseStrategy\n * @param {?} curr\n * @param {?} prevState\n * @return {?}\n */\nfunction createOrReuseChildren(routeReuseStrategy, curr, prevState) {\n    return curr.children.map(function (child) {\n        for (var _i = 0, _a = prevState.children; _i < _a.length; _i++) {\n            var p = _a[_i];\n            if (routeReuseStrategy.shouldReuseRoute(p.value.snapshot, child.value)) {\n                return createNode(routeReuseStrategy, child, p);\n            }\n        }\n        return createNode(routeReuseStrategy, child);\n    });\n}\n/**\n * @param {?} c\n * @return {?}\n */\nfunction createActivatedRoute(c) {\n    return new ActivatedRoute(new BehaviorSubject(c.url), new BehaviorSubject(c.params), new BehaviorSubject(c.queryParams), new BehaviorSubject(c.fragment), new BehaviorSubject(c.data), c.outlet, c.component, c);\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} route\n * @param {?} urlTree\n * @param {?} commands\n * @param {?} queryParams\n * @param {?} fragment\n * @return {?}\n */\nfunction createUrlTree(route, urlTree, commands, queryParams, fragment) {\n    if (commands.length === 0) {\n        return tree(urlTree.root, urlTree.root, urlTree, queryParams, fragment);\n    }\n    var /** @type {?} */ nav = computeNavigation(commands);\n    if (nav.toRoot()) {\n        return tree(urlTree.root, new UrlSegmentGroup([], {}), urlTree, queryParams, fragment);\n    }\n    var /** @type {?} */ startingPosition = findStartingPosition(nav, urlTree, route);\n    var /** @type {?} */ segmentGroup = startingPosition.processChildren ?\n        updateSegmentGroupChildren(startingPosition.segmentGroup, startingPosition.index, nav.commands) :\n        updateSegmentGroup(startingPosition.segmentGroup, startingPosition.index, nav.commands);\n    return tree(startingPosition.segmentGroup, segmentGroup, urlTree, queryParams, fragment);\n}\n/**\n * @param {?} command\n * @return {?}\n */\nfunction isMatrixParams(command) {\n    return typeof command === 'object' && command != null && !command.outlets && !command.segmentPath;\n}\n/**\n * @param {?} oldSegmentGroup\n * @param {?} newSegmentGroup\n * @param {?} urlTree\n * @param {?} queryParams\n * @param {?} fragment\n * @return {?}\n */\nfunction tree(oldSegmentGroup, newSegmentGroup, urlTree, queryParams, fragment) {\n    var /** @type {?} */ qp = {};\n    if (queryParams) {\n        forEach(queryParams, function (value, name) {\n            qp[name] = Array.isArray(value) ? value.map(function (v) { return \"\" + v; }) : \"\" + value;\n        });\n    }\n    if (urlTree.root === oldSegmentGroup) {\n        return new UrlTree(newSegmentGroup, qp, fragment);\n    }\n    return new UrlTree(replaceSegment(urlTree.root, oldSegmentGroup, newSegmentGroup), qp, fragment);\n}\n/**\n * @param {?} current\n * @param {?} oldSegment\n * @param {?} newSegment\n * @return {?}\n */\nfunction replaceSegment(current, oldSegment, newSegment) {\n    var /** @type {?} */ children = {};\n    forEach(current.children, function (c, outletName) {\n        if (c === oldSegment) {\n            children[outletName] = newSegment;\n        }\n        else {\n            children[outletName] = replaceSegment(c, oldSegment, newSegment);\n        }\n    });\n    return new UrlSegmentGroup(current.segments, children);\n}\nvar Navigation = (function () {\n    /**\n     * @param {?} isAbsolute\n     * @param {?} numberOfDoubleDots\n     * @param {?} commands\n     */\n    function Navigation(isAbsolute, numberOfDoubleDots, commands) {\n        this.isAbsolute = isAbsolute;\n        this.numberOfDoubleDots = numberOfDoubleDots;\n        this.commands = commands;\n        if (isAbsolute && commands.length > 0 && isMatrixParams(commands[0])) {\n            throw new Error('Root segment cannot have matrix parameters');\n        }\n        var cmdWithOutlet = commands.find(function (c) { return typeof c === 'object' && c != null && c.outlets; });\n        if (cmdWithOutlet && cmdWithOutlet !== last$1(commands)) {\n            throw new Error('{outlets:{}} has to be the last command');\n        }\n    }\n    /**\n     * @return {?}\n     */\n    Navigation.prototype.toRoot = function () {\n        return this.isAbsolute && this.commands.length === 1 && this.commands[0] == '/';\n    };\n    return Navigation;\n}());\n/**\n * Transforms commands to a normalized `Navigation`\n * @param {?} commands\n * @return {?}\n */\nfunction computeNavigation(commands) {\n    if ((typeof commands[0] === 'string') && commands.length === 1 && commands[0] === '/') {\n        return new Navigation(true, 0, commands);\n    }\n    var /** @type {?} */ numberOfDoubleDots = 0;\n    var /** @type {?} */ isAbsolute = false;\n    var /** @type {?} */ res = commands.reduce(function (res, cmd, cmdIdx) {\n        if (typeof cmd === 'object' && cmd != null) {\n            if (cmd.outlets) {\n                var /** @type {?} */ outlets_1 = {};\n                forEach(cmd.outlets, function (commands, name) {\n                    outlets_1[name] = typeof commands === 'string' ? commands.split('/') : commands;\n                });\n                return res.concat([{ outlets: outlets_1 }]);\n            }\n            if (cmd.segmentPath) {\n                return res.concat([cmd.segmentPath]);\n            }\n        }\n        if (!(typeof cmd === 'string')) {\n            return res.concat([cmd]);\n        }\n        if (cmdIdx === 0) {\n            cmd.split('/').forEach(function (urlPart, partIndex) {\n                if (partIndex == 0 && urlPart === '.') {\n                    // skip './a'\n                }\n                else if (partIndex == 0 && urlPart === '') {\n                    isAbsolute = true;\n                }\n                else if (urlPart === '..') {\n                    numberOfDoubleDots++;\n                }\n                else if (urlPart != '') {\n                    res.push(urlPart);\n                }\n            });\n            return res;\n        }\n        return res.concat([cmd]);\n    }, []);\n    return new Navigation(isAbsolute, numberOfDoubleDots, res);\n}\nvar Position = (function () {\n    /**\n     * @param {?} segmentGroup\n     * @param {?} processChildren\n     * @param {?} index\n     */\n    function Position(segmentGroup, processChildren, index) {\n        this.segmentGroup = segmentGroup;\n        this.processChildren = processChildren;\n        this.index = index;\n    }\n    return Position;\n}());\n/**\n * @param {?} nav\n * @param {?} tree\n * @param {?} route\n * @return {?}\n */\nfunction findStartingPosition(nav, tree, route) {\n    if (nav.isAbsolute) {\n        return new Position(tree.root, true, 0);\n    }\n    if (route.snapshot._lastPathIndex === -1) {\n        return new Position(route.snapshot._urlSegment, true, 0);\n    }\n    var /** @type {?} */ modifier = isMatrixParams(nav.commands[0]) ? 0 : 1;\n    var /** @type {?} */ index = route.snapshot._lastPathIndex + modifier;\n    return createPositionApplyingDoubleDots(route.snapshot._urlSegment, index, nav.numberOfDoubleDots);\n}\n/**\n * @param {?} group\n * @param {?} index\n * @param {?} numberOfDoubleDots\n * @return {?}\n */\nfunction createPositionApplyingDoubleDots(group, index, numberOfDoubleDots) {\n    var /** @type {?} */ g = group;\n    var /** @type {?} */ ci = index;\n    var /** @type {?} */ dd = numberOfDoubleDots;\n    while (dd > ci) {\n        dd -= ci;\n        g = ((g.parent));\n        if (!g) {\n            throw new Error('Invalid number of \\'../\\'');\n        }\n        ci = g.segments.length;\n    }\n    return new Position(g, false, ci - dd);\n}\n/**\n * @param {?} command\n * @return {?}\n */\nfunction getPath(command) {\n    if (typeof command === 'object' && command != null && command.outlets) {\n        return command.outlets[PRIMARY_OUTLET];\n    }\n    return \"\" + command;\n}\n/**\n * @param {?} commands\n * @return {?}\n */\nfunction getOutlets(commands) {\n    if (!(typeof commands[0] === 'object'))\n        return _a = {}, _a[PRIMARY_OUTLET] = commands, _a;\n    if (commands[0].outlets === undefined)\n        return _b = {}, _b[PRIMARY_OUTLET] = commands, _b;\n    return commands[0].outlets;\n    var _a, _b;\n}\n/**\n * @param {?} segmentGroup\n * @param {?} startIndex\n * @param {?} commands\n * @return {?}\n */\nfunction updateSegmentGroup(segmentGroup, startIndex, commands) {\n    if (!segmentGroup) {\n        segmentGroup = new UrlSegmentGroup([], {});\n    }\n    if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n        return updateSegmentGroupChildren(segmentGroup, startIndex, commands);\n    }\n    var /** @type {?} */ m = prefixedWith(segmentGroup, startIndex, commands);\n    var /** @type {?} */ slicedCommands = commands.slice(m.commandIndex);\n    if (m.match && m.pathIndex < segmentGroup.segments.length) {\n        var /** @type {?} */ g = new UrlSegmentGroup(segmentGroup.segments.slice(0, m.pathIndex), {});\n        g.children[PRIMARY_OUTLET] =\n            new UrlSegmentGroup(segmentGroup.segments.slice(m.pathIndex), segmentGroup.children);\n        return updateSegmentGroupChildren(g, 0, slicedCommands);\n    }\n    else if (m.match && slicedCommands.length === 0) {\n        return new UrlSegmentGroup(segmentGroup.segments, {});\n    }\n    else if (m.match && !segmentGroup.hasChildren()) {\n        return createNewSegmentGroup(segmentGroup, startIndex, commands);\n    }\n    else if (m.match) {\n        return updateSegmentGroupChildren(segmentGroup, 0, slicedCommands);\n    }\n    else {\n        return createNewSegmentGroup(segmentGroup, startIndex, commands);\n    }\n}\n/**\n * @param {?} segmentGroup\n * @param {?} startIndex\n * @param {?} commands\n * @return {?}\n */\nfunction updateSegmentGroupChildren(segmentGroup, startIndex, commands) {\n    if (commands.length === 0) {\n        return new UrlSegmentGroup(segmentGroup.segments, {});\n    }\n    else {\n        var /** @type {?} */ outlets_2 = getOutlets(commands);\n        var /** @type {?} */ children_2 = {};\n        forEach(outlets_2, function (commands, outlet) {\n            if (commands !== null) {\n                children_2[outlet] = updateSegmentGroup(segmentGroup.children[outlet], startIndex, commands);\n            }\n        });\n        forEach(segmentGroup.children, function (child, childOutlet) {\n            if (outlets_2[childOutlet] === undefined) {\n                children_2[childOutlet] = child;\n            }\n        });\n        return new UrlSegmentGroup(segmentGroup.segments, children_2);\n    }\n}\n/**\n * @param {?} segmentGroup\n * @param {?} startIndex\n * @param {?} commands\n * @return {?}\n */\nfunction prefixedWith(segmentGroup, startIndex, commands) {\n    var /** @type {?} */ currentCommandIndex = 0;\n    var /** @type {?} */ currentPathIndex = startIndex;\n    var /** @type {?} */ noMatch = { match: false, pathIndex: 0, commandIndex: 0 };\n    while (currentPathIndex < segmentGroup.segments.length) {\n        if (currentCommandIndex >= commands.length)\n            return noMatch;\n        var /** @type {?} */ path = segmentGroup.segments[currentPathIndex];\n        var /** @type {?} */ curr = getPath(commands[currentCommandIndex]);\n        var /** @type {?} */ next = currentCommandIndex < commands.length - 1 ? commands[currentCommandIndex + 1] : null;\n        if (currentPathIndex > 0 && curr === undefined)\n            break;\n        if (curr && next && (typeof next === 'object') && next.outlets === undefined) {\n            if (!compare(curr, next, path))\n                return noMatch;\n            currentCommandIndex += 2;\n        }\n        else {\n            if (!compare(curr, {}, path))\n                return noMatch;\n            currentCommandIndex++;\n        }\n        currentPathIndex++;\n    }\n    return { match: true, pathIndex: currentPathIndex, commandIndex: currentCommandIndex };\n}\n/**\n * @param {?} segmentGroup\n * @param {?} startIndex\n * @param {?} commands\n * @return {?}\n */\nfunction createNewSegmentGroup(segmentGroup, startIndex, commands) {\n    var /** @type {?} */ paths = segmentGroup.segments.slice(0, startIndex);\n    var /** @type {?} */ i = 0;\n    while (i < commands.length) {\n        if (typeof commands[i] === 'object' && commands[i].outlets !== undefined) {\n            var /** @type {?} */ children = createNewSegmentChildren(commands[i].outlets);\n            return new UrlSegmentGroup(paths, children);\n        }\n        // if we start with an object literal, we need to reuse the path part from the segment\n        if (i === 0 && isMatrixParams(commands[0])) {\n            var /** @type {?} */ p = segmentGroup.segments[startIndex];\n            paths.push(new UrlSegment(p.path, commands[0]));\n            i++;\n            continue;\n        }\n        var /** @type {?} */ curr = getPath(commands[i]);\n        var /** @type {?} */ next = (i < commands.length - 1) ? commands[i + 1] : null;\n        if (curr && next && isMatrixParams(next)) {\n            paths.push(new UrlSegment(curr, stringify(next)));\n            i += 2;\n        }\n        else {\n            paths.push(new UrlSegment(curr, {}));\n            i++;\n        }\n    }\n    return new UrlSegmentGroup(paths, {});\n}\n/**\n * @param {?} outlets\n * @return {?}\n */\nfunction createNewSegmentChildren(outlets) {\n    var /** @type {?} */ children = {};\n    forEach(outlets, function (commands, outlet) {\n        if (commands !== null) {\n            children[outlet] = createNewSegmentGroup(new UrlSegmentGroup([], {}), 0, commands);\n        }\n    });\n    return children;\n}\n/**\n * @param {?} params\n * @return {?}\n */\nfunction stringify(params) {\n    var /** @type {?} */ res = {};\n    forEach(params, function (v, k) { return res[k] = \"\" + v; });\n    return res;\n}\n/**\n * @param {?} path\n * @param {?} params\n * @param {?} segment\n * @return {?}\n */\nfunction compare(path, params, segment) {\n    return path == segment.path && shallowEqual(params, segment.parameters);\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NoMatch$1 = (function () {\n    function NoMatch$1() {\n    }\n    return NoMatch$1;\n}());\n/**\n * @param {?} rootComponentType\n * @param {?} config\n * @param {?} urlTree\n * @param {?} url\n * @return {?}\n */\nfunction recognize(rootComponentType, config, urlTree, url) {\n    return new Recognizer(rootComponentType, config, urlTree, url).recognize();\n}\nvar Recognizer = (function () {\n    /**\n     * @param {?} rootComponentType\n     * @param {?} config\n     * @param {?} urlTree\n     * @param {?} url\n     */\n    function Recognizer(rootComponentType, config, urlTree, url) {\n        this.rootComponentType = rootComponentType;\n        this.config = config;\n        this.urlTree = urlTree;\n        this.url = url;\n    }\n    /**\n     * @return {?}\n     */\n    Recognizer.prototype.recognize = function () {\n        try {\n            var /** @type {?} */ rootSegmentGroup = split$1(this.urlTree.root, [], [], this.config).segmentGroup;\n            var /** @type {?} */ children = this.processSegmentGroup(this.config, rootSegmentGroup, PRIMARY_OUTLET);\n            var /** @type {?} */ root = new ActivatedRouteSnapshot([], Object.freeze({}), Object.freeze(this.urlTree.queryParams), /** @type {?} */ ((this.urlTree.fragment)), {}, PRIMARY_OUTLET, this.rootComponentType, null, this.urlTree.root, -1, {});\n            var /** @type {?} */ rootNode = new TreeNode(root, children);\n            var /** @type {?} */ routeState = new RouterStateSnapshot(this.url, rootNode);\n            this.inheritParamsAndData(routeState._root);\n            return of(routeState);\n        }\n        catch (e) {\n            return new Observable(function (obs) { return obs.error(e); });\n        }\n    };\n    /**\n     * @param {?} routeNode\n     * @return {?}\n     */\n    Recognizer.prototype.inheritParamsAndData = function (routeNode) {\n        var _this = this;\n        var /** @type {?} */ route = routeNode.value;\n        var /** @type {?} */ i = inheritedParamsDataResolve(route);\n        route.params = Object.freeze(i.params);\n        route.data = Object.freeze(i.data);\n        routeNode.children.forEach(function (n) { return _this.inheritParamsAndData(n); });\n    };\n    /**\n     * @param {?} config\n     * @param {?} segmentGroup\n     * @param {?} outlet\n     * @return {?}\n     */\n    Recognizer.prototype.processSegmentGroup = function (config, segmentGroup, outlet) {\n        if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n            return this.processChildren(config, segmentGroup);\n        }\n        return this.processSegment(config, segmentGroup, segmentGroup.segments, outlet);\n    };\n    /**\n     * @param {?} config\n     * @param {?} segmentGroup\n     * @return {?}\n     */\n    Recognizer.prototype.processChildren = function (config, segmentGroup) {\n        var _this = this;\n        var /** @type {?} */ children = mapChildrenIntoArray(segmentGroup, function (child, childOutlet) { return _this.processSegmentGroup(config, child, childOutlet); });\n        checkOutletNameUniqueness(children);\n        sortActivatedRouteSnapshots(children);\n        return children;\n    };\n    /**\n     * @param {?} config\n     * @param {?} segmentGroup\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    Recognizer.prototype.processSegment = function (config, segmentGroup, segments, outlet) {\n        for (var _i = 0, config_1 = config; _i < config_1.length; _i++) {\n            var r = config_1[_i];\n            try {\n                return this.processSegmentAgainstRoute(r, segmentGroup, segments, outlet);\n            }\n            catch (e) {\n                if (!(e instanceof NoMatch$1))\n                    throw e;\n            }\n        }\n        if (this.noLeftoversInUrl(segmentGroup, segments, outlet)) {\n            return [];\n        }\n        throw new NoMatch$1();\n    };\n    /**\n     * @param {?} segmentGroup\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    Recognizer.prototype.noLeftoversInUrl = function (segmentGroup, segments, outlet) {\n        return segments.length === 0 && !segmentGroup.children[outlet];\n    };\n    /**\n     * @param {?} route\n     * @param {?} rawSegment\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    Recognizer.prototype.processSegmentAgainstRoute = function (route, rawSegment, segments, outlet) {\n        if (route.redirectTo)\n            throw new NoMatch$1();\n        if ((route.outlet || PRIMARY_OUTLET) !== outlet)\n            throw new NoMatch$1();\n        if (route.path === '**') {\n            var /** @type {?} */ params = segments.length > 0 ? ((last$1(segments))).parameters : {};\n            var /** @type {?} */ snapshot_1 = new ActivatedRouteSnapshot(segments, params, Object.freeze(this.urlTree.queryParams), /** @type {?} */ ((this.urlTree.fragment)), getData(route), outlet, /** @type {?} */ ((route.component)), route, getSourceSegmentGroup(rawSegment), getPathIndexShift(rawSegment) + segments.length, getResolve(route));\n            return [new TreeNode(snapshot_1, [])];\n        }\n        var _a = match$1(rawSegment, route, segments), consumedSegments = _a.consumedSegments, parameters = _a.parameters, lastChild = _a.lastChild;\n        var /** @type {?} */ rawSlicedSegments = segments.slice(lastChild);\n        var /** @type {?} */ childConfig = getChildConfig(route);\n        var _b = split$1(rawSegment, consumedSegments, rawSlicedSegments, childConfig), segmentGroup = _b.segmentGroup, slicedSegments = _b.slicedSegments;\n        var /** @type {?} */ snapshot = new ActivatedRouteSnapshot(consumedSegments, parameters, Object.freeze(this.urlTree.queryParams), /** @type {?} */ ((this.urlTree.fragment)), getData(route), outlet, /** @type {?} */ ((route.component)), route, getSourceSegmentGroup(rawSegment), getPathIndexShift(rawSegment) + consumedSegments.length, getResolve(route));\n        if (slicedSegments.length === 0 && segmentGroup.hasChildren()) {\n            var /** @type {?} */ children_3 = this.processChildren(childConfig, segmentGroup);\n            return [new TreeNode(snapshot, children_3)];\n        }\n        if (childConfig.length === 0 && slicedSegments.length === 0) {\n            return [new TreeNode(snapshot, [])];\n        }\n        var /** @type {?} */ children = this.processSegment(childConfig, segmentGroup, slicedSegments, PRIMARY_OUTLET);\n        return [new TreeNode(snapshot, children)];\n    };\n    return Recognizer;\n}());\n/**\n * @param {?} nodes\n * @return {?}\n */\nfunction sortActivatedRouteSnapshots(nodes) {\n    nodes.sort(function (a, b) {\n        if (a.value.outlet === PRIMARY_OUTLET)\n            return -1;\n        if (b.value.outlet === PRIMARY_OUTLET)\n            return 1;\n        return a.value.outlet.localeCompare(b.value.outlet);\n    });\n}\n/**\n * @param {?} route\n * @return {?}\n */\nfunction getChildConfig(route) {\n    if (route.children) {\n        return route.children;\n    }\n    if (route.loadChildren) {\n        return ((route._loadedConfig)).routes;\n    }\n    return [];\n}\n/**\n * @param {?} segmentGroup\n * @param {?} route\n * @param {?} segments\n * @return {?}\n */\nfunction match$1(segmentGroup, route, segments) {\n    if (route.path === '') {\n        if (route.pathMatch === 'full' && (segmentGroup.hasChildren() || segments.length > 0)) {\n            throw new NoMatch$1();\n        }\n        return { consumedSegments: [], lastChild: 0, parameters: {} };\n    }\n    var /** @type {?} */ matcher = route.matcher || defaultUrlMatcher;\n    var /** @type {?} */ res = matcher(segments, segmentGroup, route);\n    if (!res)\n        throw new NoMatch$1();\n    var /** @type {?} */ posParams = {};\n    forEach(/** @type {?} */ ((res.posParams)), function (v, k) { posParams[k] = v.path; });\n    var /** @type {?} */ parameters = res.consumed.length > 0 ? Object.assign({}, posParams, res.consumed[res.consumed.length - 1].parameters) :\n        posParams;\n    return { consumedSegments: res.consumed, lastChild: res.consumed.length, parameters: parameters };\n}\n/**\n * @param {?} nodes\n * @return {?}\n */\nfunction checkOutletNameUniqueness(nodes) {\n    var /** @type {?} */ names = {};\n    nodes.forEach(function (n) {\n        var /** @type {?} */ routeWithSameOutletName = names[n.value.outlet];\n        if (routeWithSameOutletName) {\n            var /** @type {?} */ p = routeWithSameOutletName.url.map(function (s) { return s.toString(); }).join('/');\n            var /** @type {?} */ c = n.value.url.map(function (s) { return s.toString(); }).join('/');\n            throw new Error(\"Two segments cannot have the same outlet name: '\" + p + \"' and '\" + c + \"'.\");\n        }\n        names[n.value.outlet] = n.value;\n    });\n}\n/**\n * @param {?} segmentGroup\n * @return {?}\n */\nfunction getSourceSegmentGroup(segmentGroup) {\n    var /** @type {?} */ s = segmentGroup;\n    while (s._sourceSegment) {\n        s = s._sourceSegment;\n    }\n    return s;\n}\n/**\n * @param {?} segmentGroup\n * @return {?}\n */\nfunction getPathIndexShift(segmentGroup) {\n    var /** @type {?} */ s = segmentGroup;\n    var /** @type {?} */ res = (s._segmentIndexShift ? s._segmentIndexShift : 0);\n    while (s._sourceSegment) {\n        s = s._sourceSegment;\n        res += (s._segmentIndexShift ? s._segmentIndexShift : 0);\n    }\n    return res - 1;\n}\n/**\n * @param {?} segmentGroup\n * @param {?} consumedSegments\n * @param {?} slicedSegments\n * @param {?} config\n * @return {?}\n */\nfunction split$1(segmentGroup, consumedSegments, slicedSegments, config) {\n    if (slicedSegments.length > 0 &&\n        containsEmptyPathMatchesWithNamedOutlets(segmentGroup, slicedSegments, config)) {\n        var /** @type {?} */ s_1 = new UrlSegmentGroup(consumedSegments, createChildrenForEmptyPaths(segmentGroup, consumedSegments, config, new UrlSegmentGroup(slicedSegments, segmentGroup.children)));\n        s_1._sourceSegment = segmentGroup;\n        s_1._segmentIndexShift = consumedSegments.length;\n        return { segmentGroup: s_1, slicedSegments: [] };\n    }\n    if (slicedSegments.length === 0 &&\n        containsEmptyPathMatches(segmentGroup, slicedSegments, config)) {\n        var /** @type {?} */ s_2 = new UrlSegmentGroup(segmentGroup.segments, addEmptyPathsToChildrenIfNeeded(segmentGroup, slicedSegments, config, segmentGroup.children));\n        s_2._sourceSegment = segmentGroup;\n        s_2._segmentIndexShift = consumedSegments.length;\n        return { segmentGroup: s_2, slicedSegments: slicedSegments };\n    }\n    var /** @type {?} */ s = new UrlSegmentGroup(segmentGroup.segments, segmentGroup.children);\n    s._sourceSegment = segmentGroup;\n    s._segmentIndexShift = consumedSegments.length;\n    return { segmentGroup: s, slicedSegments: slicedSegments };\n}\n/**\n * @param {?} segmentGroup\n * @param {?} slicedSegments\n * @param {?} routes\n * @param {?} children\n * @return {?}\n */\nfunction addEmptyPathsToChildrenIfNeeded(segmentGroup, slicedSegments, routes, children) {\n    var /** @type {?} */ res = {};\n    for (var _i = 0, routes_3 = routes; _i < routes_3.length; _i++) {\n        var r = routes_3[_i];\n        if (emptyPathMatch(segmentGroup, slicedSegments, r) && !children[getOutlet$1(r)]) {\n            var /** @type {?} */ s = new UrlSegmentGroup([], {});\n            s._sourceSegment = segmentGroup;\n            s._segmentIndexShift = segmentGroup.segments.length;\n            res[getOutlet$1(r)] = s;\n        }\n    }\n    return Object.assign({}, children, res);\n}\n/**\n * @param {?} segmentGroup\n * @param {?} consumedSegments\n * @param {?} routes\n * @param {?} primarySegment\n * @return {?}\n */\nfunction createChildrenForEmptyPaths(segmentGroup, consumedSegments, routes, primarySegment) {\n    var /** @type {?} */ res = {};\n    res[PRIMARY_OUTLET] = primarySegment;\n    primarySegment._sourceSegment = segmentGroup;\n    primarySegment._segmentIndexShift = consumedSegments.length;\n    for (var _i = 0, routes_4 = routes; _i < routes_4.length; _i++) {\n        var r = routes_4[_i];\n        if (r.path === '' && getOutlet$1(r) !== PRIMARY_OUTLET) {\n            var /** @type {?} */ s = new UrlSegmentGroup([], {});\n            s._sourceSegment = segmentGroup;\n            s._segmentIndexShift = consumedSegments.length;\n            res[getOutlet$1(r)] = s;\n        }\n    }\n    return res;\n}\n/**\n * @param {?} segmentGroup\n * @param {?} slicedSegments\n * @param {?} routes\n * @return {?}\n */\nfunction containsEmptyPathMatchesWithNamedOutlets(segmentGroup, slicedSegments, routes) {\n    return routes.some(function (r) { return emptyPathMatch(segmentGroup, slicedSegments, r) && getOutlet$1(r) !== PRIMARY_OUTLET; });\n}\n/**\n * @param {?} segmentGroup\n * @param {?} slicedSegments\n * @param {?} routes\n * @return {?}\n */\nfunction containsEmptyPathMatches(segmentGroup, slicedSegments, routes) {\n    return routes.some(function (r) { return emptyPathMatch(segmentGroup, slicedSegments, r); });\n}\n/**\n * @param {?} segmentGroup\n * @param {?} slicedSegments\n * @param {?} r\n * @return {?}\n */\nfunction emptyPathMatch(segmentGroup, slicedSegments, r) {\n    if ((segmentGroup.hasChildren() || slicedSegments.length > 0) && r.pathMatch === 'full') {\n        return false;\n    }\n    return r.path === '' && r.redirectTo === undefined;\n}\n/**\n * @param {?} route\n * @return {?}\n */\nfunction getOutlet$1(route) {\n    return route.outlet || PRIMARY_OUTLET;\n}\n/**\n * @param {?} route\n * @return {?}\n */\nfunction getData(route) {\n    return route.data || {};\n}\n/**\n * @param {?} route\n * @return {?}\n */\nfunction getResolve(route) {\n    return route.resolve || {};\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Provides a way to customize when activated routes get reused.\n *\n * \\@experimental\n * @abstract\n */\nvar RouteReuseStrategy = (function () {\n    function RouteReuseStrategy() {\n    }\n    /**\n     * Determines if this route (and its subtree) should be detached to be reused later\n     * @abstract\n     * @param {?} route\n     * @return {?}\n     */\n    RouteReuseStrategy.prototype.shouldDetach = function (route) { };\n    /**\n     * Stores the detached route.\n     *\n     * Storing a `null` value should erase the previously stored value.\n     * @abstract\n     * @param {?} route\n     * @param {?} handle\n     * @return {?}\n     */\n    RouteReuseStrategy.prototype.store = function (route, handle) { };\n    /**\n     * Determines if this route (and its subtree) should be reattached\n     * @abstract\n     * @param {?} route\n     * @return {?}\n     */\n    RouteReuseStrategy.prototype.shouldAttach = function (route) { };\n    /**\n     * Retrieves the previously stored route\n     * @abstract\n     * @param {?} route\n     * @return {?}\n     */\n    RouteReuseStrategy.prototype.retrieve = function (route) { };\n    /**\n     * Determines if a route should be reused\n     * @abstract\n     * @param {?} future\n     * @param {?} curr\n     * @return {?}\n     */\n    RouteReuseStrategy.prototype.shouldReuseRoute = function (future, curr) { };\n    return RouteReuseStrategy;\n}());\n/**\n * Does not detach any subtrees. Reuses routes as long as their route config is the same.\n */\nvar DefaultRouteReuseStrategy = (function () {\n    function DefaultRouteReuseStrategy() {\n    }\n    /**\n     * @param {?} route\n     * @return {?}\n     */\n    DefaultRouteReuseStrategy.prototype.shouldDetach = function (route) { return false; };\n    /**\n     * @param {?} route\n     * @param {?} detachedTree\n     * @return {?}\n     */\n    DefaultRouteReuseStrategy.prototype.store = function (route, detachedTree) { };\n    /**\n     * @param {?} route\n     * @return {?}\n     */\n    DefaultRouteReuseStrategy.prototype.shouldAttach = function (route) { return false; };\n    /**\n     * @param {?} route\n     * @return {?}\n     */\n    DefaultRouteReuseStrategy.prototype.retrieve = function (route) { return null; };\n    /**\n     * @param {?} future\n     * @param {?} curr\n     * @return {?}\n     */\n    DefaultRouteReuseStrategy.prototype.shouldReuseRoute = function (future, curr) {\n        return future.routeConfig === curr.routeConfig;\n    };\n    return DefaultRouteReuseStrategy;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@docsNotRequired\n * \\@experimental\n */\nvar ROUTES = new InjectionToken('ROUTES');\nvar RouterConfigLoader = (function () {\n    /**\n     * @param {?} loader\n     * @param {?} compiler\n     * @param {?=} onLoadStartListener\n     * @param {?=} onLoadEndListener\n     */\n    function RouterConfigLoader(loader, compiler, onLoadStartListener, onLoadEndListener) {\n        this.loader = loader;\n        this.compiler = compiler;\n        this.onLoadStartListener = onLoadStartListener;\n        this.onLoadEndListener = onLoadEndListener;\n    }\n    /**\n     * @param {?} parentInjector\n     * @param {?} route\n     * @return {?}\n     */\n    RouterConfigLoader.prototype.load = function (parentInjector, route) {\n        var _this = this;\n        if (this.onLoadStartListener) {\n            this.onLoadStartListener(route);\n        }\n        var /** @type {?} */ moduleFactory$ = this.loadModuleFactory(/** @type {?} */ ((route.loadChildren)));\n        return map.call(moduleFactory$, function (factory) {\n            if (_this.onLoadEndListener) {\n                _this.onLoadEndListener(route);\n            }\n            var /** @type {?} */ module = factory.create(parentInjector);\n            return new LoadedRouterConfig(flatten(module.injector.get(ROUTES)), module);\n        });\n    };\n    /**\n     * @param {?} loadChildren\n     * @return {?}\n     */\n    RouterConfigLoader.prototype.loadModuleFactory = function (loadChildren) {\n        var _this = this;\n        if (typeof loadChildren === 'string') {\n            return fromPromise(this.loader.load(loadChildren));\n        }\n        else {\n            return mergeMap.call(wrapIntoObservable(loadChildren()), function (t) {\n                if (t instanceof NgModuleFactory) {\n                    return of(t);\n                }\n                else {\n                    return fromPromise(_this.compiler.compileModuleAsync(t));\n                }\n            });\n        }\n    };\n    return RouterConfigLoader;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Provides a way to migrate AngularJS applications to Angular.\n *\n * \\@experimental\n * @abstract\n */\nvar UrlHandlingStrategy = (function () {\n    function UrlHandlingStrategy() {\n    }\n    /**\n     * Tells the router if this URL should be processed.\n     *\n     * When it returns true, the router will execute the regular navigation.\n     * When it returns false, the router will set the router state to an empty state.\n     * As a result, all the active components will be destroyed.\n     *\n     * @abstract\n     * @param {?} url\n     * @return {?}\n     */\n    UrlHandlingStrategy.prototype.shouldProcessUrl = function (url) { };\n    /**\n     * Extracts the part of the URL that should be handled by the router.\n     * The rest of the URL will remain untouched.\n     * @abstract\n     * @param {?} url\n     * @return {?}\n     */\n    UrlHandlingStrategy.prototype.extract = function (url) { };\n    /**\n     * Merges the URL fragment with the rest of the URL.\n     * @abstract\n     * @param {?} newUrlPart\n     * @param {?} rawUrl\n     * @return {?}\n     */\n    UrlHandlingStrategy.prototype.merge = function (newUrlPart, rawUrl) { };\n    return UrlHandlingStrategy;\n}());\n/**\n * \\@experimental\n */\nvar DefaultUrlHandlingStrategy = (function () {\n    function DefaultUrlHandlingStrategy() {\n    }\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    DefaultUrlHandlingStrategy.prototype.shouldProcessUrl = function (url) { return true; };\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    DefaultUrlHandlingStrategy.prototype.extract = function (url) { return url; };\n    /**\n     * @param {?} newUrlPart\n     * @param {?} wholeUrl\n     * @return {?}\n     */\n    DefaultUrlHandlingStrategy.prototype.merge = function (newUrlPart, wholeUrl) { return newUrlPart; };\n    return DefaultUrlHandlingStrategy;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} error\n * @return {?}\n */\nfunction defaultErrorHandler(error) {\n    throw error;\n}\n/**\n * \\@internal\n * @param {?} snapshot\n * @return {?}\n */\nfunction defaultRouterHook(snapshot) {\n    return (of(null));\n}\n/**\n * \\@whatItDoes Provides the navigation and url manipulation capabilities.\n *\n * See {\\@link Routes} for more details and examples.\n *\n * \\@ngModule RouterModule\n *\n * \\@stable\n */\nvar Router = (function () {\n    /**\n     * @param {?} rootComponentType\n     * @param {?} urlSerializer\n     * @param {?} rootContexts\n     * @param {?} location\n     * @param {?} injector\n     * @param {?} loader\n     * @param {?} compiler\n     * @param {?} config\n     */\n    function Router(rootComponentType, urlSerializer, rootContexts, location, injector, loader, compiler, config) {\n        var _this = this;\n        this.rootComponentType = rootComponentType;\n        this.urlSerializer = urlSerializer;\n        this.rootContexts = rootContexts;\n        this.location = location;\n        this.config = config;\n        this.navigations = new BehaviorSubject(/** @type {?} */ ((null)));\n        this.routerEvents = new Subject();\n        this.navigationId = 0;\n        /**\n         * Error handler that is invoked when a navigation errors.\n         *\n         * See {\\@link ErrorHandler} for more information.\n         */\n        this.errorHandler = defaultErrorHandler;\n        /**\n         * Indicates if at least one navigation happened.\n         */\n        this.navigated = false;\n        /**\n         * Used by RouterModule. This allows us to\n         * pause the navigation either before preactivation or after it.\n         * \\@internal\n         */\n        this.hooks = {\n            beforePreactivation: defaultRouterHook,\n            afterPreactivation: defaultRouterHook\n        };\n        /**\n         * Extracts and merges URLs. Used for AngularJS to Angular migrations.\n         */\n        this.urlHandlingStrategy = new DefaultUrlHandlingStrategy();\n        this.routeReuseStrategy = new DefaultRouteReuseStrategy();\n        var onLoadStart = function (r) { return _this.triggerEvent(new RouteConfigLoadStart(r)); };\n        var onLoadEnd = function (r) { return _this.triggerEvent(new RouteConfigLoadEnd(r)); };\n        this.ngModule = injector.get(NgModuleRef);\n        this.resetConfig(config);\n        this.currentUrlTree = createEmptyUrlTree();\n        this.rawUrlTree = this.currentUrlTree;\n        this.configLoader = new RouterConfigLoader(loader, compiler, onLoadStart, onLoadEnd);\n        this.currentRouterState = createEmptyState(this.currentUrlTree, this.rootComponentType);\n        this.processNavigations();\n    }\n    /**\n     * \\@internal\n     * TODO: this should be removed once the constructor of the router made internal\n     * @param {?} rootComponentType\n     * @return {?}\n     */\n    Router.prototype.resetRootComponentType = function (rootComponentType) {\n        this.rootComponentType = rootComponentType;\n        // TODO: vsavkin router 4.0 should make the root component set to null\n        // this will simplify the lifecycle of the router.\n        this.currentRouterState.root.component = this.rootComponentType;\n    };\n    /**\n     * Sets up the location change listener and performs the initial navigation.\n     * @return {?}\n     */\n    Router.prototype.initialNavigation = function () {\n        this.setUpLocationChangeListener();\n        if (this.navigationId === 0) {\n            this.navigateByUrl(this.location.path(true), { replaceUrl: true });\n        }\n    };\n    /**\n     * Sets up the location change listener.\n     * @return {?}\n     */\n    Router.prototype.setUpLocationChangeListener = function () {\n        var _this = this;\n        // Zone.current.wrap is needed because of the issue with RxJS scheduler,\n        // which does not work properly with zone.js in IE and Safari\n        if (!this.locationSubscription) {\n            this.locationSubscription = (this.location.subscribe(Zone.current.wrap(function (change) {\n                var /** @type {?} */ rawUrlTree = _this.urlSerializer.parse(change['url']);\n                var /** @type {?} */ source = change['type'] === 'popstate' ? 'popstate' : 'hashchange';\n                setTimeout(function () { _this.scheduleNavigation(rawUrlTree, source, { replaceUrl: true }); }, 0);\n            })));\n        }\n    };\n    Object.defineProperty(Router.prototype, \"routerState\", {\n        /**\n         * The current route state\n         * @return {?}\n         */\n        get: function () { return this.currentRouterState; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Router.prototype, \"url\", {\n        /**\n         * The current url\n         * @return {?}\n         */\n        get: function () { return this.serializeUrl(this.currentUrlTree); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Router.prototype, \"events\", {\n        /**\n         * An observable of router events\n         * @return {?}\n         */\n        get: function () { return this.routerEvents; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * \\@internal\n     * @param {?} e\n     * @return {?}\n     */\n    Router.prototype.triggerEvent = function (e) { this.routerEvents.next(e); };\n    /**\n     * Resets the configuration used for navigation and generating links.\n     *\n     * ### Usage\n     *\n     * ```\n     * router.resetConfig([\n     *  { path: 'team/:id', component: TeamCmp, children: [\n     *    { path: 'simple', component: SimpleCmp },\n     *    { path: 'user/:name', component: UserCmp }\n     *  ]}\n     * ]);\n     * ```\n     * @param {?} config\n     * @return {?}\n     */\n    Router.prototype.resetConfig = function (config) {\n        validateConfig(config);\n        this.config = config;\n        this.navigated = false;\n    };\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    Router.prototype.ngOnDestroy = function () { this.dispose(); };\n    /**\n     * Disposes of the router\n     * @return {?}\n     */\n    Router.prototype.dispose = function () {\n        if (this.locationSubscription) {\n            this.locationSubscription.unsubscribe();\n            this.locationSubscription = ((null));\n        }\n    };\n    /**\n     * Applies an array of commands to the current url tree and creates a new url tree.\n     *\n     * When given an activate route, applies the given commands starting from the route.\n     * When not given a route, applies the given command starting from the root.\n     *\n     * ### Usage\n     *\n     * ```\n     * // create /team/33/user/11\n     * router.createUrlTree(['/team', 33, 'user', 11]);\n     *\n     * // create /team/33;expand=true/user/11\n     * router.createUrlTree(['/team', 33, {expand: true}, 'user', 11]);\n     *\n     * // you can collapse static segments like this (this works only with the first passed-in value):\n     * router.createUrlTree(['/team/33/user', userId]);\n     *\n     * // If the first segment can contain slashes, and you do not want the router to split it, you\n     * // can do the following:\n     *\n     * router.createUrlTree([{segmentPath: '/one/two'}]);\n     *\n     * // create /team/33/(user/11//right:chat)\n     * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: 'chat'}}]);\n     *\n     * // remove the right secondary node\n     * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: null}}]);\n     *\n     * // assuming the current url is `/team/33/user/11` and the route points to `user/11`\n     *\n     * // navigate to /team/33/user/11/details\n     * router.createUrlTree(['details'], {relativeTo: route});\n     *\n     * // navigate to /team/33/user/22\n     * router.createUrlTree(['../22'], {relativeTo: route});\n     *\n     * // navigate to /team/44/user/22\n     * router.createUrlTree(['../../team/44/user/22'], {relativeTo: route});\n     * ```\n     * @param {?} commands\n     * @param {?=} navigationExtras\n     * @return {?}\n     */\n    Router.prototype.createUrlTree = function (commands, navigationExtras) {\n        if (navigationExtras === void 0) { navigationExtras = {}; }\n        var relativeTo = navigationExtras.relativeTo, queryParams = navigationExtras.queryParams, fragment = navigationExtras.fragment, preserveQueryParams = navigationExtras.preserveQueryParams, queryParamsHandling = navigationExtras.queryParamsHandling, preserveFragment = navigationExtras.preserveFragment;\n        if (isDevMode() && preserveQueryParams && (console) && (console.warn)) {\n            console.warn('preserveQueryParams is deprecated, use queryParamsHandling instead.');\n        }\n        var /** @type {?} */ a = relativeTo || this.routerState.root;\n        var /** @type {?} */ f = preserveFragment ? this.currentUrlTree.fragment : fragment;\n        var /** @type {?} */ q = null;\n        if (queryParamsHandling) {\n            switch (queryParamsHandling) {\n                case 'merge':\n                    q = Object.assign({}, this.currentUrlTree.queryParams, queryParams);\n                    break;\n                case 'preserve':\n                    q = this.currentUrlTree.queryParams;\n                    break;\n                default:\n                    q = queryParams || null;\n            }\n        }\n        else {\n            q = preserveQueryParams ? this.currentUrlTree.queryParams : queryParams || null;\n        }\n        return createUrlTree(a, this.currentUrlTree, commands, /** @type {?} */ ((q)), /** @type {?} */ ((f)));\n    };\n    /**\n     * Navigate based on the provided url. This navigation is always absolute.\n     *\n     * Returns a promise that:\n     * - resolves to 'true' when navigation succeeds,\n     * - resolves to 'false' when navigation fails,\n     * - is rejected when an error happens.\n     *\n     * ### Usage\n     *\n     * ```\n     * router.navigateByUrl(\"/team/33/user/11\");\n     *\n     * // Navigate without updating the URL\n     * router.navigateByUrl(\"/team/33/user/11\", { skipLocationChange: true });\n     * ```\n     *\n     * In opposite to `navigate`, `navigateByUrl` takes a whole URL\n     * and does not apply any delta to the current one.\n     * @param {?} url\n     * @param {?=} extras\n     * @return {?}\n     */\n    Router.prototype.navigateByUrl = function (url, extras) {\n        if (extras === void 0) { extras = { skipLocationChange: false }; }\n        var /** @type {?} */ urlTree = url instanceof UrlTree ? url : this.parseUrl(url);\n        var /** @type {?} */ mergedTree = this.urlHandlingStrategy.merge(urlTree, this.rawUrlTree);\n        return this.scheduleNavigation(mergedTree, 'imperative', extras);\n    };\n    /**\n     * Navigate based on the provided array of commands and a starting point.\n     * If no starting route is provided, the navigation is absolute.\n     *\n     * Returns a promise that:\n     * - resolves to 'true' when navigation succeeds,\n     * - resolves to 'false' when navigation fails,\n     * - is rejected when an error happens.\n     *\n     * ### Usage\n     *\n     * ```\n     * router.navigate(['team', 33, 'user', 11], {relativeTo: route});\n     *\n     * // Navigate without updating the URL\n     * router.navigate(['team', 33, 'user', 11], {relativeTo: route, skipLocationChange: true});\n     * ```\n     *\n     * In opposite to `navigateByUrl`, `navigate` always takes a delta that is applied to the current\n     * URL.\n     * @param {?} commands\n     * @param {?=} extras\n     * @return {?}\n     */\n    Router.prototype.navigate = function (commands, extras) {\n        if (extras === void 0) { extras = { skipLocationChange: false }; }\n        validateCommands(commands);\n        if (typeof extras.queryParams === 'object' && extras.queryParams !== null) {\n            extras.queryParams = this.removeEmptyProps(extras.queryParams);\n        }\n        return this.navigateByUrl(this.createUrlTree(commands, extras), extras);\n    };\n    /**\n     * Serializes a {\\@link UrlTree} into a string\n     * @param {?} url\n     * @return {?}\n     */\n    Router.prototype.serializeUrl = function (url) { return this.urlSerializer.serialize(url); };\n    /**\n     * Parses a string into a {\\@link UrlTree}\n     * @param {?} url\n     * @return {?}\n     */\n    Router.prototype.parseUrl = function (url) { return this.urlSerializer.parse(url); };\n    /**\n     * Returns whether the url is activated\n     * @param {?} url\n     * @param {?} exact\n     * @return {?}\n     */\n    Router.prototype.isActive = function (url, exact) {\n        if (url instanceof UrlTree) {\n            return containsTree(this.currentUrlTree, url, exact);\n        }\n        var /** @type {?} */ urlTree = this.urlSerializer.parse(url);\n        return containsTree(this.currentUrlTree, urlTree, exact);\n    };\n    /**\n     * @param {?} params\n     * @return {?}\n     */\n    Router.prototype.removeEmptyProps = function (params) {\n        return Object.keys(params).reduce(function (result, key) {\n            var /** @type {?} */ value = params[key];\n            if (value !== null && value !== undefined) {\n                result[key] = value;\n            }\n            return result;\n        }, {});\n    };\n    /**\n     * @return {?}\n     */\n    Router.prototype.processNavigations = function () {\n        var _this = this;\n        concatMap\n            .call(this.navigations, function (nav) {\n            if (nav) {\n                _this.executeScheduledNavigation(nav);\n                // a failed navigation should not stop the router from processing\n                // further navigations => the catch\n                return nav.promise.catch(function () { });\n            }\n            else {\n                return (of(null));\n            }\n        })\n            .subscribe(function () { });\n    };\n    /**\n     * @param {?} rawUrl\n     * @param {?} source\n     * @param {?} extras\n     * @return {?}\n     */\n    Router.prototype.scheduleNavigation = function (rawUrl, source, extras) {\n        var /** @type {?} */ lastNavigation = this.navigations.value;\n        // If the user triggers a navigation imperatively (e.g., by using navigateByUrl),\n        // and that navigation results in 'replaceState' that leads to the same URL,\n        // we should skip those.\n        if (lastNavigation && source !== 'imperative' && lastNavigation.source === 'imperative' &&\n            lastNavigation.rawUrl.toString() === rawUrl.toString()) {\n            return Promise.resolve(true); // return value is not used\n        }\n        // Because of a bug in IE and Edge, the location class fires two events (popstate and\n        // hashchange) every single time. The second one should be ignored. Otherwise, the URL will\n        // flicker.\n        if (lastNavigation && source == 'hashchange' && lastNavigation.source === 'popstate' &&\n            lastNavigation.rawUrl.toString() === rawUrl.toString()) {\n            return Promise.resolve(true); // return value is not used\n        }\n        var /** @type {?} */ resolve = null;\n        var /** @type {?} */ reject = null;\n        var /** @type {?} */ promise = new Promise(function (res, rej) {\n            resolve = res;\n            reject = rej;\n        });\n        var /** @type {?} */ id = ++this.navigationId;\n        this.navigations.next({ id: id, source: source, rawUrl: rawUrl, extras: extras, resolve: resolve, reject: reject, promise: promise });\n        // Make sure that the error is propagated even though `processNavigations` catch\n        // handler does not rethrow\n        return promise.catch(function (e) { return Promise.reject(e); });\n    };\n    /**\n     * @param {?} __0\n     * @return {?}\n     */\n    Router.prototype.executeScheduledNavigation = function (_a) {\n        var _this = this;\n        var id = _a.id, rawUrl = _a.rawUrl, extras = _a.extras, resolve = _a.resolve, reject = _a.reject;\n        var /** @type {?} */ url = this.urlHandlingStrategy.extract(rawUrl);\n        var /** @type {?} */ urlTransition = !this.navigated || url.toString() !== this.currentUrlTree.toString();\n        if (urlTransition && this.urlHandlingStrategy.shouldProcessUrl(rawUrl)) {\n            this.routerEvents.next(new NavigationStart(id, this.serializeUrl(url)));\n            Promise.resolve()\n                .then(function (_) { return _this.runNavigate(url, rawUrl, !!extras.skipLocationChange, !!extras.replaceUrl, id, null); })\n                .then(resolve, reject);\n            // we cannot process the current URL, but we could process the previous one =>\n            // we need to do some cleanup\n        }\n        else if (urlTransition && this.rawUrlTree &&\n            this.urlHandlingStrategy.shouldProcessUrl(this.rawUrlTree)) {\n            this.routerEvents.next(new NavigationStart(id, this.serializeUrl(url)));\n            Promise.resolve()\n                .then(function (_) { return _this.runNavigate(url, rawUrl, false, false, id, createEmptyState(url, _this.rootComponentType).snapshot); })\n                .then(resolve, reject);\n        }\n        else {\n            this.rawUrlTree = rawUrl;\n            resolve(null);\n        }\n    };\n    /**\n     * @param {?} url\n     * @param {?} rawUrl\n     * @param {?} shouldPreventPushState\n     * @param {?} shouldReplaceUrl\n     * @param {?} id\n     * @param {?} precreatedState\n     * @return {?}\n     */\n    Router.prototype.runNavigate = function (url, rawUrl, shouldPreventPushState, shouldReplaceUrl, id, precreatedState) {\n        var _this = this;\n        if (id !== this.navigationId) {\n            this.location.go(this.urlSerializer.serialize(this.currentUrlTree));\n            this.routerEvents.next(new NavigationCancel(id, this.serializeUrl(url), \"Navigation ID \" + id + \" is not equal to the current navigation id \" + this.navigationId));\n            return Promise.resolve(false);\n        }\n        return new Promise(function (resolvePromise, rejectPromise) {\n            // create an observable of the url and route state snapshot\n            // this operation do not result in any side effects\n            var /** @type {?} */ urlAndSnapshot$;\n            if (!precreatedState) {\n                var /** @type {?} */ moduleInjector = _this.ngModule.injector;\n                var /** @type {?} */ redirectsApplied$ = applyRedirects(moduleInjector, _this.configLoader, _this.urlSerializer, url, _this.config);\n                urlAndSnapshot$ = mergeMap.call(redirectsApplied$, function (appliedUrl) {\n                    return map.call(recognize(_this.rootComponentType, _this.config, appliedUrl, _this.serializeUrl(appliedUrl)), function (snapshot) {\n                        _this.routerEvents.next(new RoutesRecognized(id, _this.serializeUrl(url), _this.serializeUrl(appliedUrl), snapshot));\n                        return { appliedUrl: appliedUrl, snapshot: snapshot };\n                    });\n                });\n            }\n            else {\n                urlAndSnapshot$ = of({ appliedUrl: url, snapshot: precreatedState });\n            }\n            var /** @type {?} */ beforePreactivationDone$ = mergeMap.call(urlAndSnapshot$, function (p) {\n                return map.call(_this.hooks.beforePreactivation(p.snapshot), function () { return p; });\n            });\n            // run preactivation: guards and data resolvers\n            var /** @type {?} */ preActivation;\n            var /** @type {?} */ preactivationTraverse$ = map.call(beforePreactivationDone$, function (_a) {\n                var appliedUrl = _a.appliedUrl, snapshot = _a.snapshot;\n                var /** @type {?} */ moduleInjector = _this.ngModule.injector;\n                preActivation =\n                    new PreActivation(snapshot, _this.currentRouterState.snapshot, moduleInjector);\n                preActivation.traverse(_this.rootContexts);\n                return { appliedUrl: appliedUrl, snapshot: snapshot };\n            });\n            var /** @type {?} */ preactivationCheckGuards$ = mergeMap.call(preactivationTraverse$, function (_a) {\n                var appliedUrl = _a.appliedUrl, snapshot = _a.snapshot;\n                if (_this.navigationId !== id)\n                    return of(false);\n                _this.triggerEvent(new GuardsCheckStart(id, _this.serializeUrl(url), appliedUrl, snapshot));\n                return map.call(preActivation.checkGuards(), function (shouldActivate) {\n                    _this.triggerEvent(new GuardsCheckEnd(id, _this.serializeUrl(url), appliedUrl, snapshot, shouldActivate));\n                    return { appliedUrl: appliedUrl, snapshot: snapshot, shouldActivate: shouldActivate };\n                });\n            });\n            var /** @type {?} */ preactivationResolveData$ = mergeMap.call(preactivationCheckGuards$, function (p) {\n                if (_this.navigationId !== id)\n                    return of(false);\n                if (p.shouldActivate && preActivation.isActivating()) {\n                    _this.triggerEvent(new ResolveStart(id, _this.serializeUrl(url), p.appliedUrl, p.snapshot));\n                    return map.call(preActivation.resolveData(), function () {\n                        _this.triggerEvent(new ResolveEnd(id, _this.serializeUrl(url), p.appliedUrl, p.snapshot));\n                        return p;\n                    });\n                }\n                else {\n                    return of(p);\n                }\n            });\n            var /** @type {?} */ preactivationDone$ = mergeMap.call(preactivationResolveData$, function (p) {\n                return map.call(_this.hooks.afterPreactivation(p.snapshot), function () { return p; });\n            });\n            // create router state\n            // this operation has side effects => route state is being affected\n            var /** @type {?} */ routerState$ = map.call(preactivationDone$, function (_a) {\n                var appliedUrl = _a.appliedUrl, snapshot = _a.snapshot, shouldActivate = _a.shouldActivate;\n                if (shouldActivate) {\n                    var /** @type {?} */ state = createRouterState(_this.routeReuseStrategy, snapshot, _this.currentRouterState);\n                    return { appliedUrl: appliedUrl, state: state, shouldActivate: shouldActivate };\n                }\n                else {\n                    return { appliedUrl: appliedUrl, state: null, shouldActivate: shouldActivate };\n                }\n            });\n            // applied the new router state\n            // this operation has side effects\n            var /** @type {?} */ navigationIsSuccessful;\n            var /** @type {?} */ storedState = _this.currentRouterState;\n            var /** @type {?} */ storedUrl = _this.currentUrlTree;\n            routerState$\n                .forEach(function (_a) {\n                var appliedUrl = _a.appliedUrl, state = _a.state, shouldActivate = _a.shouldActivate;\n                if (!shouldActivate || id !== _this.navigationId) {\n                    navigationIsSuccessful = false;\n                    return;\n                }\n                _this.currentUrlTree = appliedUrl;\n                _this.rawUrlTree = _this.urlHandlingStrategy.merge(_this.currentUrlTree, rawUrl);\n                _this.currentRouterState = state;\n                if (!shouldPreventPushState) {\n                    var /** @type {?} */ path = _this.urlSerializer.serialize(_this.rawUrlTree);\n                    if (_this.location.isCurrentPathEqualTo(path) || shouldReplaceUrl) {\n                        _this.location.replaceState(path);\n                    }\n                    else {\n                        _this.location.go(path);\n                    }\n                }\n                new ActivateRoutes(_this.routeReuseStrategy, state, storedState)\n                    .activate(_this.rootContexts);\n                navigationIsSuccessful = true;\n            })\n                .then(function () {\n                if (navigationIsSuccessful) {\n                    _this.navigated = true;\n                    _this.routerEvents.next(new NavigationEnd(id, _this.serializeUrl(url), _this.serializeUrl(_this.currentUrlTree)));\n                    resolvePromise(true);\n                }\n                else {\n                    _this.resetUrlToCurrentUrlTree();\n                    _this.routerEvents.next(new NavigationCancel(id, _this.serializeUrl(url), ''));\n                    resolvePromise(false);\n                }\n            }, function (e) {\n                if (isNavigationCancelingError(e)) {\n                    _this.resetUrlToCurrentUrlTree();\n                    _this.navigated = true;\n                    _this.routerEvents.next(new NavigationCancel(id, _this.serializeUrl(url), e.message));\n                    resolvePromise(false);\n                }\n                else {\n                    _this.routerEvents.next(new NavigationError(id, _this.serializeUrl(url), e));\n                    try {\n                        resolvePromise(_this.errorHandler(e));\n                    }\n                    catch (ee) {\n                        rejectPromise(ee);\n                    }\n                }\n                _this.currentRouterState = storedState;\n                _this.currentUrlTree = storedUrl;\n                _this.rawUrlTree = _this.urlHandlingStrategy.merge(_this.currentUrlTree, rawUrl);\n                _this.location.replaceState(_this.serializeUrl(_this.rawUrlTree));\n            });\n        });\n    };\n    /**\n     * @return {?}\n     */\n    Router.prototype.resetUrlToCurrentUrlTree = function () {\n        var /** @type {?} */ path = this.urlSerializer.serialize(this.rawUrlTree);\n        this.location.replaceState(path);\n    };\n    return Router;\n}());\nvar CanActivate = (function () {\n    /**\n     * @param {?} path\n     */\n    function CanActivate(path) {\n        this.path = path;\n    }\n    Object.defineProperty(CanActivate.prototype, \"route\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.path[this.path.length - 1]; },\n        enumerable: true,\n        configurable: true\n    });\n    return CanActivate;\n}());\nvar CanDeactivate = (function () {\n    /**\n     * @param {?} component\n     * @param {?} route\n     */\n    function CanDeactivate(component, route) {\n        this.component = component;\n        this.route = route;\n    }\n    return CanDeactivate;\n}());\nvar PreActivation = (function () {\n    /**\n     * @param {?} future\n     * @param {?} curr\n     * @param {?} moduleInjector\n     */\n    function PreActivation(future, curr, moduleInjector) {\n        this.future = future;\n        this.curr = curr;\n        this.moduleInjector = moduleInjector;\n        this.canActivateChecks = [];\n        this.canDeactivateChecks = [];\n    }\n    /**\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    PreActivation.prototype.traverse = function (parentContexts) {\n        var /** @type {?} */ futureRoot = this.future._root;\n        var /** @type {?} */ currRoot = this.curr ? this.curr._root : null;\n        this.traverseChildRoutes(futureRoot, currRoot, parentContexts, [futureRoot.value]);\n    };\n    /**\n     * @return {?}\n     */\n    PreActivation.prototype.checkGuards = function () {\n        var _this = this;\n        if (!this.isDeactivating() && !this.isActivating()) {\n            return of(true);\n        }\n        var /** @type {?} */ canDeactivate$ = this.runCanDeactivateChecks();\n        return mergeMap.call(canDeactivate$, function (canDeactivate) { return canDeactivate ? _this.runCanActivateChecks() : of(false); });\n    };\n    /**\n     * @return {?}\n     */\n    PreActivation.prototype.resolveData = function () {\n        var _this = this;\n        if (!this.isActivating())\n            return of(null);\n        var /** @type {?} */ checks$ = from(this.canActivateChecks);\n        var /** @type {?} */ runningChecks$ = concatMap.call(checks$, function (check) { return _this.runResolve(check.route); });\n        return reduce.call(runningChecks$, function (_, __) { return _; });\n    };\n    /**\n     * @return {?}\n     */\n    PreActivation.prototype.isDeactivating = function () { return this.canDeactivateChecks.length !== 0; };\n    /**\n     * @return {?}\n     */\n    PreActivation.prototype.isActivating = function () { return this.canActivateChecks.length !== 0; };\n    /**\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} contexts\n     * @param {?} futurePath\n     * @return {?}\n     */\n    PreActivation.prototype.traverseChildRoutes = function (futureNode, currNode, contexts, futurePath) {\n        var _this = this;\n        var /** @type {?} */ prevChildren = nodeChildrenAsMap(currNode);\n        // Process the children of the future route\n        futureNode.children.forEach(function (c) {\n            _this.traverseRoutes(c, prevChildren[c.value.outlet], contexts, futurePath.concat([c.value]));\n            delete prevChildren[c.value.outlet];\n        });\n        // Process any children left from the current route (not active for the future route)\n        forEach(prevChildren, function (v, k) { return _this.deactivateRouteAndItsChildren(v, /** @type {?} */ ((contexts)).getContext(k)); });\n    };\n    /**\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} parentContexts\n     * @param {?} futurePath\n     * @return {?}\n     */\n    PreActivation.prototype.traverseRoutes = function (futureNode, currNode, parentContexts, futurePath) {\n        var /** @type {?} */ future = futureNode.value;\n        var /** @type {?} */ curr = currNode ? currNode.value : null;\n        var /** @type {?} */ context = parentContexts ? parentContexts.getContext(futureNode.value.outlet) : null;\n        // reusing the node\n        if (curr && future._routeConfig === curr._routeConfig) {\n            var /** @type {?} */ shouldRunGuardsAndResolvers = this.shouldRunGuardsAndResolvers(curr, future, /** @type {?} */ ((future._routeConfig)).runGuardsAndResolvers);\n            if (shouldRunGuardsAndResolvers) {\n                this.canActivateChecks.push(new CanActivate(futurePath));\n            }\n            else {\n                // we need to set the data\n                future.data = curr.data;\n                future._resolvedData = curr._resolvedData;\n            }\n            // If we have a component, we need to go through an outlet.\n            if (future.component) {\n                this.traverseChildRoutes(futureNode, currNode, context ? context.children : null, futurePath);\n                // if we have a componentless route, we recurse but keep the same outlet map.\n            }\n            else {\n                this.traverseChildRoutes(futureNode, currNode, parentContexts, futurePath);\n            }\n            if (shouldRunGuardsAndResolvers) {\n                var /** @type {?} */ outlet = ((((context)).outlet));\n                this.canDeactivateChecks.push(new CanDeactivate(outlet.component, curr));\n            }\n        }\n        else {\n            if (curr) {\n                this.deactivateRouteAndItsChildren(currNode, context);\n            }\n            this.canActivateChecks.push(new CanActivate(futurePath));\n            // If we have a component, we need to go through an outlet.\n            if (future.component) {\n                this.traverseChildRoutes(futureNode, null, context ? context.children : null, futurePath);\n                // if we have a componentless route, we recurse but keep the same outlet map.\n            }\n            else {\n                this.traverseChildRoutes(futureNode, null, parentContexts, futurePath);\n            }\n        }\n    };\n    /**\n     * @param {?} curr\n     * @param {?} future\n     * @param {?} mode\n     * @return {?}\n     */\n    PreActivation.prototype.shouldRunGuardsAndResolvers = function (curr, future, mode) {\n        switch (mode) {\n            case 'always':\n                return true;\n            case 'paramsOrQueryParamsChange':\n                return !equalParamsAndUrlSegments(curr, future) ||\n                    !shallowEqual(curr.queryParams, future.queryParams);\n            case 'paramsChange':\n            default:\n                return !equalParamsAndUrlSegments(curr, future);\n        }\n    };\n    /**\n     * @param {?} route\n     * @param {?} context\n     * @return {?}\n     */\n    PreActivation.prototype.deactivateRouteAndItsChildren = function (route, context) {\n        var _this = this;\n        var /** @type {?} */ children = nodeChildrenAsMap(route);\n        var /** @type {?} */ r = route.value;\n        forEach(children, function (node, childName) {\n            if (!r.component) {\n                _this.deactivateRouteAndItsChildren(node, context);\n            }\n            else if (context) {\n                _this.deactivateRouteAndItsChildren(node, context.children.getContext(childName));\n            }\n            else {\n                _this.deactivateRouteAndItsChildren(node, null);\n            }\n        });\n        if (!r.component) {\n            this.canDeactivateChecks.push(new CanDeactivate(null, r));\n        }\n        else if (context && context.outlet && context.outlet.isActivated) {\n            this.canDeactivateChecks.push(new CanDeactivate(context.outlet.component, r));\n        }\n        else {\n            this.canDeactivateChecks.push(new CanDeactivate(null, r));\n        }\n    };\n    /**\n     * @return {?}\n     */\n    PreActivation.prototype.runCanDeactivateChecks = function () {\n        var _this = this;\n        var /** @type {?} */ checks$ = from(this.canDeactivateChecks);\n        var /** @type {?} */ runningChecks$ = mergeMap.call(checks$, function (check) { return _this.runCanDeactivate(check.component, check.route); });\n        return every.call(runningChecks$, function (result) { return result === true; });\n    };\n    /**\n     * @return {?}\n     */\n    PreActivation.prototype.runCanActivateChecks = function () {\n        var _this = this;\n        var /** @type {?} */ checks$ = from(this.canActivateChecks);\n        var /** @type {?} */ runningChecks$ = concatMap.call(checks$, function (check) { return andObservables(from([_this.runCanActivateChild(check.path), _this.runCanActivate(check.route)])); });\n        return every.call(runningChecks$, function (result) { return result === true; });\n    };\n    /**\n     * @param {?} future\n     * @return {?}\n     */\n    PreActivation.prototype.runCanActivate = function (future) {\n        var _this = this;\n        var /** @type {?} */ canActivate = future._routeConfig ? future._routeConfig.canActivate : null;\n        if (!canActivate || canActivate.length === 0)\n            return of(true);\n        var /** @type {?} */ obs = map.call(from(canActivate), function (c) {\n            var /** @type {?} */ guard = _this.getToken(c, future);\n            var /** @type {?} */ observable;\n            if (guard.canActivate) {\n                observable = wrapIntoObservable(guard.canActivate(future, _this.future));\n            }\n            else {\n                observable = wrapIntoObservable(guard(future, _this.future));\n            }\n            return first.call(observable);\n        });\n        return andObservables(obs);\n    };\n    /**\n     * @param {?} path\n     * @return {?}\n     */\n    PreActivation.prototype.runCanActivateChild = function (path) {\n        var _this = this;\n        var /** @type {?} */ future = path[path.length - 1];\n        var /** @type {?} */ canActivateChildGuards = path.slice(0, path.length - 1)\n            .reverse()\n            .map(function (p) { return _this.extractCanActivateChild(p); })\n            .filter(function (_) { return _ !== null; });\n        return andObservables(map.call(from(canActivateChildGuards), function (d) {\n            var /** @type {?} */ obs = map.call(from(d.guards), function (c) {\n                var /** @type {?} */ guard = _this.getToken(c, d.node);\n                var /** @type {?} */ observable;\n                if (guard.canActivateChild) {\n                    observable = wrapIntoObservable(guard.canActivateChild(future, _this.future));\n                }\n                else {\n                    observable = wrapIntoObservable(guard(future, _this.future));\n                }\n                return first.call(observable);\n            });\n            return andObservables(obs);\n        }));\n    };\n    /**\n     * @param {?} p\n     * @return {?}\n     */\n    PreActivation.prototype.extractCanActivateChild = function (p) {\n        var /** @type {?} */ canActivateChild = p._routeConfig ? p._routeConfig.canActivateChild : null;\n        if (!canActivateChild || canActivateChild.length === 0)\n            return null;\n        return { node: p, guards: canActivateChild };\n    };\n    /**\n     * @param {?} component\n     * @param {?} curr\n     * @return {?}\n     */\n    PreActivation.prototype.runCanDeactivate = function (component, curr) {\n        var _this = this;\n        var /** @type {?} */ canDeactivate = curr && curr._routeConfig ? curr._routeConfig.canDeactivate : null;\n        if (!canDeactivate || canDeactivate.length === 0)\n            return of(true);\n        var /** @type {?} */ canDeactivate$ = mergeMap.call(from(canDeactivate), function (c) {\n            var /** @type {?} */ guard = _this.getToken(c, curr);\n            var /** @type {?} */ observable;\n            if (guard.canDeactivate) {\n                observable =\n                    wrapIntoObservable(guard.canDeactivate(component, curr, _this.curr, _this.future));\n            }\n            else {\n                observable = wrapIntoObservable(guard(component, curr, _this.curr, _this.future));\n            }\n            return first.call(observable);\n        });\n        return every.call(canDeactivate$, function (result) { return result === true; });\n    };\n    /**\n     * @param {?} future\n     * @return {?}\n     */\n    PreActivation.prototype.runResolve = function (future) {\n        var /** @type {?} */ resolve = future._resolve;\n        return map.call(this.resolveNode(resolve, future), function (resolvedData) {\n            future._resolvedData = resolvedData;\n            future.data = Object.assign({}, future.data, inheritedParamsDataResolve(future).resolve);\n            return null;\n        });\n    };\n    /**\n     * @param {?} resolve\n     * @param {?} future\n     * @return {?}\n     */\n    PreActivation.prototype.resolveNode = function (resolve, future) {\n        var _this = this;\n        var /** @type {?} */ keys = Object.keys(resolve);\n        if (keys.length === 0) {\n            return of({});\n        }\n        if (keys.length === 1) {\n            var /** @type {?} */ key_1 = keys[0];\n            return map.call(this.getResolver(resolve[key_1], future), function (value) {\n                return _a = {}, _a[key_1] = value, _a;\n                var _a;\n            });\n        }\n        var /** @type {?} */ data = {};\n        var /** @type {?} */ runningResolvers$ = mergeMap.call(from(keys), function (key) {\n            return map.call(_this.getResolver(resolve[key], future), function (value) {\n                data[key] = value;\n                return value;\n            });\n        });\n        return map.call(last.call(runningResolvers$), function () { return data; });\n    };\n    /**\n     * @param {?} injectionToken\n     * @param {?} future\n     * @return {?}\n     */\n    PreActivation.prototype.getResolver = function (injectionToken, future) {\n        var /** @type {?} */ resolver = this.getToken(injectionToken, future);\n        return resolver.resolve ? wrapIntoObservable(resolver.resolve(future, this.future)) :\n            wrapIntoObservable(resolver(future, this.future));\n    };\n    /**\n     * @param {?} token\n     * @param {?} snapshot\n     * @return {?}\n     */\n    PreActivation.prototype.getToken = function (token, snapshot) {\n        var /** @type {?} */ config = closestLoadedConfig(snapshot);\n        var /** @type {?} */ injector = config ? config.module.injector : this.moduleInjector;\n        return injector.get(token);\n    };\n    return PreActivation;\n}());\nvar ActivateRoutes = (function () {\n    /**\n     * @param {?} routeReuseStrategy\n     * @param {?} futureState\n     * @param {?} currState\n     */\n    function ActivateRoutes(routeReuseStrategy, futureState, currState) {\n        this.routeReuseStrategy = routeReuseStrategy;\n        this.futureState = futureState;\n        this.currState = currState;\n    }\n    /**\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    ActivateRoutes.prototype.activate = function (parentContexts) {\n        var /** @type {?} */ futureRoot = this.futureState._root;\n        var /** @type {?} */ currRoot = this.currState ? this.currState._root : null;\n        this.deactivateChildRoutes(futureRoot, currRoot, parentContexts);\n        advanceActivatedRoute(this.futureState.root);\n        this.activateChildRoutes(futureRoot, currRoot, parentContexts);\n    };\n    /**\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} contexts\n     * @return {?}\n     */\n    ActivateRoutes.prototype.deactivateChildRoutes = function (futureNode, currNode, contexts) {\n        var _this = this;\n        var /** @type {?} */ children = nodeChildrenAsMap(currNode);\n        // Recurse on the routes active in the future state to de-activate deeper children\n        futureNode.children.forEach(function (futureChild) {\n            var /** @type {?} */ childOutletName = futureChild.value.outlet;\n            _this.deactivateRoutes(futureChild, children[childOutletName], contexts);\n            delete children[childOutletName];\n        });\n        // De-activate the routes that will not be re-used\n        forEach(children, function (v, childName) {\n            _this.deactivateRouteAndItsChildren(v, contexts);\n        });\n    };\n    /**\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} parentContext\n     * @return {?}\n     */\n    ActivateRoutes.prototype.deactivateRoutes = function (futureNode, currNode, parentContext) {\n        var /** @type {?} */ future = futureNode.value;\n        var /** @type {?} */ curr = currNode ? currNode.value : null;\n        if (future === curr) {\n            // Reusing the node, check to see if the children need to be de-activated\n            if (future.component) {\n                // If we have a normal route, we need to go through an outlet.\n                var /** @type {?} */ context = parentContext.getContext(future.outlet);\n                if (context) {\n                    this.deactivateChildRoutes(futureNode, currNode, context.children);\n                }\n            }\n            else {\n                // if we have a componentless route, we recurse but keep the same outlet map.\n                this.deactivateChildRoutes(futureNode, currNode, parentContext);\n            }\n        }\n        else {\n            if (curr) {\n                // Deactivate the current route which will not be re-used\n                this.deactivateRouteAndItsChildren(currNode, parentContext);\n            }\n        }\n    };\n    /**\n     * @param {?} route\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    ActivateRoutes.prototype.deactivateRouteAndItsChildren = function (route, parentContexts) {\n        if (this.routeReuseStrategy.shouldDetach(route.value.snapshot)) {\n            this.detachAndStoreRouteSubtree(route, parentContexts);\n        }\n        else {\n            this.deactivateRouteAndOutlet(route, parentContexts);\n        }\n    };\n    /**\n     * @param {?} route\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    ActivateRoutes.prototype.detachAndStoreRouteSubtree = function (route, parentContexts) {\n        var /** @type {?} */ context = parentContexts.getContext(route.value.outlet);\n        if (context && context.outlet) {\n            var /** @type {?} */ componentRef = context.outlet.detach();\n            var /** @type {?} */ contexts = context.children.onOutletDeactivated();\n            this.routeReuseStrategy.store(route.value.snapshot, { componentRef: componentRef, route: route, contexts: contexts });\n        }\n    };\n    /**\n     * @param {?} route\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    ActivateRoutes.prototype.deactivateRouteAndOutlet = function (route, parentContexts) {\n        var _this = this;\n        var /** @type {?} */ context = parentContexts.getContext(route.value.outlet);\n        if (context) {\n            var /** @type {?} */ children = nodeChildrenAsMap(route);\n            var /** @type {?} */ contexts_1 = route.value.component ? context.children : parentContexts;\n            forEach(children, function (v, k) { return _this.deactivateRouteAndItsChildren(v, contexts_1); });\n            if (context.outlet) {\n                // Destroy the component\n                context.outlet.deactivate();\n                // Destroy the contexts for all the outlets that were in the component\n                context.children.onOutletDeactivated();\n            }\n        }\n    };\n    /**\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} contexts\n     * @return {?}\n     */\n    ActivateRoutes.prototype.activateChildRoutes = function (futureNode, currNode, contexts) {\n        var _this = this;\n        var /** @type {?} */ children = nodeChildrenAsMap(currNode);\n        futureNode.children.forEach(function (c) { _this.activateRoutes(c, children[c.value.outlet], contexts); });\n    };\n    /**\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    ActivateRoutes.prototype.activateRoutes = function (futureNode, currNode, parentContexts) {\n        var /** @type {?} */ future = futureNode.value;\n        var /** @type {?} */ curr = currNode ? currNode.value : null;\n        advanceActivatedRoute(future);\n        // reusing the node\n        if (future === curr) {\n            if (future.component) {\n                // If we have a normal route, we need to go through an outlet.\n                var /** @type {?} */ context = parentContexts.getOrCreateContext(future.outlet);\n                this.activateChildRoutes(futureNode, currNode, context.children);\n            }\n            else {\n                // if we have a componentless route, we recurse but keep the same outlet map.\n                this.activateChildRoutes(futureNode, currNode, parentContexts);\n            }\n        }\n        else {\n            if (future.component) {\n                // if we have a normal route, we need to place the component into the outlet and recurse.\n                var /** @type {?} */ context = parentContexts.getOrCreateContext(future.outlet);\n                if (this.routeReuseStrategy.shouldAttach(future.snapshot)) {\n                    var /** @type {?} */ stored = ((this.routeReuseStrategy.retrieve(future.snapshot)));\n                    this.routeReuseStrategy.store(future.snapshot, null);\n                    context.children.onOutletReAttached(stored.contexts);\n                    context.attachRef = stored.componentRef;\n                    context.route = stored.route.value;\n                    if (context.outlet) {\n                        // Attach right away when the outlet has already been instantiated\n                        // Otherwise attach from `RouterOutlet.ngOnInit` when it is instantiated\n                        context.outlet.attach(stored.componentRef, stored.route.value);\n                    }\n                    advanceActivatedRouteNodeAndItsChildren(stored.route);\n                }\n                else {\n                    var /** @type {?} */ config = parentLoadedConfig(future.snapshot);\n                    var /** @type {?} */ cmpFactoryResolver = config ? config.module.componentFactoryResolver : null;\n                    context.route = future;\n                    context.resolver = cmpFactoryResolver;\n                    if (context.outlet) {\n                        // Activate the outlet when it has already been instantiated\n                        // Otherwise it will get activated from its `ngOnInit` when instantiated\n                        context.outlet.activateWith(future, cmpFactoryResolver);\n                    }\n                    this.activateChildRoutes(futureNode, null, context.children);\n                }\n            }\n            else {\n                // if we have a componentless route, we recurse but keep the same outlet map.\n                this.activateChildRoutes(futureNode, null, parentContexts);\n            }\n        }\n    };\n    return ActivateRoutes;\n}());\n/**\n * @param {?} node\n * @return {?}\n */\nfunction advanceActivatedRouteNodeAndItsChildren(node) {\n    advanceActivatedRoute(node.value);\n    node.children.forEach(advanceActivatedRouteNodeAndItsChildren);\n}\n/**\n * @param {?} snapshot\n * @return {?}\n */\nfunction parentLoadedConfig(snapshot) {\n    for (var /** @type {?} */ s = snapshot.parent; s; s = s.parent) {\n        var /** @type {?} */ route = s._routeConfig;\n        if (route && route._loadedConfig)\n            return route._loadedConfig;\n        if (route && route.component)\n            return null;\n    }\n    return null;\n}\n/**\n * @param {?} snapshot\n * @return {?}\n */\nfunction closestLoadedConfig(snapshot) {\n    if (!snapshot)\n        return null;\n    for (var /** @type {?} */ s = snapshot.parent; s; s = s.parent) {\n        var /** @type {?} */ route = s._routeConfig;\n        if (route && route._loadedConfig)\n            return route._loadedConfig;\n    }\n    return null;\n}\n/**\n * @template T\n * @param {?} node\n * @return {?}\n */\nfunction nodeChildrenAsMap(node) {\n    var /** @type {?} */ map$$1 = {};\n    if (node) {\n        node.children.forEach(function (child) { return map$$1[child.value.outlet] = child; });\n    }\n    return map$$1;\n}\n/**\n * @param {?} commands\n * @return {?}\n */\nfunction validateCommands(commands) {\n    for (var /** @type {?} */ i = 0; i < commands.length; i++) {\n        var /** @type {?} */ cmd = commands[i];\n        if (cmd == null) {\n            throw new Error(\"The requested path contains \" + cmd + \" segment at index \" + i);\n        }\n    }\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Lets you link to specific parts of your app.\n *\n * \\@howToUse\n *\n * Consider the following route configuration:\n * `[{ path: 'user/:name', component: UserCmp }]`\n *\n * When linking to this `user/:name` route, you can write:\n * `<a routerLink='/user/bob'>link to user component</a>`\n *\n * \\@description\n *\n * The RouterLink directives let you link to specific parts of your app.\n *\n * When the link is static, you can use the directive as follows:\n * `<a routerLink=\"/user/bob\">link to user component</a>`\n *\n * If you use dynamic values to generate the link, you can pass an array of path\n * segments, followed by the params for each segment.\n *\n * For instance `['/team', teamId, 'user', userName, {details: true}]`\n * means that we want to generate a link to `/team/11/user/bob;details=true`.\n *\n * Multiple static segments can be merged into one\n * (e.g., `['/team/11/user', userName, {details: true}]`).\n *\n * The first segment name can be prepended with `/`, `./`, or `../`:\n * * If the first segment begins with `/`, the router will look up the route from the root of the\n *   app.\n * * If the first segment begins with `./`, or doesn't begin with a slash, the router will\n *   instead look in the children of the current activated route.\n * * And if the first segment begins with `../`, the router will go up one level.\n *\n * You can set query params and fragment as follows:\n *\n * ```\n * <a [routerLink]=\"['/user/bob']\" [queryParams]=\"{debug: true}\" fragment=\"education\">\n *   link to user component\n * </a>\n * ```\n * RouterLink will use these to generate this link: `/user/bob#education?debug=true`.\n *\n * (Deprecated in v4.0.0 use `queryParamsHandling` instead) You can also tell the\n * directive to preserve the current query params and fragment:\n *\n * ```\n * <a [routerLink]=\"['/user/bob']\" preserveQueryParams preserveFragment>\n *   link to user component\n * </a>\n * ```\n *\n * You can tell the directive to how to handle queryParams, available options are:\n *  - 'merge' merge the queryParams into the current queryParams\n *  - 'preserve' preserve the current queryParams\n *  - default / '' use the queryParams only\n *  same options for {\\@link NavigationExtras#queryParamsHandling}\n *\n * ```\n * <a [routerLink]=\"['/user/bob']\" [queryParams]=\"{debug: true}\" queryParamsHandling=\"merge\">\n *   link to user component\n * </a>\n * ```\n *\n * The router link directive always treats the provided input as a delta to the current url.\n *\n * For instance, if the current url is `/user/(box//aux:team)`.\n *\n * Then the following link `<a [routerLink]=\"['/user/jim']\">Jim</a>` will generate the link\n * `/user/(jim//aux:team)`.\n *\n * \\@ngModule RouterModule\n *\n * See {\\@link Router#createUrlTree} for more information.\n *\n * \\@stable\n */\nvar RouterLink = (function () {\n    /**\n     * @param {?} router\n     * @param {?} route\n     * @param {?} tabIndex\n     * @param {?} renderer\n     * @param {?} el\n     */\n    function RouterLink(router, route, tabIndex, renderer, el) {\n        this.router = router;\n        this.route = route;\n        this.commands = [];\n        if (tabIndex == null) {\n            renderer.setAttribute(el.nativeElement, 'tabindex', '0');\n        }\n    }\n    Object.defineProperty(RouterLink.prototype, \"routerLink\", {\n        /**\n         * @param {?} commands\n         * @return {?}\n         */\n        set: function (commands) {\n            if (commands != null) {\n                this.commands = Array.isArray(commands) ? commands : [commands];\n            }\n            else {\n                this.commands = [];\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterLink.prototype, \"preserveQueryParams\", {\n        /**\n         * @deprecated 4.0.0 use `queryParamsHandling` instead.\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            if (isDevMode() && (console) && (console.warn)) {\n                console.warn('preserveQueryParams is deprecated!, use queryParamsHandling instead.');\n            }\n            this.preserve = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    RouterLink.prototype.onClick = function () {\n        var /** @type {?} */ extras = {\n            skipLocationChange: attrBoolValue(this.skipLocationChange),\n            replaceUrl: attrBoolValue(this.replaceUrl),\n        };\n        this.router.navigateByUrl(this.urlTree, extras);\n        return true;\n    };\n    Object.defineProperty(RouterLink.prototype, \"urlTree\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return this.router.createUrlTree(this.commands, {\n                relativeTo: this.route,\n                queryParams: this.queryParams,\n                fragment: this.fragment,\n                preserveQueryParams: attrBoolValue(this.preserve),\n                queryParamsHandling: this.queryParamsHandling,\n                preserveFragment: attrBoolValue(this.preserveFragment),\n            });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return RouterLink;\n}());\nRouterLink.decorators = [\n    { type: Directive, args: [{ selector: ':not(a)[routerLink]' },] },\n];\n/**\n * @nocollapse\n */\nRouterLink.ctorParameters = function () { return [\n    { type: Router, },\n    { type: ActivatedRoute, },\n    { type: undefined, decorators: [{ type: Attribute, args: ['tabindex',] },] },\n    { type: Renderer2, },\n    { type: ElementRef, },\n]; };\nRouterLink.propDecorators = {\n    'queryParams': [{ type: Input },],\n    'fragment': [{ type: Input },],\n    'queryParamsHandling': [{ type: Input },],\n    'preserveFragment': [{ type: Input },],\n    'skipLocationChange': [{ type: Input },],\n    'replaceUrl': [{ type: Input },],\n    'routerLink': [{ type: Input },],\n    'preserveQueryParams': [{ type: Input },],\n    'onClick': [{ type: HostListener, args: ['click',] },],\n};\n/**\n * \\@whatItDoes Lets you link to specific parts of your app.\n *\n * See {\\@link RouterLink} for more information.\n *\n * \\@ngModule RouterModule\n *\n * \\@stable\n */\nvar RouterLinkWithHref = (function () {\n    /**\n     * @param {?} router\n     * @param {?} route\n     * @param {?} locationStrategy\n     */\n    function RouterLinkWithHref(router, route, locationStrategy) {\n        var _this = this;\n        this.router = router;\n        this.route = route;\n        this.locationStrategy = locationStrategy;\n        this.commands = [];\n        this.subscription = router.events.subscribe(function (s) {\n            if (s instanceof NavigationEnd) {\n                _this.updateTargetUrlAndHref();\n            }\n        });\n    }\n    Object.defineProperty(RouterLinkWithHref.prototype, \"routerLink\", {\n        /**\n         * @param {?} commands\n         * @return {?}\n         */\n        set: function (commands) {\n            if (commands != null) {\n                this.commands = Array.isArray(commands) ? commands : [commands];\n            }\n            else {\n                this.commands = [];\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterLinkWithHref.prototype, \"preserveQueryParams\", {\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            if (isDevMode() && (console) && (console.warn)) {\n                console.warn('preserveQueryParams is deprecated, use queryParamsHandling instead.');\n            }\n            this.preserve = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    RouterLinkWithHref.prototype.ngOnChanges = function (changes) { this.updateTargetUrlAndHref(); };\n    /**\n     * @return {?}\n     */\n    RouterLinkWithHref.prototype.ngOnDestroy = function () { this.subscription.unsubscribe(); };\n    /**\n     * @param {?} button\n     * @param {?} ctrlKey\n     * @param {?} metaKey\n     * @param {?} shiftKey\n     * @return {?}\n     */\n    RouterLinkWithHref.prototype.onClick = function (button, ctrlKey, metaKey, shiftKey) {\n        if (button !== 0 || ctrlKey || metaKey || shiftKey) {\n            return true;\n        }\n        if (typeof this.target === 'string' && this.target != '_self') {\n            return true;\n        }\n        var /** @type {?} */ extras = {\n            skipLocationChange: attrBoolValue(this.skipLocationChange),\n            replaceUrl: attrBoolValue(this.replaceUrl),\n        };\n        this.router.navigateByUrl(this.urlTree, extras);\n        return false;\n    };\n    /**\n     * @return {?}\n     */\n    RouterLinkWithHref.prototype.updateTargetUrlAndHref = function () {\n        this.href = this.locationStrategy.prepareExternalUrl(this.router.serializeUrl(this.urlTree));\n    };\n    Object.defineProperty(RouterLinkWithHref.prototype, \"urlTree\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return this.router.createUrlTree(this.commands, {\n                relativeTo: this.route,\n                queryParams: this.queryParams,\n                fragment: this.fragment,\n                preserveQueryParams: attrBoolValue(this.preserve),\n                queryParamsHandling: this.queryParamsHandling,\n                preserveFragment: attrBoolValue(this.preserveFragment),\n            });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return RouterLinkWithHref;\n}());\nRouterLinkWithHref.decorators = [\n    { type: Directive, args: [{ selector: 'a[routerLink]' },] },\n];\n/**\n * @nocollapse\n */\nRouterLinkWithHref.ctorParameters = function () { return [\n    { type: Router, },\n    { type: ActivatedRoute, },\n    { type: LocationStrategy, },\n]; };\nRouterLinkWithHref.propDecorators = {\n    'target': [{ type: HostBinding, args: ['attr.target',] }, { type: Input },],\n    'queryParams': [{ type: Input },],\n    'fragment': [{ type: Input },],\n    'queryParamsHandling': [{ type: Input },],\n    'preserveFragment': [{ type: Input },],\n    'skipLocationChange': [{ type: Input },],\n    'replaceUrl': [{ type: Input },],\n    'href': [{ type: HostBinding },],\n    'routerLink': [{ type: Input },],\n    'preserveQueryParams': [{ type: Input },],\n    'onClick': [{ type: HostListener, args: ['click', ['$event.button', '$event.ctrlKey', '$event.metaKey', '$event.shiftKey'],] },],\n};\n/**\n * @param {?} s\n * @return {?}\n */\nfunction attrBoolValue(s) {\n    return s === '' || !!s;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Lets you add a CSS class to an element when the link's route becomes active.\n *\n * \\@howToUse\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\">Bob</a>\n * ```\n *\n * \\@description\n *\n * The RouterLinkActive directive lets you add a CSS class to an element when the link's route\n * becomes active.\n *\n * Consider the following example:\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\">Bob</a>\n * ```\n *\n * When the url is either '/user' or '/user/bob', the active-link class will\n * be added to the `a` tag. If the url changes, the class will be removed.\n *\n * You can set more than one class, as follows:\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"class1 class2\">Bob</a>\n * <a routerLink=\"/user/bob\" [routerLinkActive]=\"['class1', 'class2']\">Bob</a>\n * ```\n *\n * You can configure RouterLinkActive by passing `exact: true`. This will add the classes\n * only when the url matches the link exactly.\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\" [routerLinkActiveOptions]=\"{exact:\n * true}\">Bob</a>\n * ```\n *\n * You can assign the RouterLinkActive instance to a template variable and directly check\n * the `isActive` status.\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive #rla=\"routerLinkActive\">\n *   Bob {{ rla.isActive ? '(already open)' : ''}}\n * </a>\n * ```\n *\n * Finally, you can apply the RouterLinkActive directive to an ancestor of a RouterLink.\n *\n * ```\n * <div routerLinkActive=\"active-link\" [routerLinkActiveOptions]=\"{exact: true}\">\n *   <a routerLink=\"/user/jim\">Jim</a>\n *   <a routerLink=\"/user/bob\">Bob</a>\n * </div>\n * ```\n *\n * This will set the active-link class on the div tag if the url is either '/user/jim' or\n * '/user/bob'.\n *\n * \\@ngModule RouterModule\n *\n * \\@stable\n */\nvar RouterLinkActive = (function () {\n    /**\n     * @param {?} router\n     * @param {?} element\n     * @param {?} renderer\n     * @param {?} cdr\n     */\n    function RouterLinkActive(router, element, renderer, cdr) {\n        var _this = this;\n        this.router = router;\n        this.element = element;\n        this.renderer = renderer;\n        this.cdr = cdr;\n        this.classes = [];\n        this.active = false;\n        this.routerLinkActiveOptions = { exact: false };\n        this.subscription = router.events.subscribe(function (s) {\n            if (s instanceof NavigationEnd) {\n                _this.update();\n            }\n        });\n    }\n    Object.defineProperty(RouterLinkActive.prototype, \"isActive\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.active; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    RouterLinkActive.prototype.ngAfterContentInit = function () {\n        var _this = this;\n        this.links.changes.subscribe(function (_) { return _this.update(); });\n        this.linksWithHrefs.changes.subscribe(function (_) { return _this.update(); });\n        this.update();\n    };\n    Object.defineProperty(RouterLinkActive.prototype, \"routerLinkActive\", {\n        /**\n         * @param {?} data\n         * @return {?}\n         */\n        set: function (data) {\n            var /** @type {?} */ classes = Array.isArray(data) ? data : data.split(' ');\n            this.classes = classes.filter(function (c) { return !!c; });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    RouterLinkActive.prototype.ngOnChanges = function (changes) { this.update(); };\n    /**\n     * @return {?}\n     */\n    RouterLinkActive.prototype.ngOnDestroy = function () { this.subscription.unsubscribe(); };\n    /**\n     * @return {?}\n     */\n    RouterLinkActive.prototype.update = function () {\n        var _this = this;\n        if (!this.links || !this.linksWithHrefs || !this.router.navigated)\n            return;\n        var /** @type {?} */ hasActiveLinks = this.hasActiveLinks();\n        // react only when status has changed to prevent unnecessary dom updates\n        if (this.active !== hasActiveLinks) {\n            this.classes.forEach(function (c) {\n                if (hasActiveLinks) {\n                    _this.renderer.addClass(_this.element.nativeElement, c);\n                }\n                else {\n                    _this.renderer.removeClass(_this.element.nativeElement, c);\n                }\n            });\n            Promise.resolve(hasActiveLinks).then(function (active) { return _this.active = active; });\n        }\n    };\n    /**\n     * @param {?} router\n     * @return {?}\n     */\n    RouterLinkActive.prototype.isLinkActive = function (router) {\n        var _this = this;\n        return function (link) { return router.isActive(link.urlTree, _this.routerLinkActiveOptions.exact); };\n    };\n    /**\n     * @return {?}\n     */\n    RouterLinkActive.prototype.hasActiveLinks = function () {\n        return this.links.some(this.isLinkActive(this.router)) ||\n            this.linksWithHrefs.some(this.isLinkActive(this.router));\n    };\n    return RouterLinkActive;\n}());\nRouterLinkActive.decorators = [\n    { type: Directive, args: [{\n                selector: '[routerLinkActive]',\n                exportAs: 'routerLinkActive',\n            },] },\n];\n/**\n * @nocollapse\n */\nRouterLinkActive.ctorParameters = function () { return [\n    { type: Router, },\n    { type: ElementRef, },\n    { type: Renderer2, },\n    { type: ChangeDetectorRef, },\n]; };\nRouterLinkActive.propDecorators = {\n    'links': [{ type: ContentChildren, args: [RouterLink, { descendants: true },] },],\n    'linksWithHrefs': [{ type: ContentChildren, args: [RouterLinkWithHref, { descendants: true },] },],\n    'routerLinkActiveOptions': [{ type: Input },],\n    'routerLinkActive': [{ type: Input },],\n};\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Store contextual information about a {\\@link RouterOutlet}\n *\n * \\@stable\n */\nvar OutletContext = (function () {\n    function OutletContext() {\n        this.outlet = null;\n        this.route = null;\n        this.resolver = null;\n        this.children = new ChildrenOutletContexts();\n        this.attachRef = null;\n    }\n    return OutletContext;\n}());\n/**\n * Store contextual information about the children (= nested) {\\@link RouterOutlet}\n *\n * \\@stable\n */\nvar ChildrenOutletContexts = (function () {\n    function ChildrenOutletContexts() {\n        this.contexts = new Map();\n    }\n    /**\n     * Called when a `RouterOutlet` directive is instantiated\n     * @param {?} childName\n     * @param {?} outlet\n     * @return {?}\n     */\n    ChildrenOutletContexts.prototype.onChildOutletCreated = function (childName, outlet) {\n        var /** @type {?} */ context = this.getOrCreateContext(childName);\n        context.outlet = outlet;\n        this.contexts.set(childName, context);\n    };\n    /**\n     * Called when a `RouterOutlet` directive is destroyed.\n     * We need to keep the context as the outlet could be destroyed inside a NgIf and might be\n     * re-created later.\n     * @param {?} childName\n     * @return {?}\n     */\n    ChildrenOutletContexts.prototype.onChildOutletDestroyed = function (childName) {\n        var /** @type {?} */ context = this.getContext(childName);\n        if (context) {\n            context.outlet = null;\n        }\n    };\n    /**\n     * Called when the corresponding route is deactivated during navigation.\n     * Because the component get destroyed, all children outlet are destroyed.\n     * @return {?}\n     */\n    ChildrenOutletContexts.prototype.onOutletDeactivated = function () {\n        var /** @type {?} */ contexts = this.contexts;\n        this.contexts = new Map();\n        return contexts;\n    };\n    /**\n     * @param {?} contexts\n     * @return {?}\n     */\n    ChildrenOutletContexts.prototype.onOutletReAttached = function (contexts) { this.contexts = contexts; };\n    /**\n     * @param {?} childName\n     * @return {?}\n     */\n    ChildrenOutletContexts.prototype.getOrCreateContext = function (childName) {\n        var /** @type {?} */ context = this.getContext(childName);\n        if (!context) {\n            context = new OutletContext();\n            this.contexts.set(childName, context);\n        }\n        return context;\n    };\n    /**\n     * @param {?} childName\n     * @return {?}\n     */\n    ChildrenOutletContexts.prototype.getContext = function (childName) { return this.contexts.get(childName) || null; };\n    return ChildrenOutletContexts;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Acts as a placeholder that Angular dynamically fills based on the current router\n * state.\n *\n * \\@howToUse\n *\n * ```\n * <router-outlet></router-outlet>\n * <router-outlet name='left'></router-outlet>\n * <router-outlet name='right'></router-outlet>\n * ```\n *\n * A router outlet will emit an activate event any time a new component is being instantiated,\n * and a deactivate event when it is being destroyed.\n *\n * ```\n * <router-outlet\n *   (activate)='onActivate($event)'\n *   (deactivate)='onDeactivate($event)'></router-outlet>\n * ```\n * \\@ngModule RouterModule\n *\n * \\@stable\n */\nvar RouterOutlet = (function () {\n    /**\n     * @param {?} parentContexts\n     * @param {?} location\n     * @param {?} resolver\n     * @param {?} name\n     * @param {?} changeDetector\n     */\n    function RouterOutlet(parentContexts, location, resolver, name, changeDetector) {\n        this.parentContexts = parentContexts;\n        this.location = location;\n        this.resolver = resolver;\n        this.changeDetector = changeDetector;\n        this.activated = null;\n        this._activatedRoute = null;\n        this.activateEvents = new EventEmitter();\n        this.deactivateEvents = new EventEmitter();\n        this.name = name || PRIMARY_OUTLET;\n        parentContexts.onChildOutletCreated(this.name, this);\n    }\n    /**\n     * @return {?}\n     */\n    RouterOutlet.prototype.ngOnDestroy = function () { this.parentContexts.onChildOutletDestroyed(this.name); };\n    /**\n     * @return {?}\n     */\n    RouterOutlet.prototype.ngOnInit = function () {\n        if (!this.activated) {\n            // If the outlet was not instantiated at the time the route got activated we need to populate\n            // the outlet when it is initialized (ie inside a NgIf)\n            var /** @type {?} */ context = this.parentContexts.getContext(this.name);\n            if (context && context.route) {\n                if (context.attachRef) {\n                    // `attachRef` is populated when there is an existing component to mount\n                    this.attach(context.attachRef, context.route);\n                }\n                else {\n                    // otherwise the component defined in the configuration is created\n                    this.activateWith(context.route, context.resolver || null);\n                }\n            }\n        }\n    };\n    Object.defineProperty(RouterOutlet.prototype, \"locationInjector\", {\n        /**\n         * @deprecated since v4 *\n         * @return {?}\n         */\n        get: function () { return this.location.injector; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterOutlet.prototype, \"locationFactoryResolver\", {\n        /**\n         * @deprecated since v4 *\n         * @return {?}\n         */\n        get: function () { return this.resolver; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterOutlet.prototype, \"isActivated\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return !!this.activated; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterOutlet.prototype, \"component\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            if (!this.activated)\n                throw new Error('Outlet is not activated');\n            return this.activated.instance;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterOutlet.prototype, \"activatedRoute\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            if (!this.activated)\n                throw new Error('Outlet is not activated');\n            return (this._activatedRoute);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterOutlet.prototype, \"activatedRouteData\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            if (this._activatedRoute) {\n                return this._activatedRoute.snapshot.data;\n            }\n            return {};\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Called when the `RouteReuseStrategy` instructs to detach the subtree\n     * @return {?}\n     */\n    RouterOutlet.prototype.detach = function () {\n        if (!this.activated)\n            throw new Error('Outlet is not activated');\n        this.location.detach();\n        var /** @type {?} */ cmp = this.activated;\n        this.activated = null;\n        this._activatedRoute = null;\n        return cmp;\n    };\n    /**\n     * Called when the `RouteReuseStrategy` instructs to re-attach a previously detached subtree\n     * @param {?} ref\n     * @param {?} activatedRoute\n     * @return {?}\n     */\n    RouterOutlet.prototype.attach = function (ref, activatedRoute) {\n        this.activated = ref;\n        this._activatedRoute = activatedRoute;\n        this.location.insert(ref.hostView);\n    };\n    /**\n     * @return {?}\n     */\n    RouterOutlet.prototype.deactivate = function () {\n        if (this.activated) {\n            var /** @type {?} */ c = this.component;\n            this.activated.destroy();\n            this.activated = null;\n            this._activatedRoute = null;\n            this.deactivateEvents.emit(c);\n        }\n    };\n    /**\n     * @param {?} activatedRoute\n     * @param {?} resolver\n     * @return {?}\n     */\n    RouterOutlet.prototype.activateWith = function (activatedRoute, resolver) {\n        if (this.isActivated) {\n            throw new Error('Cannot activate an already activated outlet');\n        }\n        this._activatedRoute = activatedRoute;\n        var /** @type {?} */ snapshot = activatedRoute._futureSnapshot;\n        var /** @type {?} */ component = (((snapshot._routeConfig)).component);\n        resolver = resolver || this.resolver;\n        var /** @type {?} */ factory = resolver.resolveComponentFactory(component);\n        var /** @type {?} */ childContexts = this.parentContexts.getOrCreateContext(this.name).children;\n        var /** @type {?} */ injector = new OutletInjector(activatedRoute, childContexts, this.location.injector);\n        this.activated = this.location.createComponent(factory, this.location.length, injector);\n        // Calling `markForCheck` to make sure we will run the change detection when the\n        // `RouterOutlet` is inside a `ChangeDetectionStrategy.OnPush` component.\n        this.changeDetector.markForCheck();\n        this.activateEvents.emit(this.activated.instance);\n    };\n    return RouterOutlet;\n}());\nRouterOutlet.decorators = [\n    { type: Directive, args: [{ selector: 'router-outlet', exportAs: 'outlet' },] },\n];\n/**\n * @nocollapse\n */\nRouterOutlet.ctorParameters = function () { return [\n    { type: ChildrenOutletContexts, },\n    { type: ViewContainerRef, },\n    { type: ComponentFactoryResolver, },\n    { type: undefined, decorators: [{ type: Attribute, args: ['name',] },] },\n    { type: ChangeDetectorRef, },\n]; };\nRouterOutlet.propDecorators = {\n    'activateEvents': [{ type: Output, args: ['activate',] },],\n    'deactivateEvents': [{ type: Output, args: ['deactivate',] },],\n};\nvar OutletInjector = (function () {\n    /**\n     * @param {?} route\n     * @param {?} childContexts\n     * @param {?} parent\n     */\n    function OutletInjector(route, childContexts, parent) {\n        this.route = route;\n        this.childContexts = childContexts;\n        this.parent = parent;\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    OutletInjector.prototype.get = function (token, notFoundValue) {\n        if (token === ActivatedRoute) {\n            return this.route;\n        }\n        if (token === ChildrenOutletContexts) {\n            return this.childContexts;\n        }\n        return this.parent.get(token, notFoundValue);\n    };\n    return OutletInjector;\n}());\n/**\n*@license\n*Copyright Google Inc. All Rights Reserved.\n*\n*Use of this source code is governed by an MIT-style license that can be\n*found in the LICENSE file at https://angular.io/license\n*/\n/**\n * \\@whatItDoes Provides a preloading strategy.\n *\n * \\@experimental\n * @abstract\n */\nvar PreloadingStrategy = (function () {\n    function PreloadingStrategy() {\n    }\n    /**\n     * @abstract\n     * @param {?} route\n     * @param {?} fn\n     * @return {?}\n     */\n    PreloadingStrategy.prototype.preload = function (route, fn) { };\n    return PreloadingStrategy;\n}());\n/**\n * \\@whatItDoes Provides a preloading strategy that preloads all modules as quickly as possible.\n *\n * \\@howToUse\n *\n * ```\n * RouteModule.forRoot(ROUTES, {preloadingStrategy: PreloadAllModules})\n * ```\n *\n * \\@experimental\n */\nvar PreloadAllModules = (function () {\n    function PreloadAllModules() {\n    }\n    /**\n     * @param {?} route\n     * @param {?} fn\n     * @return {?}\n     */\n    PreloadAllModules.prototype.preload = function (route, fn) {\n        return _catch.call(fn(), function () { return of(null); });\n    };\n    return PreloadAllModules;\n}());\n/**\n * \\@whatItDoes Provides a preloading strategy that does not preload any modules.\n *\n * \\@description\n *\n * This strategy is enabled by default.\n *\n * \\@experimental\n */\nvar NoPreloading = (function () {\n    function NoPreloading() {\n    }\n    /**\n     * @param {?} route\n     * @param {?} fn\n     * @return {?}\n     */\n    NoPreloading.prototype.preload = function (route, fn) { return of(null); };\n    return NoPreloading;\n}());\n/**\n * The preloader optimistically loads all router configurations to\n * make navigations into lazily-loaded sections of the application faster.\n *\n * The preloader runs in the background. When the router bootstraps, the preloader\n * starts listening to all navigation events. After every such event, the preloader\n * will check if any configurations can be loaded lazily.\n *\n * If a route is protected by `canLoad` guards, the preloaded will not load it.\n *\n * \\@stable\n */\nvar RouterPreloader = (function () {\n    /**\n     * @param {?} router\n     * @param {?} moduleLoader\n     * @param {?} compiler\n     * @param {?} injector\n     * @param {?} preloadingStrategy\n     */\n    function RouterPreloader(router, moduleLoader, compiler, injector, preloadingStrategy) {\n        this.router = router;\n        this.injector = injector;\n        this.preloadingStrategy = preloadingStrategy;\n        var onStartLoad = function (r) { return router.triggerEvent(new RouteConfigLoadStart(r)); };\n        var onEndLoad = function (r) { return router.triggerEvent(new RouteConfigLoadEnd(r)); };\n        this.loader = new RouterConfigLoader(moduleLoader, compiler, onStartLoad, onEndLoad);\n    }\n    ;\n    /**\n     * @return {?}\n     */\n    RouterPreloader.prototype.setUpPreloading = function () {\n        var _this = this;\n        var /** @type {?} */ navigations$ = filter.call(this.router.events, function (e) { return e instanceof NavigationEnd; });\n        this.subscription = concatMap.call(navigations$, function () { return _this.preload(); }).subscribe(function () { });\n    };\n    /**\n     * @return {?}\n     */\n    RouterPreloader.prototype.preload = function () {\n        var /** @type {?} */ ngModule = this.injector.get(NgModuleRef);\n        return this.processRoutes(ngModule, this.router.config);\n    };\n    /**\n     * @return {?}\n     */\n    RouterPreloader.prototype.ngOnDestroy = function () { this.subscription.unsubscribe(); };\n    /**\n     * @param {?} ngModule\n     * @param {?} routes\n     * @return {?}\n     */\n    RouterPreloader.prototype.processRoutes = function (ngModule, routes) {\n        var /** @type {?} */ res = [];\n        for (var _i = 0, routes_5 = routes; _i < routes_5.length; _i++) {\n            var route = routes_5[_i];\n            // we already have the config loaded, just recurse\n            if (route.loadChildren && !route.canLoad && route._loadedConfig) {\n                var /** @type {?} */ childConfig = route._loadedConfig;\n                res.push(this.processRoutes(childConfig.module, childConfig.routes));\n                // no config loaded, fetch the config\n            }\n            else if (route.loadChildren && !route.canLoad) {\n                res.push(this.preloadConfig(ngModule, route));\n                // recurse into children\n            }\n            else if (route.children) {\n                res.push(this.processRoutes(ngModule, route.children));\n            }\n        }\n        return mergeAll.call(from(res));\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} route\n     * @return {?}\n     */\n    RouterPreloader.prototype.preloadConfig = function (ngModule, route) {\n        var _this = this;\n        return this.preloadingStrategy.preload(route, function () {\n            var /** @type {?} */ loaded$ = _this.loader.load(ngModule.injector, route);\n            return mergeMap.call(loaded$, function (config) {\n                route._loadedConfig = config;\n                return _this.processRoutes(config.module, config.routes);\n            });\n        });\n    };\n    return RouterPreloader;\n}());\nRouterPreloader.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nRouterPreloader.ctorParameters = function () { return [\n    { type: Router, },\n    { type: NgModuleFactoryLoader, },\n    { type: Compiler, },\n    { type: Injector, },\n    { type: PreloadingStrategy, },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Contains a list of directives\n * \\@stable\n */\nvar ROUTER_DIRECTIVES = [RouterOutlet, RouterLink, RouterLinkWithHref, RouterLinkActive];\n/**\n * \\@whatItDoes Is used in DI to configure the router.\n * \\@stable\n */\nvar ROUTER_CONFIGURATION = new InjectionToken('ROUTER_CONFIGURATION');\n/**\n * \\@docsNotRequired\n */\nvar ROUTER_FORROOT_GUARD = new InjectionToken('ROUTER_FORROOT_GUARD');\nvar ROUTER_PROVIDERS = [\n    Location,\n    { provide: UrlSerializer, useClass: DefaultUrlSerializer },\n    {\n        provide: Router,\n        useFactory: setupRouter,\n        deps: [\n            ApplicationRef, UrlSerializer, ChildrenOutletContexts, Location, Injector,\n            NgModuleFactoryLoader, Compiler, ROUTES, ROUTER_CONFIGURATION,\n            [UrlHandlingStrategy, new Optional()], [RouteReuseStrategy, new Optional()]\n        ]\n    },\n    ChildrenOutletContexts,\n    { provide: ActivatedRoute, useFactory: rootRoute, deps: [Router] },\n    { provide: NgModuleFactoryLoader, useClass: SystemJsNgModuleLoader },\n    RouterPreloader,\n    NoPreloading,\n    PreloadAllModules,\n    { provide: ROUTER_CONFIGURATION, useValue: { enableTracing: false } },\n];\n/**\n * @return {?}\n */\nfunction routerNgProbeToken() {\n    return new NgProbeToken('Router', Router);\n}\n/**\n * \\@whatItDoes Adds router directives and providers.\n *\n * \\@howToUse\n *\n * RouterModule can be imported multiple times: once per lazily-loaded bundle.\n * Since the router deals with a global shared resource--location, we cannot have\n * more than one router service active.\n *\n * That is why there are two ways to create the module: `RouterModule.forRoot` and\n * `RouterModule.forChild`.\n *\n * * `forRoot` creates a module that contains all the directives, the given routes, and the router\n *   service itself.\n * * `forChild` creates a module that contains all the directives and the given routes, but does not\n *   include the router service.\n *\n * When registered at the root, the module should be used as follows\n *\n * ```\n * \\@NgModule({\n *   imports: [RouterModule.forRoot(ROUTES)]\n * })\n * class MyNgModule {}\n * ```\n *\n * For submodules and lazy loaded submodules the module should be used as follows:\n *\n * ```\n * \\@NgModule({\n *   imports: [RouterModule.forChild(ROUTES)]\n * })\n * class MyNgModule {}\n * ```\n *\n * \\@description\n *\n * Managing state transitions is one of the hardest parts of building applications. This is\n * especially true on the web, where you also need to ensure that the state is reflected in the URL.\n * In addition, we often want to split applications into multiple bundles and load them on demand.\n * Doing this transparently is not trivial.\n *\n * The Angular router solves these problems. Using the router, you can declaratively specify\n * application states, manage state transitions while taking care of the URL, and load bundles on\n * demand.\n *\n * [Read this developer guide](https://angular.io/docs/ts/latest/guide/router.html) to get an\n * overview of how the router should be used.\n *\n * \\@stable\n */\nvar RouterModule = (function () {\n    /**\n     * @param {?} guard\n     * @param {?} router\n     */\n    function RouterModule(guard, router) {\n    }\n    /**\n     * Creates a module with all the router providers and directives. It also optionally sets up an\n     * application listener to perform an initial navigation.\n     *\n     * Options:\n     * * `enableTracing` makes the router log all its internal events to the console.\n     * * `useHash` enables the location strategy that uses the URL fragment instead of the history\n     * API.\n     * * `initialNavigation` disables the initial navigation.\n     * * `errorHandler` provides a custom error handler.\n     * @param {?} routes\n     * @param {?=} config\n     * @return {?}\n     */\n    RouterModule.forRoot = function (routes, config) {\n        return {\n            ngModule: RouterModule,\n            providers: [\n                ROUTER_PROVIDERS,\n                provideRoutes(routes),\n                {\n                    provide: ROUTER_FORROOT_GUARD,\n                    useFactory: provideForRootGuard,\n                    deps: [[Router, new Optional(), new SkipSelf()]]\n                },\n                { provide: ROUTER_CONFIGURATION, useValue: config ? config : {} },\n                {\n                    provide: LocationStrategy,\n                    useFactory: provideLocationStrategy,\n                    deps: [\n                        PlatformLocation, [new Inject(APP_BASE_HREF), new Optional()], ROUTER_CONFIGURATION\n                    ]\n                },\n                {\n                    provide: PreloadingStrategy,\n                    useExisting: config && config.preloadingStrategy ? config.preloadingStrategy :\n                        NoPreloading\n                },\n                { provide: NgProbeToken, multi: true, useFactory: routerNgProbeToken },\n                provideRouterInitializer(),\n            ],\n        };\n    };\n    /**\n     * Creates a module with all the router directives and a provider registering routes.\n     * @param {?} routes\n     * @return {?}\n     */\n    RouterModule.forChild = function (routes) {\n        return { ngModule: RouterModule, providers: [provideRoutes(routes)] };\n    };\n    return RouterModule;\n}());\nRouterModule.decorators = [\n    { type: NgModule, args: [{ declarations: ROUTER_DIRECTIVES, exports: ROUTER_DIRECTIVES },] },\n];\n/**\n * @nocollapse\n */\nRouterModule.ctorParameters = function () { return [\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [ROUTER_FORROOT_GUARD,] },] },\n    { type: Router, decorators: [{ type: Optional },] },\n]; };\n/**\n * @param {?} platformLocationStrategy\n * @param {?} baseHref\n * @param {?=} options\n * @return {?}\n */\nfunction provideLocationStrategy(platformLocationStrategy, baseHref, options) {\n    if (options === void 0) { options = {}; }\n    return options.useHash ? new HashLocationStrategy(platformLocationStrategy, baseHref) :\n        new PathLocationStrategy(platformLocationStrategy, baseHref);\n}\n/**\n * @param {?} router\n * @return {?}\n */\nfunction provideForRootGuard(router) {\n    if (router) {\n        throw new Error(\"RouterModule.forRoot() called twice. Lazy loaded modules should use RouterModule.forChild() instead.\");\n    }\n    return 'guarded';\n}\n/**\n * \\@whatItDoes Registers routes.\n *\n * \\@howToUse\n *\n * ```\n * \\@NgModule({\n *   imports: [RouterModule.forChild(ROUTES)],\n *   providers: [provideRoutes(EXTRA_ROUTES)]\n * })\n * class MyNgModule {}\n * ```\n *\n * \\@stable\n * @param {?} routes\n * @return {?}\n */\nfunction provideRoutes(routes) {\n    return [\n        { provide: ANALYZE_FOR_ENTRY_COMPONENTS, multi: true, useValue: routes },\n        { provide: ROUTES, multi: true, useValue: routes },\n    ];\n}\n/**\n * @param {?} ref\n * @param {?} urlSerializer\n * @param {?} contexts\n * @param {?} location\n * @param {?} injector\n * @param {?} loader\n * @param {?} compiler\n * @param {?} config\n * @param {?=} opts\n * @param {?=} urlHandlingStrategy\n * @param {?=} routeReuseStrategy\n * @return {?}\n */\nfunction setupRouter(ref, urlSerializer, contexts, location, injector, loader, compiler, config, opts, urlHandlingStrategy, routeReuseStrategy) {\n    if (opts === void 0) { opts = {}; }\n    var /** @type {?} */ router = new Router(null, urlSerializer, contexts, location, injector, loader, compiler, flatten(config));\n    if (urlHandlingStrategy) {\n        router.urlHandlingStrategy = urlHandlingStrategy;\n    }\n    if (routeReuseStrategy) {\n        router.routeReuseStrategy = routeReuseStrategy;\n    }\n    if (opts.errorHandler) {\n        router.errorHandler = opts.errorHandler;\n    }\n    if (opts.enableTracing) {\n        var /** @type {?} */ dom_1 = ɵgetDOM();\n        router.events.subscribe(function (e) {\n            dom_1.logGroup(\"Router Event: \" + ((e.constructor)).name);\n            dom_1.log(e.toString());\n            dom_1.log(e);\n            dom_1.logGroupEnd();\n        });\n    }\n    return router;\n}\n/**\n * @param {?} router\n * @return {?}\n */\nfunction rootRoute(router) {\n    return router.routerState.root;\n}\n/**\n * To initialize the router properly we need to do in two steps:\n *\n * We need to start the navigation in a APP_INITIALIZER to block the bootstrap if\n * a resolver or a guards executes asynchronously. Second, we need to actually run\n * activation in a BOOTSTRAP_LISTENER. We utilize the afterPreactivation\n * hook provided by the router to do that.\n *\n * The router navigation starts, reaches the point when preactivation is done, and then\n * pauses. It waits for the hook to be resolved. We then resolve it only in a bootstrap listener.\n */\nvar RouterInitializer = (function () {\n    /**\n     * @param {?} injector\n     */\n    function RouterInitializer(injector) {\n        this.injector = injector;\n        this.initNavigation = false;\n        this.resultOfPreactivationDone = new Subject();\n    }\n    /**\n     * @return {?}\n     */\n    RouterInitializer.prototype.appInitializer = function () {\n        var _this = this;\n        var /** @type {?} */ p = this.injector.get(LOCATION_INITIALIZED, Promise.resolve(null));\n        return p.then(function () {\n            var /** @type {?} */ resolve = ((null));\n            var /** @type {?} */ res = new Promise(function (r) { return resolve = r; });\n            var /** @type {?} */ router = _this.injector.get(Router);\n            var /** @type {?} */ opts = _this.injector.get(ROUTER_CONFIGURATION);\n            if (_this.isLegacyDisabled(opts) || _this.isLegacyEnabled(opts)) {\n                resolve(true);\n            }\n            else if (opts.initialNavigation === 'disabled') {\n                router.setUpLocationChangeListener();\n                resolve(true);\n            }\n            else if (opts.initialNavigation === 'enabled') {\n                router.hooks.afterPreactivation = function () {\n                    // only the initial navigation should be delayed\n                    if (!_this.initNavigation) {\n                        _this.initNavigation = true;\n                        resolve(true);\n                        return _this.resultOfPreactivationDone;\n                        // subsequent navigations should not be delayed\n                    }\n                    else {\n                        return (of(null));\n                    }\n                };\n                router.initialNavigation();\n            }\n            else {\n                throw new Error(\"Invalid initialNavigation options: '\" + opts.initialNavigation + \"'\");\n            }\n            return res;\n        });\n    };\n    /**\n     * @param {?} bootstrappedComponentRef\n     * @return {?}\n     */\n    RouterInitializer.prototype.bootstrapListener = function (bootstrappedComponentRef) {\n        var /** @type {?} */ opts = this.injector.get(ROUTER_CONFIGURATION);\n        var /** @type {?} */ preloader = this.injector.get(RouterPreloader);\n        var /** @type {?} */ router = this.injector.get(Router);\n        var /** @type {?} */ ref = this.injector.get(ApplicationRef);\n        if (bootstrappedComponentRef !== ref.components[0]) {\n            return;\n        }\n        if (this.isLegacyEnabled(opts)) {\n            router.initialNavigation();\n        }\n        else if (this.isLegacyDisabled(opts)) {\n            router.setUpLocationChangeListener();\n        }\n        preloader.setUpPreloading();\n        router.resetRootComponentType(ref.componentTypes[0]);\n        this.resultOfPreactivationDone.next(/** @type {?} */ ((null)));\n        this.resultOfPreactivationDone.complete();\n    };\n    /**\n     * @param {?} opts\n     * @return {?}\n     */\n    RouterInitializer.prototype.isLegacyEnabled = function (opts) {\n        return opts.initialNavigation === 'legacy_enabled' || opts.initialNavigation === true ||\n            opts.initialNavigation === undefined;\n    };\n    /**\n     * @param {?} opts\n     * @return {?}\n     */\n    RouterInitializer.prototype.isLegacyDisabled = function (opts) {\n        return opts.initialNavigation === 'legacy_disabled' || opts.initialNavigation === false;\n    };\n    return RouterInitializer;\n}());\nRouterInitializer.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nRouterInitializer.ctorParameters = function () { return [\n    { type: Injector, },\n]; };\n/**\n * @param {?} r\n * @return {?}\n */\nfunction getAppInitializer(r) {\n    return r.appInitializer.bind(r);\n}\n/**\n * @param {?} r\n * @return {?}\n */\nfunction getBootstrapListener(r) {\n    return r.bootstrapListener.bind(r);\n}\n/**\n * A token for the router initializer that will be called after the app is bootstrapped.\n *\n * \\@experimental\n */\nvar ROUTER_INITIALIZER = new InjectionToken('Router Initializer');\n/**\n * @return {?}\n */\nfunction provideRouterInitializer() {\n    return [\n        RouterInitializer,\n        {\n            provide: APP_INITIALIZER,\n            multi: true,\n            useFactory: getAppInitializer,\n            deps: [RouterInitializer]\n        },\n        { provide: ROUTER_INITIALIZER, useFactory: getBootstrapListener, deps: [RouterInitializer] },\n        { provide: APP_BOOTSTRAP_LISTENER, multi: true, useExisting: ROUTER_INITIALIZER },\n    ];\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common package.\n */\n/**\n * \\@stable\n */\nvar VERSION = new Version('4.4.4');\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the router package.\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n/**\n * Generated bundle index. Do not edit.\n */\nexport { RouterLink, RouterLinkWithHref, RouterLinkActive, RouterOutlet, GuardsCheckEnd, GuardsCheckStart, NavigationCancel, NavigationEnd, NavigationError, NavigationStart, ResolveEnd, ResolveStart, RouteConfigLoadEnd, RouteConfigLoadStart, RoutesRecognized, RouteReuseStrategy, Router, ROUTES, ROUTER_CONFIGURATION, ROUTER_INITIALIZER, RouterModule, provideRoutes, ChildrenOutletContexts, OutletContext, NoPreloading, PreloadAllModules, PreloadingStrategy, RouterPreloader, ActivatedRoute, ActivatedRouteSnapshot, RouterState, RouterStateSnapshot, PRIMARY_OUTLET, convertToParamMap, UrlHandlingStrategy, DefaultUrlSerializer, UrlSegment, UrlSegmentGroup, UrlSerializer, UrlTree, VERSION, ROUTER_PROVIDERS as ɵROUTER_PROVIDERS, flatten as ɵflatten, ROUTER_FORROOT_GUARD as ɵa, RouterInitializer as ɵg, getAppInitializer as ɵh, getBootstrapListener as ɵi, provideForRootGuard as ɵd, provideLocationStrategy as ɵc, provideRouterInitializer as ɵj, rootRoute as ɵf, routerNgProbeToken as ɵb, setupRouter as ɵe, Tree as ɵk, TreeNode as ɵl };\n//# sourceMappingURL=router.es5.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/router/@angular/router.es5.js\n// module id = 39\n// module chunks = 2","\"use strict\";\nvar ArrayObservable_1 = require('./ArrayObservable');\nexports.of = ArrayObservable_1.ArrayObservable.of;\n//# sourceMappingURL=of.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/observable/of.js\n// module id = 41\n// module chunks = 2","\"use strict\";\nvar mergeMap_1 = require('./mergeMap');\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, in a serialized fashion waiting for each one to complete before\n * merging the next.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link concatAll}.</span>\n *\n * <img src=\"./img/concatMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each new inner Observable is\n * concatenated with the previous inner Observable.\n *\n * __Warning:__ if source values arrive endlessly and faster than their\n * corresponding inner Observables can complete, it will result in memory issues\n * as inner Observables amass in an unbounded buffer waiting for their turn to\n * be subscribed to.\n *\n * Note: `concatMap` is equivalent to `mergeMap` with concurrency parameter set\n * to `1`.\n *\n * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.concatMap(ev => Rx.Observable.interval(1000).take(4));\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n *\n * @see {@link concat}\n * @see {@link concatAll}\n * @see {@link concatMapTo}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and taking values from each projected inner\n * Observable sequentially.\n * @method concatMap\n * @owner Observable\n */\nfunction concatMap(project, resultSelector) {\n    return this.lift(new mergeMap_1.MergeMapOperator(project, resultSelector, 1));\n}\nexports.concatMap = concatMap;\n//# sourceMappingURL=concatMap.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/operator/concatMap.js\n// module id = 42\n// module chunks = 2","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\n/* tslint:enable:max-line-length */\n/**\n * Filter items emitted by the source Observable by only emitting those that\n * satisfy a specified predicate.\n *\n * <span class=\"informal\">Like\n * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\n * it only emits a value from the source if it passes a criterion function.</span>\n *\n * <img src=\"./img/filter.png\" width=\"100%\">\n *\n * Similar to the well-known `Array.prototype.filter` method, this operator\n * takes values from the source Observable, passes them through a `predicate`\n * function and only emits those values that yielded `true`.\n *\n * @example <caption>Emit only click events whose target was a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var clicksOnDivs = clicks.filter(ev => ev.target.tagName === 'DIV');\n * clicksOnDivs.subscribe(x => console.log(x));\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n * @see {@link ignoreElements}\n * @see {@link partition}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted, if `false` the value is not passed to the output\n * Observable. The `index` parameter is the number `i` for the i-th source\n * emission that has happened since the subscription, starting from the number\n * `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable} An Observable of values from the source that were\n * allowed by the `predicate` function.\n * @method filter\n * @owner Observable\n */\nfunction filter(predicate, thisArg) {\n    return this.lift(new FilterOperator(predicate, thisArg));\n}\nexports.filter = filter;\nvar FilterOperator = (function () {\n    function FilterOperator(predicate, thisArg) {\n        this.predicate = predicate;\n        this.thisArg = thisArg;\n    }\n    FilterOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new FilterSubscriber(subscriber, this.predicate, this.thisArg));\n    };\n    return FilterOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar FilterSubscriber = (function (_super) {\n    __extends(FilterSubscriber, _super);\n    function FilterSubscriber(destination, predicate, thisArg) {\n        _super.call(this, destination);\n        this.predicate = predicate;\n        this.thisArg = thisArg;\n        this.count = 0;\n    }\n    // the try catch block below is left specifically for\n    // optimization and perf reasons. a tryCatcher is not necessary here.\n    FilterSubscriber.prototype._next = function (value) {\n        var result;\n        try {\n            result = this.predicate.call(this.thisArg, value, this.count++);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (result) {\n            this.destination.next(value);\n        }\n    };\n    return FilterSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=filter.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/operator/filter.js\n// module id = 43\n// module chunks = 2","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { enableProdMode } from '@angular/core';\nimport { RootModule } from './root-module/root.module';\n\nif (process.env.NODE_ENV === 'production') {\r\n    enableProdMode();\r\n}\n\nplatformBrowserDynamic().bootstrapModule(RootModule);\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular-router-loader/src!./components/main.ts","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { RootRoutingModule } from './root-routing.module';\r\nimport { RootComponent } from './root.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        BrowserModule,        \r\n        RootRoutingModule\r\n    ],\r\n    declarations: [\r\n        RootComponent,\r\n        HomeComponent,\r\n        PageNotFoundComponent\r\n    ],\r\n    bootstrap: [RootComponent]\r\n})\r\nexport class RootModule { }\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular-router-loader/src!./components/root-module/root.module.ts","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { HomeComponent } from './home/home.component';\r\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\r\n\r\nconst appRoutes: Routes = [\r\n    { path: '', redirectTo: 'home', pathMatch: 'full' },\r\n    { path: 'home', component: HomeComponent },\r\n    {\r\n        path: 'employees',\r\n        loadChildren: () => new Promise(function (resolve) {  (require as any).ensure([], function (require: any) {    resolve(require('employees-module\\\\employees.module')['EmployeesModule']);  });})\r\n    },    \r\n    { path: '**', component: PageNotFoundComponent }\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forRoot(\r\n            appRoutes\r\n            //,{ enableTracing: true } // <-- debugging purposes only\r\n        )\r\n    ],\r\n    exports: [\r\n        RouterModule\r\n    ]\r\n})\r\nexport class RootRoutingModule { }\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular-router-loader/src!./components/root-module/root-routing.module.ts","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subject_1 = require('./Subject');\nvar ObjectUnsubscribedError_1 = require('./util/ObjectUnsubscribedError');\n/**\n * @class BehaviorSubject<T>\n */\nvar BehaviorSubject = (function (_super) {\n    __extends(BehaviorSubject, _super);\n    function BehaviorSubject(_value) {\n        _super.call(this);\n        this._value = _value;\n    }\n    Object.defineProperty(BehaviorSubject.prototype, \"value\", {\n        get: function () {\n            return this.getValue();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BehaviorSubject.prototype._subscribe = function (subscriber) {\n        var subscription = _super.prototype._subscribe.call(this, subscriber);\n        if (subscription && !subscription.closed) {\n            subscriber.next(this._value);\n        }\n        return subscription;\n    };\n    BehaviorSubject.prototype.getValue = function () {\n        if (this.hasError) {\n            throw this.thrownError;\n        }\n        else if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        else {\n            return this._value;\n        }\n    };\n    BehaviorSubject.prototype.next = function (value) {\n        _super.prototype.next.call(this, this._value = value);\n    };\n    return BehaviorSubject;\n}(Subject_1.Subject));\nexports.BehaviorSubject = BehaviorSubject;\n//# sourceMappingURL=BehaviorSubject.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/BehaviorSubject.js\n// module id = 67\n// module chunks = 2","\"use strict\";\nvar FromObservable_1 = require('./FromObservable');\nexports.from = FromObservable_1.FromObservable.create;\n//# sourceMappingURL=from.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/observable/from.js\n// module id = 68\n// module chunks = 2","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar isArray_1 = require('../util/isArray');\nvar isArrayLike_1 = require('../util/isArrayLike');\nvar isPromise_1 = require('../util/isPromise');\nvar PromiseObservable_1 = require('./PromiseObservable');\nvar IteratorObservable_1 = require('./IteratorObservable');\nvar ArrayObservable_1 = require('./ArrayObservable');\nvar ArrayLikeObservable_1 = require('./ArrayLikeObservable');\nvar iterator_1 = require('../symbol/iterator');\nvar Observable_1 = require('../Observable');\nvar observeOn_1 = require('../operator/observeOn');\nvar observable_1 = require('../symbol/observable');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar FromObservable = (function (_super) {\n    __extends(FromObservable, _super);\n    function FromObservable(ish, scheduler) {\n        _super.call(this, null);\n        this.ish = ish;\n        this.scheduler = scheduler;\n    }\n    /**\n     * Creates an Observable from an Array, an array-like object, a Promise, an\n     * iterable object, or an Observable-like object.\n     *\n     * <span class=\"informal\">Converts almost anything to an Observable.</span>\n     *\n     * <img src=\"./img/from.png\" width=\"100%\">\n     *\n     * Convert various other objects and data types into Observables. `from`\n     * converts a Promise or an array-like or an\n     * [iterable](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterable)\n     * object into an Observable that emits the items in that promise or array or\n     * iterable. A String, in this context, is treated as an array of characters.\n     * Observable-like objects (contains a function named with the ES2015 Symbol\n     * for Observable) can also be converted through this operator.\n     *\n     * @example <caption>Converts an array to an Observable</caption>\n     * var array = [10, 20, 30];\n     * var result = Rx.Observable.from(array);\n     * result.subscribe(x => console.log(x));\n     *\n     * // Results in the following:\n     * // 10 20 30\n     *\n     * @example <caption>Convert an infinite iterable (from a generator) to an Observable</caption>\n     * function* generateDoubles(seed) {\n     *   var i = seed;\n     *   while (true) {\n     *     yield i;\n     *     i = 2 * i; // double it\n     *   }\n     * }\n     *\n     * var iterator = generateDoubles(3);\n     * var result = Rx.Observable.from(iterator).take(10);\n     * result.subscribe(x => console.log(x));\n     *\n     * // Results in the following:\n     * // 3 6 12 24 48 96 192 384 768 1536\n     *\n     * @see {@link create}\n     * @see {@link fromEvent}\n     * @see {@link fromEventPattern}\n     * @see {@link fromPromise}\n     *\n     * @param {ObservableInput<T>} ish A subscribable object, a Promise, an\n     * Observable-like, an Array, an iterable or an array-like object to be\n     * converted.\n     * @param {Scheduler} [scheduler] The scheduler on which to schedule the\n     * emissions of values.\n     * @return {Observable<T>} The Observable whose values are originally from the\n     * input object that was converted.\n     * @static true\n     * @name from\n     * @owner Observable\n     */\n    FromObservable.create = function (ish, scheduler) {\n        if (ish != null) {\n            if (typeof ish[observable_1.observable] === 'function') {\n                if (ish instanceof Observable_1.Observable && !scheduler) {\n                    return ish;\n                }\n                return new FromObservable(ish, scheduler);\n            }\n            else if (isArray_1.isArray(ish)) {\n                return new ArrayObservable_1.ArrayObservable(ish, scheduler);\n            }\n            else if (isPromise_1.isPromise(ish)) {\n                return new PromiseObservable_1.PromiseObservable(ish, scheduler);\n            }\n            else if (typeof ish[iterator_1.iterator] === 'function' || typeof ish === 'string') {\n                return new IteratorObservable_1.IteratorObservable(ish, scheduler);\n            }\n            else if (isArrayLike_1.isArrayLike(ish)) {\n                return new ArrayLikeObservable_1.ArrayLikeObservable(ish, scheduler);\n            }\n        }\n        throw new TypeError((ish !== null && typeof ish || ish) + ' is not observable');\n    };\n    FromObservable.prototype._subscribe = function (subscriber) {\n        var ish = this.ish;\n        var scheduler = this.scheduler;\n        if (scheduler == null) {\n            return ish[observable_1.observable]().subscribe(subscriber);\n        }\n        else {\n            return ish[observable_1.observable]().subscribe(new observeOn_1.ObserveOnSubscriber(subscriber, scheduler, 0));\n        }\n    };\n    return FromObservable;\n}(Observable_1.Observable));\nexports.FromObservable = FromObservable;\n//# sourceMappingURL=FromObservable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/observable/FromObservable.js\n// module id = 69\n// module chunks = 2","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar root_1 = require('../util/root');\nvar Observable_1 = require('../Observable');\nvar iterator_1 = require('../symbol/iterator');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar IteratorObservable = (function (_super) {\n    __extends(IteratorObservable, _super);\n    function IteratorObservable(iterator, scheduler) {\n        _super.call(this);\n        this.scheduler = scheduler;\n        if (iterator == null) {\n            throw new Error('iterator cannot be null.');\n        }\n        this.iterator = getIterator(iterator);\n    }\n    IteratorObservable.create = function (iterator, scheduler) {\n        return new IteratorObservable(iterator, scheduler);\n    };\n    IteratorObservable.dispatch = function (state) {\n        var index = state.index, hasError = state.hasError, iterator = state.iterator, subscriber = state.subscriber;\n        if (hasError) {\n            subscriber.error(state.error);\n            return;\n        }\n        var result = iterator.next();\n        if (result.done) {\n            subscriber.complete();\n            return;\n        }\n        subscriber.next(result.value);\n        state.index = index + 1;\n        if (subscriber.closed) {\n            if (typeof iterator.return === 'function') {\n                iterator.return();\n            }\n            return;\n        }\n        this.schedule(state);\n    };\n    IteratorObservable.prototype._subscribe = function (subscriber) {\n        var index = 0;\n        var _a = this, iterator = _a.iterator, scheduler = _a.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(IteratorObservable.dispatch, 0, {\n                index: index, iterator: iterator, subscriber: subscriber\n            });\n        }\n        else {\n            do {\n                var result = iterator.next();\n                if (result.done) {\n                    subscriber.complete();\n                    break;\n                }\n                else {\n                    subscriber.next(result.value);\n                }\n                if (subscriber.closed) {\n                    if (typeof iterator.return === 'function') {\n                        iterator.return();\n                    }\n                    break;\n                }\n            } while (true);\n        }\n    };\n    return IteratorObservable;\n}(Observable_1.Observable));\nexports.IteratorObservable = IteratorObservable;\nvar StringIterator = (function () {\n    function StringIterator(str, idx, len) {\n        if (idx === void 0) { idx = 0; }\n        if (len === void 0) { len = str.length; }\n        this.str = str;\n        this.idx = idx;\n        this.len = len;\n    }\n    StringIterator.prototype[iterator_1.iterator] = function () { return (this); };\n    StringIterator.prototype.next = function () {\n        return this.idx < this.len ? {\n            done: false,\n            value: this.str.charAt(this.idx++)\n        } : {\n            done: true,\n            value: undefined\n        };\n    };\n    return StringIterator;\n}());\nvar ArrayIterator = (function () {\n    function ArrayIterator(arr, idx, len) {\n        if (idx === void 0) { idx = 0; }\n        if (len === void 0) { len = toLength(arr); }\n        this.arr = arr;\n        this.idx = idx;\n        this.len = len;\n    }\n    ArrayIterator.prototype[iterator_1.iterator] = function () { return this; };\n    ArrayIterator.prototype.next = function () {\n        return this.idx < this.len ? {\n            done: false,\n            value: this.arr[this.idx++]\n        } : {\n            done: true,\n            value: undefined\n        };\n    };\n    return ArrayIterator;\n}());\nfunction getIterator(obj) {\n    var i = obj[iterator_1.iterator];\n    if (!i && typeof obj === 'string') {\n        return new StringIterator(obj);\n    }\n    if (!i && obj.length !== undefined) {\n        return new ArrayIterator(obj);\n    }\n    if (!i) {\n        throw new TypeError('object is not iterable');\n    }\n    return obj[iterator_1.iterator]();\n}\nvar maxSafeInteger = Math.pow(2, 53) - 1;\nfunction toLength(o) {\n    var len = +o.length;\n    if (isNaN(len)) {\n        return 0;\n    }\n    if (len === 0 || !numberIsFinite(len)) {\n        return len;\n    }\n    len = sign(len) * Math.floor(Math.abs(len));\n    if (len <= 0) {\n        return 0;\n    }\n    if (len > maxSafeInteger) {\n        return maxSafeInteger;\n    }\n    return len;\n}\nfunction numberIsFinite(value) {\n    return typeof value === 'number' && root_1.root.isFinite(value);\n}\nfunction sign(value) {\n    var valueAsNumber = +value;\n    if (valueAsNumber === 0) {\n        return valueAsNumber;\n    }\n    if (isNaN(valueAsNumber)) {\n        return valueAsNumber;\n    }\n    return valueAsNumber < 0 ? -1 : 1;\n}\n//# sourceMappingURL=IteratorObservable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/observable/IteratorObservable.js\n// module id = 70\n// module chunks = 2","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('../Observable');\nvar ScalarObservable_1 = require('./ScalarObservable');\nvar EmptyObservable_1 = require('./EmptyObservable');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar ArrayLikeObservable = (function (_super) {\n    __extends(ArrayLikeObservable, _super);\n    function ArrayLikeObservable(arrayLike, scheduler) {\n        _super.call(this);\n        this.arrayLike = arrayLike;\n        this.scheduler = scheduler;\n        if (!scheduler && arrayLike.length === 1) {\n            this._isScalar = true;\n            this.value = arrayLike[0];\n        }\n    }\n    ArrayLikeObservable.create = function (arrayLike, scheduler) {\n        var length = arrayLike.length;\n        if (length === 0) {\n            return new EmptyObservable_1.EmptyObservable();\n        }\n        else if (length === 1) {\n            return new ScalarObservable_1.ScalarObservable(arrayLike[0], scheduler);\n        }\n        else {\n            return new ArrayLikeObservable(arrayLike, scheduler);\n        }\n    };\n    ArrayLikeObservable.dispatch = function (state) {\n        var arrayLike = state.arrayLike, index = state.index, length = state.length, subscriber = state.subscriber;\n        if (subscriber.closed) {\n            return;\n        }\n        if (index >= length) {\n            subscriber.complete();\n            return;\n        }\n        subscriber.next(arrayLike[index]);\n        state.index = index + 1;\n        this.schedule(state);\n    };\n    ArrayLikeObservable.prototype._subscribe = function (subscriber) {\n        var index = 0;\n        var _a = this, arrayLike = _a.arrayLike, scheduler = _a.scheduler;\n        var length = arrayLike.length;\n        if (scheduler) {\n            return scheduler.schedule(ArrayLikeObservable.dispatch, 0, {\n                arrayLike: arrayLike, index: index, length: length, subscriber: subscriber\n            });\n        }\n        else {\n            for (var i = 0; i < length && !subscriber.closed; i++) {\n                subscriber.next(arrayLike[i]);\n            }\n            subscriber.complete();\n        }\n    };\n    return ArrayLikeObservable;\n}(Observable_1.Observable));\nexports.ArrayLikeObservable = ArrayLikeObservable;\n//# sourceMappingURL=ArrayLikeObservable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/observable/ArrayLikeObservable.js\n// module id = 71\n// module chunks = 2","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar Notification_1 = require('../Notification');\n/**\n *\n * Re-emits all notifications from source Observable with specified scheduler.\n *\n * <span class=\"informal\">Ensure a specific scheduler is used, from outside of an Observable.</span>\n *\n * `observeOn` is an operator that accepts a scheduler as a first parameter, which will be used to reschedule\n * notifications emitted by the source Observable. It might be useful, if you do not have control over\n * internal scheduler of a given Observable, but want to control when its values are emitted nevertheless.\n *\n * Returned Observable emits the same notifications (nexted values, complete and error events) as the source Observable,\n * but rescheduled with provided scheduler. Note that this doesn't mean that source Observables internal\n * scheduler will be replaced in any way. Original scheduler still will be used, but when the source Observable emits\n * notification, it will be immediately scheduled again - this time with scheduler passed to `observeOn`.\n * An anti-pattern would be calling `observeOn` on Observable that emits lots of values synchronously, to split\n * that emissions into asynchronous chunks. For this to happen, scheduler would have to be passed into the source\n * Observable directly (usually into the operator that creates it). `observeOn` simply delays notifications a\n * little bit more, to ensure that they are emitted at expected moments.\n *\n * As a matter of fact, `observeOn` accepts second parameter, which specifies in milliseconds with what delay notifications\n * will be emitted. The main difference between {@link delay} operator and `observeOn` is that `observeOn`\n * will delay all notifications - including error notifications - while `delay` will pass through error\n * from source Observable immediately when it is emitted. In general it is highly recommended to use `delay` operator\n * for any kind of delaying of values in the stream, while using `observeOn` to specify which scheduler should be used\n * for notification emissions in general.\n *\n * @example <caption>Ensure values in subscribe are called just before browser repaint.</caption>\n * const intervals = Rx.Observable.interval(10); // Intervals are scheduled\n *                                               // with async scheduler by default...\n *\n * intervals\n * .observeOn(Rx.Scheduler.animationFrame)       // ...but we will observe on animationFrame\n * .subscribe(val => {                           // scheduler to ensure smooth animation.\n *   someDiv.style.height = val + 'px';\n * });\n *\n * @see {@link delay}\n *\n * @param {IScheduler} scheduler Scheduler that will be used to reschedule notifications from source Observable.\n * @param {number} [delay] Number of milliseconds that states with what delay every notification should be rescheduled.\n * @return {Observable<T>} Observable that emits the same notifications as the source Observable,\n * but with provided scheduler.\n *\n * @method observeOn\n * @owner Observable\n */\nfunction observeOn(scheduler, delay) {\n    if (delay === void 0) { delay = 0; }\n    return this.lift(new ObserveOnOperator(scheduler, delay));\n}\nexports.observeOn = observeOn;\nvar ObserveOnOperator = (function () {\n    function ObserveOnOperator(scheduler, delay) {\n        if (delay === void 0) { delay = 0; }\n        this.scheduler = scheduler;\n        this.delay = delay;\n    }\n    ObserveOnOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ObserveOnSubscriber(subscriber, this.scheduler, this.delay));\n    };\n    return ObserveOnOperator;\n}());\nexports.ObserveOnOperator = ObserveOnOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ObserveOnSubscriber = (function (_super) {\n    __extends(ObserveOnSubscriber, _super);\n    function ObserveOnSubscriber(destination, scheduler, delay) {\n        if (delay === void 0) { delay = 0; }\n        _super.call(this, destination);\n        this.scheduler = scheduler;\n        this.delay = delay;\n    }\n    ObserveOnSubscriber.dispatch = function (arg) {\n        var notification = arg.notification, destination = arg.destination;\n        notification.observe(destination);\n        this.unsubscribe();\n    };\n    ObserveOnSubscriber.prototype.scheduleMessage = function (notification) {\n        this.add(this.scheduler.schedule(ObserveOnSubscriber.dispatch, this.delay, new ObserveOnMessage(notification, this.destination)));\n    };\n    ObserveOnSubscriber.prototype._next = function (value) {\n        this.scheduleMessage(Notification_1.Notification.createNext(value));\n    };\n    ObserveOnSubscriber.prototype._error = function (err) {\n        this.scheduleMessage(Notification_1.Notification.createError(err));\n    };\n    ObserveOnSubscriber.prototype._complete = function () {\n        this.scheduleMessage(Notification_1.Notification.createComplete());\n    };\n    return ObserveOnSubscriber;\n}(Subscriber_1.Subscriber));\nexports.ObserveOnSubscriber = ObserveOnSubscriber;\nvar ObserveOnMessage = (function () {\n    function ObserveOnMessage(notification, destination) {\n        this.notification = notification;\n        this.destination = destination;\n    }\n    return ObserveOnMessage;\n}());\nexports.ObserveOnMessage = ObserveOnMessage;\n//# sourceMappingURL=observeOn.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/operator/observeOn.js\n// module id = 72\n// module chunks = 2","\"use strict\";\nvar Observable_1 = require('./Observable');\n/**\n * Represents a push-based event or value that an {@link Observable} can emit.\n * This class is particularly useful for operators that manage notifications,\n * like {@link materialize}, {@link dematerialize}, {@link observeOn}, and\n * others. Besides wrapping the actual delivered value, it also annotates it\n * with metadata of, for instance, what type of push message it is (`next`,\n * `error`, or `complete`).\n *\n * @see {@link materialize}\n * @see {@link dematerialize}\n * @see {@link observeOn}\n *\n * @class Notification<T>\n */\nvar Notification = (function () {\n    function Notification(kind, value, error) {\n        this.kind = kind;\n        this.value = value;\n        this.error = error;\n        this.hasValue = kind === 'N';\n    }\n    /**\n     * Delivers to the given `observer` the value wrapped by this Notification.\n     * @param {Observer} observer\n     * @return\n     */\n    Notification.prototype.observe = function (observer) {\n        switch (this.kind) {\n            case 'N':\n                return observer.next && observer.next(this.value);\n            case 'E':\n                return observer.error && observer.error(this.error);\n            case 'C':\n                return observer.complete && observer.complete();\n        }\n    };\n    /**\n     * Given some {@link Observer} callbacks, deliver the value represented by the\n     * current Notification to the correctly corresponding callback.\n     * @param {function(value: T): void} next An Observer `next` callback.\n     * @param {function(err: any): void} [error] An Observer `error` callback.\n     * @param {function(): void} [complete] An Observer `complete` callback.\n     * @return {any}\n     */\n    Notification.prototype.do = function (next, error, complete) {\n        var kind = this.kind;\n        switch (kind) {\n            case 'N':\n                return next && next(this.value);\n            case 'E':\n                return error && error(this.error);\n            case 'C':\n                return complete && complete();\n        }\n    };\n    /**\n     * Takes an Observer or its individual callback functions, and calls `observe`\n     * or `do` methods accordingly.\n     * @param {Observer|function(value: T): void} nextOrObserver An Observer or\n     * the `next` callback.\n     * @param {function(err: any): void} [error] An Observer `error` callback.\n     * @param {function(): void} [complete] An Observer `complete` callback.\n     * @return {any}\n     */\n    Notification.prototype.accept = function (nextOrObserver, error, complete) {\n        if (nextOrObserver && typeof nextOrObserver.next === 'function') {\n            return this.observe(nextOrObserver);\n        }\n        else {\n            return this.do(nextOrObserver, error, complete);\n        }\n    };\n    /**\n     * Returns a simple Observable that just delivers the notification represented\n     * by this Notification instance.\n     * @return {any}\n     */\n    Notification.prototype.toObservable = function () {\n        var kind = this.kind;\n        switch (kind) {\n            case 'N':\n                return Observable_1.Observable.of(this.value);\n            case 'E':\n                return Observable_1.Observable.throw(this.error);\n            case 'C':\n                return Observable_1.Observable.empty();\n        }\n        throw new Error('unexpected notification kind value');\n    };\n    /**\n     * A shortcut to create a Notification instance of the type `next` from a\n     * given value.\n     * @param {T} value The `next` value.\n     * @return {Notification<T>} The \"next\" Notification representing the\n     * argument.\n     */\n    Notification.createNext = function (value) {\n        if (typeof value !== 'undefined') {\n            return new Notification('N', value);\n        }\n        return Notification.undefinedValueNotification;\n    };\n    /**\n     * A shortcut to create a Notification instance of the type `error` from a\n     * given error.\n     * @param {any} [err] The `error` error.\n     * @return {Notification<T>} The \"error\" Notification representing the\n     * argument.\n     */\n    Notification.createError = function (err) {\n        return new Notification('E', undefined, err);\n    };\n    /**\n     * A shortcut to create a Notification instance of the type `complete`.\n     * @return {Notification<any>} The valueless \"complete\" Notification.\n     */\n    Notification.createComplete = function () {\n        return Notification.completeNotification;\n    };\n    Notification.completeNotification = new Notification('C');\n    Notification.undefinedValueNotification = new Notification('N', undefined);\n    return Notification;\n}());\nexports.Notification = Notification;\n//# sourceMappingURL=Notification.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/Notification.js\n// module id = 73\n// module chunks = 2","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\n/**\n * Returns an Observable that emits whether or not every item of the source satisfies the condition specified.\n *\n * @example <caption>A simple example emitting true if all elements are less than 5, false otherwise</caption>\n *  Observable.of(1, 2, 3, 4, 5, 6)\n *     .every(x => x < 5)\n *     .subscribe(x => console.log(x)); // -> false\n *\n * @param {function} predicate A function for determining if an item meets a specified condition.\n * @param {any} [thisArg] Optional object to use for `this` in the callback.\n * @return {Observable} An Observable of booleans that determines if all items of the source Observable meet the condition specified.\n * @method every\n * @owner Observable\n */\nfunction every(predicate, thisArg) {\n    return this.lift(new EveryOperator(predicate, thisArg, this));\n}\nexports.every = every;\nvar EveryOperator = (function () {\n    function EveryOperator(predicate, thisArg, source) {\n        this.predicate = predicate;\n        this.thisArg = thisArg;\n        this.source = source;\n    }\n    EveryOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new EverySubscriber(observer, this.predicate, this.thisArg, this.source));\n    };\n    return EveryOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar EverySubscriber = (function (_super) {\n    __extends(EverySubscriber, _super);\n    function EverySubscriber(destination, predicate, thisArg, source) {\n        _super.call(this, destination);\n        this.predicate = predicate;\n        this.thisArg = thisArg;\n        this.source = source;\n        this.index = 0;\n        this.thisArg = thisArg || this;\n    }\n    EverySubscriber.prototype.notifyComplete = function (everyValueMatch) {\n        this.destination.next(everyValueMatch);\n        this.destination.complete();\n    };\n    EverySubscriber.prototype._next = function (value) {\n        var result = false;\n        try {\n            result = this.predicate.call(this.thisArg, value, this.index++, this.source);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (!result) {\n            this.notifyComplete(false);\n        }\n    };\n    EverySubscriber.prototype._complete = function () {\n        this.notifyComplete(true);\n    };\n    return EverySubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=every.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/operator/every.js\n// module id = 74\n// module chunks = 2","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar EmptyError_1 = require('../util/EmptyError');\n/**\n * Emits only the first value (or the first value that meets some condition)\n * emitted by the source Observable.\n *\n * <span class=\"informal\">Emits only the first value. Or emits only the first\n * value that passes some test.</span>\n *\n * <img src=\"./img/first.png\" width=\"100%\">\n *\n * If called with no arguments, `first` emits the first value of the source\n * Observable, then completes. If called with a `predicate` function, `first`\n * emits the first value of the source that matches the specified condition. It\n * may also take a `resultSelector` function to produce the output value from\n * the input value, and a `defaultValue` to emit in case the source completes\n * before it is able to emit a valid value. Throws an error if `defaultValue`\n * was not provided and a matching element is not found.\n *\n * @example <caption>Emit only the first click that happens on the DOM</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.first();\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Emits the first click that happens on a DIV</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.first(ev => ev.target.tagName === 'DIV');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link filter}\n * @see {@link find}\n * @see {@link take}\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} [predicate]\n * An optional function called with each item to test for condition matching.\n * @param {function(value: T, index: number): R} [resultSelector] A function to\n * produce the value on the output Observable based on the values\n * and the indices of the source Observable. The arguments passed to this\n * function are:\n * - `value`: the value that was emitted on the source.\n * - `index`: the \"index\" of the value from the source.\n * @param {R} [defaultValue] The default value emitted in case no valid value\n * was found on the source.\n * @return {Observable<T|R>} An Observable of the first item that matches the\n * condition.\n * @method first\n * @owner Observable\n */\nfunction first(predicate, resultSelector, defaultValue) {\n    return this.lift(new FirstOperator(predicate, resultSelector, defaultValue, this));\n}\nexports.first = first;\nvar FirstOperator = (function () {\n    function FirstOperator(predicate, resultSelector, defaultValue, source) {\n        this.predicate = predicate;\n        this.resultSelector = resultSelector;\n        this.defaultValue = defaultValue;\n        this.source = source;\n    }\n    FirstOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new FirstSubscriber(observer, this.predicate, this.resultSelector, this.defaultValue, this.source));\n    };\n    return FirstOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar FirstSubscriber = (function (_super) {\n    __extends(FirstSubscriber, _super);\n    function FirstSubscriber(destination, predicate, resultSelector, defaultValue, source) {\n        _super.call(this, destination);\n        this.predicate = predicate;\n        this.resultSelector = resultSelector;\n        this.defaultValue = defaultValue;\n        this.source = source;\n        this.index = 0;\n        this.hasCompleted = false;\n        this._emitted = false;\n    }\n    FirstSubscriber.prototype._next = function (value) {\n        var index = this.index++;\n        if (this.predicate) {\n            this._tryPredicate(value, index);\n        }\n        else {\n            this._emit(value, index);\n        }\n    };\n    FirstSubscriber.prototype._tryPredicate = function (value, index) {\n        var result;\n        try {\n            result = this.predicate(value, index, this.source);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (result) {\n            this._emit(value, index);\n        }\n    };\n    FirstSubscriber.prototype._emit = function (value, index) {\n        if (this.resultSelector) {\n            this._tryResultSelector(value, index);\n            return;\n        }\n        this._emitFinal(value);\n    };\n    FirstSubscriber.prototype._tryResultSelector = function (value, index) {\n        var result;\n        try {\n            result = this.resultSelector(value, index);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this._emitFinal(result);\n    };\n    FirstSubscriber.prototype._emitFinal = function (value) {\n        var destination = this.destination;\n        if (!this._emitted) {\n            this._emitted = true;\n            destination.next(value);\n            destination.complete();\n            this.hasCompleted = true;\n        }\n    };\n    FirstSubscriber.prototype._complete = function () {\n        var destination = this.destination;\n        if (!this.hasCompleted && typeof this.defaultValue !== 'undefined') {\n            destination.next(this.defaultValue);\n            destination.complete();\n        }\n        else if (!this.hasCompleted) {\n            destination.error(new EmptyError_1.EmptyError);\n        }\n    };\n    return FirstSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=first.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/operator/first.js\n// module id = 75\n// module chunks = 2","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar EmptyError_1 = require('../util/EmptyError');\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that emits only the last item emitted by the source Observable.\n * It optionally takes a predicate function as a parameter, in which case, rather than emitting\n * the last item from the source Observable, the resulting Observable will emit the last item\n * from the source Observable that satisfies the predicate.\n *\n * <img src=\"./img/last.png\" width=\"100%\">\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * @param {function} predicate - The condition any source emitted item has to satisfy.\n * @return {Observable} An Observable that emits only the last item satisfying the given condition\n * from the source, or an NoSuchElementException if no such items are emitted.\n * @throws - Throws if no items that match the predicate are emitted by the source Observable.\n * @method last\n * @owner Observable\n */\nfunction last(predicate, resultSelector, defaultValue) {\n    return this.lift(new LastOperator(predicate, resultSelector, defaultValue, this));\n}\nexports.last = last;\nvar LastOperator = (function () {\n    function LastOperator(predicate, resultSelector, defaultValue, source) {\n        this.predicate = predicate;\n        this.resultSelector = resultSelector;\n        this.defaultValue = defaultValue;\n        this.source = source;\n    }\n    LastOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new LastSubscriber(observer, this.predicate, this.resultSelector, this.defaultValue, this.source));\n    };\n    return LastOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar LastSubscriber = (function (_super) {\n    __extends(LastSubscriber, _super);\n    function LastSubscriber(destination, predicate, resultSelector, defaultValue, source) {\n        _super.call(this, destination);\n        this.predicate = predicate;\n        this.resultSelector = resultSelector;\n        this.defaultValue = defaultValue;\n        this.source = source;\n        this.hasValue = false;\n        this.index = 0;\n        if (typeof defaultValue !== 'undefined') {\n            this.lastValue = defaultValue;\n            this.hasValue = true;\n        }\n    }\n    LastSubscriber.prototype._next = function (value) {\n        var index = this.index++;\n        if (this.predicate) {\n            this._tryPredicate(value, index);\n        }\n        else {\n            if (this.resultSelector) {\n                this._tryResultSelector(value, index);\n                return;\n            }\n            this.lastValue = value;\n            this.hasValue = true;\n        }\n    };\n    LastSubscriber.prototype._tryPredicate = function (value, index) {\n        var result;\n        try {\n            result = this.predicate(value, index, this.source);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (result) {\n            if (this.resultSelector) {\n                this._tryResultSelector(value, index);\n                return;\n            }\n            this.lastValue = value;\n            this.hasValue = true;\n        }\n    };\n    LastSubscriber.prototype._tryResultSelector = function (value, index) {\n        var result;\n        try {\n            result = this.resultSelector(value, index);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.lastValue = result;\n        this.hasValue = true;\n    };\n    LastSubscriber.prototype._complete = function () {\n        var destination = this.destination;\n        if (this.hasValue) {\n            destination.next(this.lastValue);\n            destination.complete();\n        }\n        else {\n            destination.error(new EmptyError_1.EmptyError);\n        }\n    };\n    return LastSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=last.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/operator/last.js\n// module id = 76\n// module chunks = 2","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\n/* tslint:enable:max-line-length */\n/**\n * Applies an accumulator function over the source Observable, and returns the\n * accumulated result when the source completes, given an optional seed value.\n *\n * <span class=\"informal\">Combines together all values emitted on the source,\n * using an accumulator function that knows how to join a new source value into\n * the accumulation from the past.</span>\n *\n * <img src=\"./img/reduce.png\" width=\"100%\">\n *\n * Like\n * [Array.prototype.reduce()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce),\n * `reduce` applies an `accumulator` function against an accumulation and each\n * value of the source Observable (from the past) to reduce it to a single\n * value, emitted on the output Observable. Note that `reduce` will only emit\n * one value, only when the source Observable completes. It is equivalent to\n * applying operator {@link scan} followed by operator {@link last}.\n *\n * Returns an Observable that applies a specified `accumulator` function to each\n * item emitted by the source Observable. If a `seed` value is specified, then\n * that value will be used as the initial value for the accumulator. If no seed\n * value is specified, the first item of the source is used as the seed.\n *\n * @example <caption>Count the number of click events that happened in 5 seconds</caption>\n * var clicksInFiveSeconds = Rx.Observable.fromEvent(document, 'click')\n *   .takeUntil(Rx.Observable.interval(5000));\n * var ones = clicksInFiveSeconds.mapTo(1);\n * var seed = 0;\n * var count = ones.reduce((acc, one) => acc + one, seed);\n * count.subscribe(x => console.log(x));\n *\n * @see {@link count}\n * @see {@link expand}\n * @see {@link mergeScan}\n * @see {@link scan}\n *\n * @param {function(acc: R, value: T, index: number): R} accumulator The accumulator function\n * called on each source value.\n * @param {R} [seed] The initial accumulation value.\n * @return {Observable<R>} An Observable that emits a single value that is the\n * result of accumulating the values emitted by the source Observable.\n * @method reduce\n * @owner Observable\n */\nfunction reduce(accumulator, seed) {\n    var hasSeed = false;\n    // providing a seed of `undefined` *should* be valid and trigger\n    // hasSeed! so don't use `seed !== undefined` checks!\n    // For this reason, we have to check it here at the original call site\n    // otherwise inside Operator/Subscriber we won't know if `undefined`\n    // means they didn't provide anything or if they literally provided `undefined`\n    if (arguments.length >= 2) {\n        hasSeed = true;\n    }\n    return this.lift(new ReduceOperator(accumulator, seed, hasSeed));\n}\nexports.reduce = reduce;\nvar ReduceOperator = (function () {\n    function ReduceOperator(accumulator, seed, hasSeed) {\n        if (hasSeed === void 0) { hasSeed = false; }\n        this.accumulator = accumulator;\n        this.seed = seed;\n        this.hasSeed = hasSeed;\n    }\n    ReduceOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ReduceSubscriber(subscriber, this.accumulator, this.seed, this.hasSeed));\n    };\n    return ReduceOperator;\n}());\nexports.ReduceOperator = ReduceOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ReduceSubscriber = (function (_super) {\n    __extends(ReduceSubscriber, _super);\n    function ReduceSubscriber(destination, accumulator, seed, hasSeed) {\n        _super.call(this, destination);\n        this.accumulator = accumulator;\n        this.hasSeed = hasSeed;\n        this.index = 0;\n        this.hasValue = false;\n        this.acc = seed;\n        if (!this.hasSeed) {\n            this.index++;\n        }\n    }\n    ReduceSubscriber.prototype._next = function (value) {\n        if (this.hasValue || (this.hasValue = this.hasSeed)) {\n            this._tryReduce(value);\n        }\n        else {\n            this.acc = value;\n            this.hasValue = true;\n        }\n    };\n    ReduceSubscriber.prototype._tryReduce = function (value) {\n        var result;\n        try {\n            result = this.accumulator(this.acc, value, this.index++);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.acc = result;\n    };\n    ReduceSubscriber.prototype._complete = function () {\n        if (this.hasValue || this.hasSeed) {\n            this.destination.next(this.acc);\n        }\n        this.destination.complete();\n    };\n    return ReduceSubscriber;\n}(Subscriber_1.Subscriber));\nexports.ReduceSubscriber = ReduceSubscriber;\n//# sourceMappingURL=reduce.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/operator/reduce.js\n// module id = 77\n// module chunks = 2","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/**\n * Catches errors on the observable to be handled by returning a new observable or throwing an error.\n *\n * <img src=\"./img/catch.png\" width=\"100%\">\n *\n * @example <caption>Continues with a different Observable when there's an error</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n * \t   if (n == 4) {\n * \t     throw 'four!';\n *     }\n *\t   return n;\n *   })\n *   .catch(err => Observable.of('I', 'II', 'III', 'IV', 'V'))\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, I, II, III, IV, V\n *\n * @example <caption>Retries the caught source Observable again in case of error, similar to retry() operator</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n * \t   if (n === 4) {\n * \t     throw 'four!';\n *     }\n * \t   return n;\n *   })\n *   .catch((err, caught) => caught)\n *   .take(30)\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, 1, 2, 3, ...\n *\n * @example <caption>Throws a new error when the source Observable throws an error</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n *     if (n == 4) {\n *       throw 'four!';\n *     }\n *     return n;\n *   })\n *   .catch(err => {\n *     throw 'error in source. Details: ' + err;\n *   })\n *   .subscribe(\n *     x => console.log(x),\n *     err => console.log(err)\n *   );\n *   // 1, 2, 3, error in source. Details: four!\n *\n * @param {function} selector a function that takes as arguments `err`, which is the error, and `caught`, which\n *  is the source observable, in case you'd like to \"retry\" that observable by returning it again. Whatever observable\n *  is returned by the `selector` will be used to continue the observable chain.\n * @return {Observable} An observable that originates from either the source or the observable returned by the\n *  catch `selector` function.\n * @method catch\n * @name catch\n * @owner Observable\n */\nfunction _catch(selector) {\n    var operator = new CatchOperator(selector);\n    var caught = this.lift(operator);\n    return (operator.caught = caught);\n}\nexports._catch = _catch;\nvar CatchOperator = (function () {\n    function CatchOperator(selector) {\n        this.selector = selector;\n    }\n    CatchOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new CatchSubscriber(subscriber, this.selector, this.caught));\n    };\n    return CatchOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar CatchSubscriber = (function (_super) {\n    __extends(CatchSubscriber, _super);\n    function CatchSubscriber(destination, selector, caught) {\n        _super.call(this, destination);\n        this.selector = selector;\n        this.caught = caught;\n    }\n    // NOTE: overriding `error` instead of `_error` because we don't want\n    // to have this flag this subscriber as `isStopped`. We can mimic the\n    // behavior of the RetrySubscriber (from the `retry` operator), where\n    // we unsubscribe from our source chain, reset our Subscriber flags,\n    // then subscribe to the selector result.\n    CatchSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var result = void 0;\n            try {\n                result = this.selector(err, this.caught);\n            }\n            catch (err2) {\n                _super.prototype.error.call(this, err2);\n                return;\n            }\n            this._unsubscribeAndRecycle();\n            this.add(subscribeToResult_1.subscribeToResult(this, result));\n        }\n    };\n    return CatchSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=catch.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/operator/catch.js\n// module id = 78\n// module chunks = 2","\"use strict\";\nvar mergeAll_1 = require('./mergeAll');\n/* tslint:enable:max-line-length */\n/**\n * Converts a higher-order Observable into a first-order Observable by\n * concatenating the inner Observables in order.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by putting one\n * inner Observable after the other.</span>\n *\n * <img src=\"./img/concatAll.png\" width=\"100%\">\n *\n * Joins every Observable emitted by the source (a higher-order Observable), in\n * a serial fashion. It subscribes to each inner Observable only after the\n * previous inner Observable has completed, and merges all of their values into\n * the returned observable.\n *\n * __Warning:__ If the source Observable emits Observables quickly and\n * endlessly, and the inner Observables it emits generally complete slower than\n * the source emits, you can run into memory issues as the incoming Observables\n * collect in an unbounded buffer.\n *\n * Note: `concatAll` is equivalent to `mergeAll` with concurrency parameter set\n * to `1`.\n *\n * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map(ev => Rx.Observable.interval(1000).take(4));\n * var firstOrder = higherOrder.concatAll();\n * firstOrder.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n *\n * @see {@link combineAll}\n * @see {@link concat}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n * @see {@link exhaust}\n * @see {@link mergeAll}\n * @see {@link switch}\n * @see {@link zipAll}\n *\n * @return {Observable} An Observable emitting values from all the inner\n * Observables concatenated.\n * @method concatAll\n * @owner Observable\n */\nfunction concatAll() {\n    return this.lift(new mergeAll_1.MergeAllOperator(1));\n}\nexports.concatAll = concatAll;\n//# sourceMappingURL=concatAll.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/operator/concatAll.js\n// module id = 79\n// module chunks = 2","module.exports = \"<h1>Home</h1>\\r\\n<p>\\r\\n    Welcome to the home page...\\r\\n</p>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./components/root-module/home/home.component.html\n// module id = 80\n// module chunks = 2","module.exports = \"\\r\\n<h1>Page not found</h1>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./components/root-module/page-not-found/page-not-found.component.html\n// module id = 81\n// module chunks = 2","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'internal-root',\r\n    template: require('./root.component.html')\r\n})\r\nexport class RootComponent {         \r\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular-router-loader/src!./components/root-module/root.component.ts","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-2\\\">\\r\\n            <ul class='list-unstyled'>\\r\\n                <li>\\r\\n                    <a routerLink=\\\"/home\\\" routerLinkActive=\\\"active-link\\\">Home</a>\\r\\n                </li>\\r\\n                <li>\\r\\n                    <a routerLink=\\\"/employees\\\" routerLinkActive=\\\"active-link\\\">Employees</a>\\r\\n                </li>\\r\\n            </ul>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-10\\\">\\r\\n            <router-outlet></router-outlet>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./components/root-module/root.component.html\n// module id = 84\n// module chunks = 2"],"sourceRoot":""}